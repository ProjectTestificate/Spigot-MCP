---a/net/minecraft/inventory/ContainerChest.java
+++b/net/minecraft/inventory/ContainerChest.java
@@ -1,72 +1,96 @@
 package net.minecraft.inventory;
 
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.item.ItemStack;
 
-public class ContainerChest extends Container
-{
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest;
+import org.bukkit.craftbukkit.inventory.CraftInventoryPlayer;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+
+public class ContainerChest extends Container {
+
     private IInventory lowerChestInventory;
     private int numRows;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
+
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventory inventory;
+        if (this.lowerChestInventory instanceof InventoryPlayer) {
+            inventory = new CraftInventoryPlayer((InventoryPlayer) this.lowerChestInventory);
+        } else if (this.lowerChestInventory instanceof InventoryLargeChest) {
+            inventory = new CraftInventoryDoubleChest((InventoryLargeChest) this.lowerChestInventory);
+        } else {
+            inventory = new CraftInventory(this.lowerChestInventory);
+        }
+
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+
+    // CraftBukkit end
     private static final String __OBFID = "CL_00001742";
 
-    public ContainerChest(IInventory playerInventory, IInventory chestInventory, EntityPlayer player)
-    {
+    public ContainerChest(IInventory playerInventory, IInventory chestInventory, EntityPlayer player) {
         this.lowerChestInventory = chestInventory;
         this.numRows = chestInventory.getSizeInventory() / 9;
         chestInventory.openInventory(player);
         int i = (this.numRows - 4) * 18;
+
+        // CraftBukkit start - Save player
+        // TODO: Should we check to make sure it really is an InventoryPlayer?
+        this.player = (InventoryPlayer) playerInventory;
+        // CraftBukkit end
+
         int j;
         int k;
 
-        for (j = 0; j < this.numRows; ++j)
-        {
-            for (k = 0; k < 9; ++k)
-            {
+        for (j = 0; j < this.numRows; ++j) {
+            for (k = 0; k < 9; ++k) {
                 this.addSlotToContainer(new Slot(chestInventory, k + j * 9, 8 + k * 18, 18 + j * 18));
             }
         }
 
-        for (j = 0; j < 3; ++j)
-        {
-            for (k = 0; k < 9; ++k)
-            {
+        for (j = 0; j < 3; ++j) {
+            for (k = 0; k < 9; ++k) {
                 this.addSlotToContainer(new Slot(playerInventory, k + j * 9 + 9, 8 + k * 18, 103 + j * 18 + i));
             }
         }
 
-        for (j = 0; j < 9; ++j)
-        {
+        for (j = 0; j < 9; ++j) {
             this.addSlotToContainer(new Slot(playerInventory, j, 8 + j * 18, 161 + i));
         }
     }
 
-    public boolean canInteractWith(EntityPlayer playerIn)
-    {
+    public boolean canInteractWith(EntityPlayer playerIn) {
         return this.lowerChestInventory.isUseableByPlayer(playerIn);
     }
 
-    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
-    {
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index) {
         ItemStack itemstack = null;
-        Slot slot = (Slot)this.inventorySlots.get(index);
+        Slot slot = (Slot) this.inventorySlots.get(index);
 
-        if (slot != null && slot.getHasStack())
-        {
+        if (slot != null && slot.getHasStack()) {
             ItemStack itemstack1 = slot.getStack();
             itemstack = itemstack1.copy();
 
-            if (index < this.numRows * 9)
-            {
-                if (!this.mergeItemStack(itemstack1, this.numRows * 9, this.inventorySlots.size(), true))
-                {
+            if (index < this.numRows * 9) {
+                if (!this.mergeItemStack(itemstack1, this.numRows * 9, this.inventorySlots.size(), true)) {
                     return null;
                 }
-            }
-            else if (!this.mergeItemStack(itemstack1, 0, this.numRows * 9, false))
-            {
+            } else if (!this.mergeItemStack(itemstack1, 0, this.numRows * 9, false)) {
                 return null;
             }
 
-            if (itemstack1.stackSize == 0)
-            {
-                slot.putStack((ItemStack)null);
-            }
-            else
-            {
+            if (itemstack1.stackSize == 0) {
+                slot.putStack((ItemStack) null);
+            } else {
                 slot.onSlotChanged();
             }
         }
@@ -80,15 +80,12 @@
         return itemstack;
     }
 
-    public void onContainerClosed(EntityPlayer playerIn)
-    {
+    public void onContainerClosed(EntityPlayer playerIn) {
         super.onContainerClosed(playerIn);
         this.lowerChestInventory.closeInventory(playerIn);
     }
 
-    public IInventory getLowerChestInventory()
-    {
+    public IInventory getLowerChestInventory() {
         return this.lowerChestInventory;
     }
-}
+}
