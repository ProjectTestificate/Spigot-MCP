--- decompiled\net\minecraft\inventory\InventoryCrafting.java
+++ src\main\java\net\minecraft\inventory\InventoryCrafting.java
@@ -1,21 +1,80 @@
 package net.minecraft.inventory;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
+import net.minecraft.item.crafting.IRecipe;
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.IChatComponent;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.inventory.InventoryHolder;
+
 public class InventoryCrafting implements IInventory
 {
+
     private final ItemStack[] stackList;
     private final int inventoryWidth;
     private final int inventoryHeight;
     private final Container eventHandler;
     private static final String __OBFID = "CL_00001743";
 
+    // CraftBukkit start - add fields
+    public List transaction = new ArrayList();
+    public IRecipe currentRecipe;
+    public IInventory resultInventory;
+    private EntityPlayer owner;
+    private int maxStack = MAX_STACK;
+
+    public net.minecraft.item.ItemStack[] getContents()
+    {
+        return this.stackList;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public InventoryType getInvType()
+    {
+        return stackList.length == 4 ? InventoryType.CRAFTING : InventoryType.WORKBENCH;
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public java.util.List getViewers()
+    {
+        return transaction;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        return owner.getBukkitEntity();
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+        resultInventory.setMaxStackSize(size);
+    }
+
+    public InventoryCrafting(Container container, int i, int j, EntityPlayer player)
+    {
+        this(container, i, j);
+        this.owner = player;
+    }
+    // CraftBukkit end
+
     public InventoryCrafting(Container p_i1807_1_, int width, int height)
     {
         int k = width * height;
         this.stackList = new ItemStack[k];
         this.eventHandler = p_i1807_1_;
@@ -108,20 +167,26 @@
     public int getInventoryStackLimit()
     {
         return 64;
     }
 
-    public void markDirty() {}
+    public void markDirty()
+    {
+    }
 
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return true;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
@@ -129,11 +194,13 @@
     public int getField(int id)
     {
         return 0;
     }
 
-    public void setField(int id, int value) {}
+    public void setField(int id, int value)
+    {
+    }
 
     public int getFieldCount()
     {
         return 0;
     }
