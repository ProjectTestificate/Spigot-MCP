--- decompiled\net\minecraft\inventory\ContainerDispenser.java
+++ src\main\java\net\minecraft\inventory\ContainerDispenser.java
@@ -1,85 +1,95 @@
 package net.minecraft.inventory;
 
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.item.ItemStack;
 
-public class ContainerDispenser extends Container
-{
-    private IInventory dispenserInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+
+public class ContainerDispenser extends Container {
+
+    public IInventory dispenserInventory; // CraftBukkit - private -> public
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
+    // CraftBukkit end
     private static final String __OBFID = "CL_00001763";
 
-    public ContainerDispenser(IInventory playerInventory, IInventory dispenserInventoryIn)
-    {
+    public ContainerDispenser(IInventory playerInventory, IInventory dispenserInventoryIn) {
         this.dispenserInventory = dispenserInventoryIn;
+        // CraftBukkit start - Save player
+        // TODO: Should we check to make sure it really is an InventoryPlayer?
+        this.player = (InventoryPlayer) playerInventory;
+        // CraftBukkit end
+
         int i;
         int j;
 
-        for (i = 0; i < 3; ++i)
-        {
-            for (j = 0; j < 3; ++j)
-            {
+        for (i = 0; i < 3; ++i) {
+            for (j = 0; j < 3; ++j) {
                 this.addSlotToContainer(new Slot(dispenserInventoryIn, j + i * 3, 62 + j * 18, 17 + i * 18));
             }
         }
 
-        for (i = 0; i < 3; ++i)
-        {
-            for (j = 0; j < 9; ++j)
-            {
+        for (i = 0; i < 3; ++i) {
+            for (j = 0; j < 9; ++j) {
                 this.addSlotToContainer(new Slot(playerInventory, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
             }
         }
 
-        for (i = 0; i < 9; ++i)
-        {
+        for (i = 0; i < 9; ++i) {
             this.addSlotToContainer(new Slot(playerInventory, i, 8 + i * 18, 142));
         }
     }
 
-    public boolean canInteractWith(EntityPlayer playerIn)
-    {
+    public boolean canInteractWith(EntityPlayer playerIn) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return this.dispenserInventory.isUseableByPlayer(playerIn);
     }
 
-    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
-    {
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index) {
         ItemStack itemstack = null;
-        Slot slot = (Slot)this.inventorySlots.get(index);
+        Slot slot = (Slot) this.inventorySlots.get(index);
 
-        if (slot != null && slot.getHasStack())
-        {
+        if (slot != null && slot.getHasStack()) {
             ItemStack itemstack1 = slot.getStack();
             itemstack = itemstack1.copy();
 
-            if (index < 9)
-            {
-                if (!this.mergeItemStack(itemstack1, 9, 45, true))
-                {
+            if (index < 9) {
+                if (!this.mergeItemStack(itemstack1, 9, 45, true)) {
                     return null;
                 }
-            }
-            else if (!this.mergeItemStack(itemstack1, 0, 9, false))
-            {
+            } else if (!this.mergeItemStack(itemstack1, 0, 9, false)) {
                 return null;
             }
 
-            if (itemstack1.stackSize == 0)
-            {
-                slot.putStack((ItemStack)null);
-            }
-            else
-            {
+            if (itemstack1.stackSize == 0) {
+                slot.putStack((ItemStack) null);
+            } else {
                 slot.onSlotChanged();
             }
 
-            if (itemstack1.stackSize == itemstack.stackSize)
-            {
+            if (itemstack1.stackSize == itemstack.stackSize) {
                 return null;
             }
 
             slot.onPickupFromSlot(playerIn, itemstack1);
         }
 
         return itemstack;
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventory inventory = new CraftInventory(this.dispenserInventory);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
