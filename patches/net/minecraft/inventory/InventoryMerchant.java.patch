--- decompiled\net\minecraft\inventory\InventoryMerchant.java
+++ src\main\java\net\minecraft\inventory\InventoryMerchant.java
@@ -1,25 +1,69 @@
 package net.minecraft.inventory;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import net.minecraft.entity.IMerchant;
+import net.minecraft.entity.passive.EntityVillager;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.IChatComponent;
 import net.minecraft.village.MerchantRecipe;
 import net.minecraft.village.MerchantRecipeList;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.entity.CraftVillager;
+import org.bukkit.inventory.InventoryHolder;
+
 public class InventoryMerchant implements IInventory
 {
+
     private final IMerchant theMerchant;
     private ItemStack[] theInventory = new ItemStack[3];
     private final EntityPlayer thePlayer;
     private MerchantRecipe currentRecipe;
     private int currentRecipeIndex;
     private static final String __OBFID = "CL_00001756";
 
+    // CraftBukkit start - add fields and methods
+    public List transaction = new ArrayList();
+    private int maxStack = MAX_STACK;
+
+    public net.minecraft.item.ItemStack[] getContents()
+    {
+        return this.theInventory;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public List getViewers()
+    {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int i)
+    {
+        maxStack = i;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        return (CraftVillager)((EntityVillager)this.theMerchant).getBukkitEntity();
+    }
+    // CraftBukkit end
+
     public InventoryMerchant(EntityPlayer p_i1820_1_, IMerchant p_i1820_2_)
     {
         this.thePlayer = p_i1820_1_;
         this.theMerchant = p_i1820_2_;
     }
@@ -130,21 +174,25 @@
         return (IChatComponent)(this.hasCustomName() ? new ChatComponentText(this.getName()) : new ChatComponentTranslation(this.getName(), new Object[0]));
     }
 
     public int getInventoryStackLimit()
     {
-        return 64;
+        return maxStack; // CraftBukkit
     }
 
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return this.theMerchant.getCustomer() == player;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
@@ -221,11 +269,13 @@
     public int getField(int id)
     {
         return 0;
     }
 
-    public void setField(int id, int value) {}
+    public void setField(int id, int value)
+    {
+    }
 
     public int getFieldCount()
     {
         return 0;
     }
