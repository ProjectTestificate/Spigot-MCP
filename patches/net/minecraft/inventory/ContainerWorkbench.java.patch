--- decompiled\net\minecraft\inventory\ContainerWorkbench.java
+++ src\main\java\net\minecraft\inventory\ContainerWorkbench.java
@@ -1,25 +1,42 @@
 package net.minecraft.inventory;
 
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.init.Blocks;
+import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.crafting.CraftingManager;
+import net.minecraft.network.play.server.S2FPacketSetSlot;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+
 public class ContainerWorkbench extends Container
 {
-    public InventoryCrafting craftMatrix = new InventoryCrafting(this, 3, 3);
-    public IInventory craftResult = new InventoryCraftResult();
+
+    public InventoryCrafting craftMatrix; // CraftBukkit - move initialization into constructor
+    public IInventory craftResult; // CraftBukkit - move initialization into constructor
     private World worldObj;
     private BlockPos field_178145_h;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
+    // CraftBukkit end
     private static final String __OBFID = "CL_00001744";
 
     public ContainerWorkbench(InventoryPlayer playerInventory, World worldIn, BlockPos p_i45800_3_)
     {
+        // CraftBukkit start - Switched order of IInventory construction and stored player
+        this.craftResult = new InventoryCraftResult();
+        this.craftMatrix = new InventoryCrafting(this, 3, 3, playerInventory.player); // CraftBukkit - pass player
+        this.craftMatrix.resultInventory = this.craftResult;
+        this.player = playerInventory;
+        // CraftBukkit end
         this.worldObj = worldIn;
         this.field_178145_h = p_i45800_3_;
         this.addSlotToContainer(new SlotCrafting(playerInventory.player, this.craftMatrix, this.craftResult, 0, 124, 35));
         int i;
         int j;
@@ -48,11 +65,30 @@
         this.onCraftMatrixChanged(this.craftMatrix);
     }
 
     public void onCraftMatrixChanged(IInventory inventoryIn)
     {
-        this.craftResult.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.worldObj));
+        // this.craftResult.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.worldObj));
+        // CraftBukkit start
+        CraftingManager.getInstance().lastCraftView = getBukkitView();
+        ItemStack craftResult = CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.worldObj);
+        this.craftResult.setInventorySlotContents(0, craftResult);
+
+        if (super.crafters.size() < 1)
+        {
+            return;
+        }
+
+        // See CraftBukkit PR #39
+        if (craftResult != null && craftResult.getItem() == Items.filled_map)
+        {
+            return;
+        }
+
+        EntityPlayerMP player = (EntityPlayerMP)super.crafters.get(0); // TODO: Is this _always_ correct? Seems like it.
+        player.playerNetServerHandler.sendPacket(new S2FPacketSetSlot(player.openContainer.windowId, 0, craftResult));
+        // CraftBukkit end
     }
 
     public void onContainerClosed(EntityPlayer playerIn)
     {
         super.onContainerClosed(playerIn);
@@ -71,10 +107,12 @@
         }
     }
 
     public boolean canInteractWith(EntityPlayer playerIn)
     {
+        if (!this.checkReachable) return true; // CraftBukkit
+
         return this.worldObj.getBlockState(this.field_178145_h).getBlock() != Blocks.crafting_table ? false : playerIn.getDistanceSq((double)this.field_178145_h.getX() + 0.5D, (double)this.field_178145_h.getY() + 0.5D, (double)this.field_178145_h.getZ() + 0.5D) <= 64.0D;
     }
 
     public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
@@ -136,6 +174,21 @@
 
     public boolean canMergeSlot(ItemStack p_94530_1_, Slot p_94530_2_)
     {
         return p_94530_2_.inventory != this.craftResult && super.canMergeSlot(p_94530_1_, p_94530_2_);
     }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView()
+    {
+        if (bukkitEntity != null)
+        {
+            return bukkitEntity;
+        }
+
+        CraftInventoryCrafting inventory = new CraftInventoryCrafting(this.craftMatrix, this.craftResult);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
