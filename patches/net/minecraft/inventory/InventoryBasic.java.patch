--- decompiled\net\minecraft\inventory\InventoryBasic.java
+++ src\main\java\net\minecraft\inventory\InventoryBasic.java
@@ -1,40 +1,80 @@
 package net.minecraft.inventory;
 
-import com.google.common.collect.Lists;
+import java.util.ArrayList;
 import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.IChatComponent;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+
+import com.google.common.collect.Lists;
+
 public class InventoryBasic implements IInventory
 {
+
     private String inventoryTitle;
     private int slotsCount;
-    private ItemStack[] inventoryContents;
+    public ItemStack[] inventoryContents; // SpigotMCP
     private List field_70480_d;
     private boolean hasCustomName;
     private static final String __OBFID = "CL_00001514";
+    // CraftBukkit start - add fields and methods
+    public List transaction = new ArrayList();
+    private int maxStack = MAX_STACK;
+    protected InventoryHolder bukkitOwner;
 
-    public InventoryBasic(String title, boolean customName, int slotCount)
+    public net.minecraft.item.ItemStack[] getContents()
     {
+        return this.inventoryContents;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public java.util.List getViewers()
+    {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int i)
+    {
+        maxStack = i;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        return bukkitOwner;
+    }
+
+    public InventoryBasic(String s, boolean flag, int i)
+    {
+        this(s, flag, i, null);
+    }
+
+    public InventoryBasic(String title, boolean customName, int slotCount, InventoryHolder owner)   // Added argument
+    {
+        this.bukkitOwner = owner;
+        // CraftBukkit end
         this.inventoryTitle = title;
         this.hasCustomName = customName;
         this.slotsCount = slotCount;
         this.inventoryContents = new ItemStack[slotCount];
     }
 
-    @SideOnly(Side.CLIENT)
-    public InventoryBasic(IChatComponent title, int slotCount)
-    {
-        this(title.getUnformattedText(), true, slotCount);
-    }
-
     public void func_110134_a(IInvBasic p_110134_1_)
     {
         if (this.field_70480_d == null)
         {
             this.field_70480_d = Lists.newArrayList();
@@ -198,13 +238,17 @@
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return true;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
@@ -212,11 +256,13 @@
     public int getField(int id)
     {
         return 0;
     }
 
-    public void setField(int id, int value) {}
+    public void setField(int id, int value)
+    {
+    }
 
     public int getFieldCount()
     {
         return 0;
     }
