--- decompiled\net\minecraft\inventory\InventoryCraftResult.java
+++ src\main\java\net\minecraft\inventory\InventoryCraftResult.java
@@ -1,18 +1,58 @@
 package net.minecraft.inventory;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.IChatComponent;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+
 public class InventoryCraftResult implements IInventory
 {
+
     private ItemStack[] stackResult = new ItemStack[1];
     private static final String __OBFID = "CL_00001760";
 
+    // CraftBukkit start
+    private int maxStack = MAX_STACK;
+
+    public net.minecraft.item.ItemStack[] getContents()
+    {
+        return this.stackResult;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        return null; // Result slots don't get an owner
+    }
+
+    // Don't need a transaction; the InventoryCrafting keeps track of it for us
+    public void onOpen(CraftHumanEntity who)
+    {
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+    }
+
+    public List getViewers()
+    {
+        return new ArrayList();
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
     public int getSizeInventory()
     {
         return 1;
     }
 
@@ -69,23 +109,29 @@
         this.stackResult[0] = stack;
     }
 
     public int getInventoryStackLimit()
     {
-        return 64;
+        return maxStack; // CraftBukkit
     }
 
-    public void markDirty() {}
+    public void markDirty()
+    {
+    }
 
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return true;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
@@ -93,11 +139,13 @@
     public int getField(int id)
     {
         return 0;
     }
 
-    public void setField(int id, int value) {}
+    public void setField(int id, int value)
+    {
+    }
 
     public int getFieldCount()
     {
         return 0;
     }
