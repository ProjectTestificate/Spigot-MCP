--- decompiled\net\minecraft\inventory\ContainerRepair.java
+++ src\main\java\net\minecraft\inventory\ContainerRepair.java
@@ -1,9 +1,12 @@
 package net.minecraft.inventory;
 
+import java.util.ArrayList;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Map;
+
 import net.minecraft.block.BlockAnvil;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.Enchantment;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.player.EntityPlayer;
@@ -11,47 +14,106 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryAnvil;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.InventoryHolder;
 
 public class ContainerRepair extends Container
 {
+
     private static final Logger logger = LogManager.getLogger();
     private IInventory outputSlot;
     private IInventory inputSlots;
     private World theWorld;
     private BlockPos selfPosition;
     public int maximumCost;
-    private int materialCost;
+    public int materialCost;
     private String repairedItemName;
     private final EntityPlayer thePlayer;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
+    // CraftBukkit end
     private static final String __OBFID = "CL_00001732";
 
-    @SideOnly(Side.CLIENT)
-    public ContainerRepair(InventoryPlayer playerInventory, World worldIn, EntityPlayer player)
+    // SpigotMCP -- Annonomous inner class ContainerRepair$1 -> ContainerAnvilInventory
+    public class ContainerAnvilInventory extends InventoryBasic
     {
-        this(playerInventory, worldIn, BlockPos.ORIGIN, player);
+
+        private static final String __OBFID = "CL_00001733";
+
+        // CraftBukkit start
+        public List transaction = new ArrayList();
+        public Player player;
+        private int maxStack = MAX_STACK;
+
+        public ItemStack[] getContents()
+        {
+            return this.inventoryContents;
+        }
+
+        public void onOpen(CraftHumanEntity who)
+        {
+            transaction.add(who);
+        }
+
+        public void onClose(CraftHumanEntity who)
+        {
+            transaction.remove(who);
+        }
+
+        public List getViewers()
+        {
+            return transaction;
+        }
+
+        public InventoryHolder getOwner()
+        {
+            return this.player;
+        }
+
+        public void setMaxStackSize(int size)
+        {
+            maxStack = size;
+        }
+        // CraftBukkit end
+
+        public ContainerAnvilInventory(String title, boolean customName, int slotCount)
+        {
+            super(title, customName, slotCount);
+        }
+
+        public void markDirty()
+        {
+            super.markDirty();
+            ContainerRepair.this.onCraftMatrixChanged(this);
+        }
+
+        // CraftBukkit start - override inherited maxStack from InventorySubcontainer
+        @Override
+        public int getInventoryStackLimit()
+        {
+            return maxStack;
+        }
+        // CraftBukkit end
     }
 
     public ContainerRepair(InventoryPlayer playerInventory, final World worldIn, final BlockPos blockPosIn, EntityPlayer player)
     {
         this.outputSlot = new InventoryCraftResult();
-        this.inputSlots = new InventoryBasic("Repair", true, 2)
-        {
-            private static final String __OBFID = "CL_00001733";
-            public void markDirty()
-            {
-                super.markDirty();
-                ContainerRepair.this.onCraftMatrixChanged(this);
-            }
-        };
+        this.inputSlots = new ContainerAnvilInventory("Repair", true, 2); // SpigotMCP -- Use inner class
+        this.player = playerInventory; // CraftBukkit
         this.selfPosition = blockPosIn;
         this.theWorld = worldIn;
         this.thePlayer = player;
         this.addSlotToContainer(new Slot(this.inputSlots, 0, 27, 47));
         this.addSlotToContainer(new Slot(this.inputSlots, 1, 76, 47));
@@ -378,19 +440,10 @@
     {
         super.addCraftingToCrafters(listener);
         listener.sendProgressBarUpdate(this, 0, this.maximumCost);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void updateProgressBar(int id, int data)
-    {
-        if (id == 0)
-        {
-            this.maximumCost = data;
-        }
-    }
-
     public void onContainerClosed(EntityPlayer playerIn)
     {
         super.onContainerClosed(playerIn);
 
         if (!this.theWorld.isRemote)
@@ -407,10 +460,12 @@
         }
     }
 
     public boolean canInteractWith(EntityPlayer playerIn)
     {
+        if (!this.checkReachable) return true; // CraftBukkit
+
         return this.theWorld.getBlockState(this.selfPosition).getBlock() != Blocks.anvil ? false : playerIn.getDistanceSq((double)this.selfPosition.getX() + 0.5D, (double)this.selfPosition.getY() + 0.5D, (double)this.selfPosition.getZ() + 0.5D) <= 64.0D;
     }
 
     public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
@@ -481,6 +536,21 @@
             }
         }
 
         this.updateRepairOutput();
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView()
+    {
+        if (bukkitEntity != null)
+        {
+            return bukkitEntity;
+        }
+
+        CraftInventory inventory = new CraftInventoryAnvil(this.inputSlots, this.outputSlot);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
