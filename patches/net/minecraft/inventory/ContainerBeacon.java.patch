--- decompiled\net\minecraft\inventory\ContainerBeacon.java
+++ src\main\java\net\minecraft\inventory\ContainerBeacon.java
@@ -1,143 +1,130 @@
 package net.minecraft.inventory;
 
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+import net.minecraft.tileentity.TileEntityBeacon;
 
-public class ContainerBeacon extends Container
-{
+import org.bukkit.craftbukkit.inventory.CraftInventoryBeacon;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+
+public class ContainerBeacon extends Container {
+
     private IInventory tileBeacon;
     private final ContainerBeacon.BeaconSlot beaconSlot;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
+    // CraftBukkit end
     private static final String __OBFID = "CL_00001735";
 
-    public ContainerBeacon(IInventory p_i45804_1_, IInventory p_i45804_2_)
-    {
+    public ContainerBeacon(IInventory p_i45804_1_, IInventory p_i45804_2_) {
+        player = (InventoryPlayer) p_i45804_1_; // CraftBukkit - TODO: check this
         this.tileBeacon = p_i45804_2_;
         this.addSlotToContainer(this.beaconSlot = new ContainerBeacon.BeaconSlot(p_i45804_2_, 0, 136, 110));
         byte b0 = 36;
         short short1 = 137;
         int i;
 
-        for (i = 0; i < 3; ++i)
-        {
-            for (int j = 0; j < 9; ++j)
-            {
+        for (i = 0; i < 3; ++i) {
+            for (int j = 0; j < 9; ++j) {
                 this.addSlotToContainer(new Slot(p_i45804_1_, j + i * 9 + 9, b0 + j * 18, short1 + i * 18));
             }
         }
 
-        for (i = 0; i < 9; ++i)
-        {
+        for (i = 0; i < 9; ++i) {
             this.addSlotToContainer(new Slot(p_i45804_1_, i, b0 + i * 18, 58 + short1));
         }
     }
 
-    public void addCraftingToCrafters(ICrafting listener)
-    {
+    public void addCraftingToCrafters(ICrafting listener) {
         super.addCraftingToCrafters(listener);
         listener.func_175173_a(this, this.tileBeacon);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void updateProgressBar(int id, int data)
-    {
-        this.tileBeacon.setField(id, data);
-    }
-
-    public IInventory func_180611_e()
-    {
+    public IInventory func_180611_e() {
         return this.tileBeacon;
     }
 
-    public boolean canInteractWith(EntityPlayer playerIn)
-    {
+    public boolean canInteractWith(EntityPlayer playerIn) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return this.tileBeacon.isUseableByPlayer(playerIn);
     }
 
-    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
-    {
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index) {
         ItemStack itemstack = null;
-        Slot slot = (Slot)this.inventorySlots.get(index);
+        Slot slot = (Slot) this.inventorySlots.get(index);
 
-        if (slot != null && slot.getHasStack())
-        {
+        if (slot != null && slot.getHasStack()) {
             ItemStack itemstack1 = slot.getStack();
             itemstack = itemstack1.copy();
 
-            if (index == 0)
-            {
-                if (!this.mergeItemStack(itemstack1, 1, 37, true))
-                {
+            if (index == 0) {
+                if (!this.mergeItemStack(itemstack1, 1, 37, true)) {
                     return null;
                 }
 
                 slot.onSlotChange(itemstack1, itemstack);
-            }
-            else if (!this.beaconSlot.getHasStack() && this.beaconSlot.isItemValid(itemstack1) && itemstack1.stackSize == 1)
-            {
-                if (!this.mergeItemStack(itemstack1, 0, 1, false))
-                {
+            } else if (!this.beaconSlot.getHasStack() && this.beaconSlot.isItemValid(itemstack1) && itemstack1.stackSize == 1) {
+                if (!this.mergeItemStack(itemstack1, 0, 1, false)) {
                     return null;
                 }
-            }
-            else if (index >= 1 && index < 28)
-            {
-                if (!this.mergeItemStack(itemstack1, 28, 37, false))
-                {
+            } else if (index >= 1 && index < 28) {
+                if (!this.mergeItemStack(itemstack1, 28, 37, false)) {
                     return null;
                 }
-            }
-            else if (index >= 28 && index < 37)
-            {
-                if (!this.mergeItemStack(itemstack1, 1, 28, false))
-                {
+            } else if (index >= 28 && index < 37) {
+                if (!this.mergeItemStack(itemstack1, 1, 28, false)) {
                     return null;
                 }
-            }
-            else if (!this.mergeItemStack(itemstack1, 1, 37, false))
-            {
+            } else if (!this.mergeItemStack(itemstack1, 1, 37, false)) {
                 return null;
             }
 
-            if (itemstack1.stackSize == 0)
-            {
-                slot.putStack((ItemStack)null);
-            }
-            else
-            {
+            if (itemstack1.stackSize == 0) {
+                slot.putStack((ItemStack) null);
+            } else {
                 slot.onSlotChanged();
             }
 
-            if (itemstack1.stackSize == itemstack.stackSize)
-            {
+            if (itemstack1.stackSize == itemstack.stackSize) {
                 return null;
             }
 
             slot.onPickupFromSlot(playerIn, itemstack1);
         }
 
         return itemstack;
     }
 
-    class BeaconSlot extends Slot
-    {
+    class BeaconSlot extends Slot {
+
         private static final String __OBFID = "CL_00001736";
 
-        public BeaconSlot(IInventory p_i1801_2_, int p_i1801_3_, int p_i1801_4_, int p_i1801_5_)
-        {
+        public BeaconSlot(IInventory p_i1801_2_, int p_i1801_3_, int p_i1801_4_, int p_i1801_5_) {
             super(p_i1801_2_, p_i1801_3_, p_i1801_4_, p_i1801_5_);
         }
 
-        public boolean isItemValid(ItemStack stack)
-        {
+        public boolean isItemValid(ItemStack stack) {
             return stack == null ? false : stack.getItem() == Items.emerald || stack.getItem() == Items.diamond || stack.getItem() == Items.gold_ingot || stack.getItem() == Items.iron_ingot;
         }
 
-        public int getSlotStackLimit()
-        {
+        public int getSlotStackLimit() {
             return 1;
         }
     }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventory inventory = new CraftInventoryBeacon((TileEntityBeacon) this.tileBeacon); // TODO - check this
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
