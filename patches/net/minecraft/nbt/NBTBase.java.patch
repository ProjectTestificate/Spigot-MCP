--- decompiled\net\minecraft\nbt\NBTBase.java
+++ src\main\java\net\minecraft\nbt\NBTBase.java
@@ -2,27 +2,25 @@
 
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
 
-public abstract class NBTBase
-{
-    public static final String[] NBT_TYPES = new String[] {"END", "BYTE", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "BYTE[]", "STRING", "LIST", "COMPOUND", "INT[]"};
+public abstract class NBTBase {
+
+    public static final String[] NBT_TYPES = new String[]{"END", "BYTE", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "BYTE[]", "STRING", "LIST", "COMPOUND", "INT[]"};
     private static final String __OBFID = "CL_00001229";
 
     abstract void write(DataOutput output) throws IOException;
 
     abstract void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException;
 
     public abstract String toString();
 
     public abstract byte getId();
 
-    protected static NBTBase createNewByType(byte id)
-    {
-        switch (id)
-        {
+    protected static NBTBase createNewByType(byte id) {
+        switch (id) {
             case 0:
                 return new NBTTagEnd();
             case 1:
                 return new NBTTagByte();
             case 2:
@@ -50,50 +48,43 @@
         }
     }
 
     public abstract NBTBase copy();
 
-    public boolean hasNoTags()
-    {
+    public boolean hasNoTags() {
         return false;
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        if (!(p_equals_1_ instanceof NBTBase))
-        {
+    public boolean equals(Object p_equals_1_) {
+        if (!(p_equals_1_ instanceof NBTBase)) {
             return false;
-        }
-        else
-        {
-            NBTBase nbtbase = (NBTBase)p_equals_1_;
+        } else {
+            NBTBase nbtbase = (NBTBase) p_equals_1_;
             return this.getId() == nbtbase.getId();
         }
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         return this.getId();
     }
 
-    protected String getString()
-    {
+    protected String getString() {
         return this.toString();
     }
 
-    public abstract static class NBTPrimitive extends NBTBase
-        {
-            private static final String __OBFID = "CL_00001230";
+    public abstract static class NBTPrimitive extends NBTBase {
 
-            public abstract long getLong();
+        private static final String __OBFID = "CL_00001230";
 
-            public abstract int getInt();
+        public abstract long getLong();
 
-            public abstract short getShort();
+        public abstract int getInt();
 
-            public abstract byte getByte();
+        public abstract short getShort();
 
-            public abstract double getDouble();
+        public abstract byte getByte();
 
-            public abstract float getFloat();
-        }
+        public abstract double getDouble();
+
+        public abstract float getFloat();
+    }
 }
