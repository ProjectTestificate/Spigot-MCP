--- decompiled\net\minecraft\nbt\NBTTagByteArray.java
+++ src\main\java\net\minecraft\nbt\NBTTagByteArray.java
@@ -3,63 +3,55 @@
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
 import java.util.Arrays;
 
-public class NBTTagByteArray extends NBTBase
-{
+public class NBTTagByteArray extends NBTBase {
+
     private byte[] data;
     private static final String __OBFID = "CL_00001213";
 
-    NBTTagByteArray() {}
+    NBTTagByteArray() {
+    }
 
-    public NBTTagByteArray(byte[] data)
-    {
+    public NBTTagByteArray(byte[] data) {
         this.data = data;
     }
 
-    void write(DataOutput output) throws IOException
-    {
+    void write(DataOutput output) throws IOException {
         output.writeInt(this.data.length);
         output.write(this.data);
     }
 
-    void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException
-    {
+    void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException {
         int j = input.readInt();
-        sizeTracker.read((long)(8 * j));
+        sizeTracker.read((long) (8 * j));
         this.data = new byte[j];
         input.readFully(this.data);
     }
 
-    public byte getId()
-    {
-        return (byte)7;
+    public byte getId() {
+        return (byte) 7;
     }
 
-    public String toString()
-    {
+    public String toString() {
         return "[" + this.data.length + " bytes]";
     }
 
-    public NBTBase copy()
-    {
+    public NBTBase copy() {
         byte[] abyte = new byte[this.data.length];
         System.arraycopy(this.data, 0, abyte, 0, this.data.length);
         return new NBTTagByteArray(abyte);
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        return super.equals(p_equals_1_) ? Arrays.equals(this.data, ((NBTTagByteArray)p_equals_1_).data) : false;
+    public boolean equals(Object p_equals_1_) {
+        return super.equals(p_equals_1_) ? Arrays.equals(this.data, ((NBTTagByteArray) p_equals_1_).data) : false;
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         return super.hashCode() ^ Arrays.hashCode(this.data);
     }
 
-    public byte[] getByteArray()
-    {
+    public byte[] getByteArray() {
         return this.data;
     }
 }
