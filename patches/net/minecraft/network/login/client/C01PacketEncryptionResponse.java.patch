--- decompiled\net\minecraft\network\login\client\C01PacketEncryptionResponse.java
+++ src\main\java\net\minecraft\network\login\client\C01PacketEncryptionResponse.java
@@ -1,32 +1,28 @@
 package net.minecraft.network.login.client;
 
 import java.io.IOException;
 import java.security.PrivateKey;
-import java.security.PublicKey;
+
 import javax.crypto.SecretKey;
+
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.login.INetHandlerLoginServer;
 import net.minecraft.util.CryptManager;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class C01PacketEncryptionResponse implements Packet
 {
+
     private byte[] secretKeyEncrypted = new byte[0];
     private byte[] verifyTokenEncrypted = new byte[0];
     private static final String __OBFID = "CL_00001380";
 
-    public C01PacketEncryptionResponse() {}
-
-    @SideOnly(Side.CLIENT)
-    public C01PacketEncryptionResponse(SecretKey secretKey, PublicKey publicKey, byte[] verifyToken)
+    public C01PacketEncryptionResponse()
     {
-        this.secretKeyEncrypted = CryptManager.encryptData(publicKey, secretKey.getEncoded());
-        this.verifyTokenEncrypted = CryptManager.encryptData(publicKey, verifyToken);
     }
 
     public void readPacketData(PacketBuffer buf) throws IOException
     {
         this.secretKeyEncrypted = buf.readByteArray();
@@ -54,8 +50,8 @@
         return key == null ? this.verifyTokenEncrypted : CryptManager.decryptData(key, this.verifyTokenEncrypted);
     }
 
     public void processPacket(INetHandler handler)
     {
-        this.processPacket((INetHandlerLoginServer)handler);
+        this.processPacket((INetHandlerLoginServer) handler);
     }
 }
