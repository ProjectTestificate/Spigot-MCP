--- decompiled\net\minecraft\network\play\server\S01PacketJoinGame.java
+++ src\main\java\net\minecraft\network\play\server\S01PacketJoinGame.java
@@ -1,31 +1,34 @@
 package net.minecraft.network.play.server;
 
 import java.io.IOException;
+
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class S01PacketJoinGame implements Packet
 {
+
     private int entityId;
     private boolean hardcoreMode;
     private WorldSettings.GameType gameType;
     private int dimension;
     private EnumDifficulty difficulty;
     private int maxPlayers;
     private WorldType worldType;
     private boolean reducedDebugInfo;
     private static final String __OBFID = "CL_00001310";
 
-    public S01PacketJoinGame() {}
+    public S01PacketJoinGame()
+    {
+    }
 
     public S01PacketJoinGame(int p_i45976_1_, WorldSettings.GameType p_i45976_2_, boolean p_i45976_3_, int p_i45976_4_, EnumDifficulty p_i45976_5_, int p_i45976_6_, WorldType p_i45976_7_, boolean p_i45976_8_)
     {
         this.entityId = p_i45976_1_;
         this.dimension = p_i45976_4_;
@@ -78,58 +81,10 @@
     public void processPacket(INetHandlerPlayClient handler)
     {
         handler.handleJoinGame(this);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getEntityId()
-    {
-        return this.entityId;
-    }
-
     public void processPacket(INetHandler handler)
     {
-        this.processPacket((INetHandlerPlayClient)handler);
+        this.processPacket((INetHandlerPlayClient) handler);
     }
-
-    @SideOnly(Side.CLIENT)
-    public boolean isHardcoreMode()
-    {
-        return this.hardcoreMode;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public WorldSettings.GameType getGameType()
-    {
-        return this.gameType;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getDimension()
-    {
-        return this.dimension;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public EnumDifficulty getDifficulty()
-    {
-        return this.difficulty;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getMaxPlayers()
-    {
-        return this.maxPlayers;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public WorldType getWorldType()
-    {
-        return this.worldType;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean isReducedDebugInfo()
-    {
-        return this.reducedDebugInfo;
-    }
 }
