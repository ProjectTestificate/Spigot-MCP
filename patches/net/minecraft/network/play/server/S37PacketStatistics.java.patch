--- decompiled\net\minecraft\network\play\server\S37PacketStatistics.java
+++ src\main\java\net\minecraft\network\play\server\S37PacketStatistics.java
@@ -1,74 +1,61 @@
 package net.minecraft.network.play.server;
 
-import com.google.common.collect.Maps;
 import java.io.IOException;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
+
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
 import net.minecraft.stats.StatBase;
 import net.minecraft.stats.StatList;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class S37PacketStatistics implements Packet
-{
+import com.google.common.collect.Maps;
+
+public class S37PacketStatistics implements Packet {
+
     private Map field_148976_a;
     private static final String __OBFID = "CL_00001283";
 
-    public S37PacketStatistics() {}
+    public S37PacketStatistics() {
+    }
 
-    public S37PacketStatistics(Map p_i45173_1_)
-    {
+    public S37PacketStatistics(Map p_i45173_1_) {
         this.field_148976_a = p_i45173_1_;
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleStatistics(this);
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         int i = buf.readVarIntFromBuffer();
         this.field_148976_a = Maps.newHashMap();
 
-        for (int j = 0; j < i; ++j)
-        {
+        for (int j = 0; j < i; ++j) {
             StatBase statbase = StatList.getOneShotStat(buf.readStringFromBuffer(32767));
             int k = buf.readVarIntFromBuffer();
 
-            if (statbase != null)
-            {
+            if (statbase != null) {
                 this.field_148976_a.put(statbase, Integer.valueOf(k));
             }
         }
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeVarIntToBuffer(this.field_148976_a.size());
         Iterator iterator = this.field_148976_a.entrySet().iterator();
 
-        while (iterator.hasNext())
-        {
-            Entry entry = (Entry)iterator.next();
-            buf.writeString(((StatBase)entry.getKey()).statId);
-            buf.writeVarIntToBuffer(((Integer)entry.getValue()).intValue());
+        while (iterator.hasNext()) {
+            Entry entry = (Entry) iterator.next();
+            buf.writeString(((StatBase) entry.getKey()).statId);
+            buf.writeVarIntToBuffer(((Integer) entry.getValue()).intValue());
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public Map func_148974_c()
-    {
-        return this.field_148976_a;
+    public void processPacket(INetHandler handler) {
+        this.processPacket((INetHandlerPlayClient) handler);
     }
-
-    public void processPacket(INetHandler handler)
-    {
-        this.processPacket((INetHandlerPlayClient)handler);
-    }
 }
