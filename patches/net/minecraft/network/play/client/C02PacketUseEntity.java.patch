--- decompiled\net\minecraft\network\play\client\C02PacketUseEntity.java
+++ src\main\java\net\minecraft\network\play\client\C02PacketUseEntity.java
@@ -1,62 +1,51 @@
 package net.minecraft.network.play.client;
 
 import java.io.IOException;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayServer;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class C02PacketUseEntity implements Packet
 {
+
     private int entityId;
     private C02PacketUseEntity.Action action;
     private Vec3 hitVec;
     private static final String __OBFID = "CL_00001357";
 
-    public C02PacketUseEntity() {}
-
-    @SideOnly(Side.CLIENT)
-    public C02PacketUseEntity(Entity entity, C02PacketUseEntity.Action action)
+    public C02PacketUseEntity()
     {
-        this.entityId = entity.getEntityId();
-        this.action = action;
     }
 
-    @SideOnly(Side.CLIENT)
-    public C02PacketUseEntity(Entity entity, Vec3 hitVec)
-    {
-        this(entity, C02PacketUseEntity.Action.INTERACT_AT);
-        this.hitVec = hitVec;
-    }
-
     public void readPacketData(PacketBuffer buf) throws IOException
     {
         this.entityId = buf.readVarIntFromBuffer();
-        this.action = (C02PacketUseEntity.Action)buf.readEnumValue(C02PacketUseEntity.Action.class);
+        this.action = (C02PacketUseEntity.Action) buf.readEnumValue(C02PacketUseEntity.Action.class);
 
         if (this.action == C02PacketUseEntity.Action.INTERACT_AT)
         {
-            this.hitVec = new Vec3((double)buf.readFloat(), (double)buf.readFloat(), (double)buf.readFloat());
+            this.hitVec = new Vec3((double) buf.readFloat(), (double) buf.readFloat(), (double) buf.readFloat());
         }
     }
 
     public void writePacketData(PacketBuffer buf) throws IOException
     {
         buf.writeVarIntToBuffer(this.entityId);
         buf.writeEnumValue(this.action);
 
         if (this.action == C02PacketUseEntity.Action.INTERACT_AT)
         {
-            buf.writeFloat((float)this.hitVec.xCoord);
-            buf.writeFloat((float)this.hitVec.yCoord);
-            buf.writeFloat((float)this.hitVec.zCoord);
+            buf.writeFloat((float) this.hitVec.xCoord);
+            buf.writeFloat((float) this.hitVec.yCoord);
+            buf.writeFloat((float) this.hitVec.zCoord);
         }
     }
 
     public void processPacket(INetHandlerPlayServer handler)
     {
@@ -78,11 +67,11 @@
         return this.hitVec;
     }
 
     public void processPacket(INetHandler handler)
     {
-        this.processPacket((INetHandlerPlayServer)handler);
+        this.processPacket((INetHandlerPlayServer) handler);
     }
 
     public static enum Action
     {
         INTERACT,
