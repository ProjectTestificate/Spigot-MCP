--- decompiled\net\minecraft\network\play\client\C0FPacketConfirmTransaction.java
+++ src\main\java\net\minecraft\network\play\client\C0FPacketConfirmTransaction.java
@@ -1,61 +1,48 @@
 package net.minecraft.network.play.client;
 
 import java.io.IOException;
+
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayServer;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class C0FPacketConfirmTransaction implements Packet
-{
+
+public class C0FPacketConfirmTransaction implements Packet {
+
     private int windowId;
     private short uid;
     private boolean accepted;
     private static final String __OBFID = "CL_00001351";
 
-    public C0FPacketConfirmTransaction() {}
-
-    @SideOnly(Side.CLIENT)
-    public C0FPacketConfirmTransaction(int windowId, short uid, boolean accepted)
-    {
-        this.windowId = windowId;
-        this.uid = uid;
-        this.accepted = accepted;
+    public C0FPacketConfirmTransaction() {
     }
 
-    public void processPacket(INetHandlerPlayServer handler)
-    {
+    public void processPacket(INetHandlerPlayServer handler) {
         handler.processConfirmTransaction(this);
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.windowId = buf.readByte();
         this.uid = buf.readShort();
         this.accepted = buf.readByte() != 0;
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeByte(this.windowId);
         buf.writeShort(this.uid);
         buf.writeByte(this.accepted ? 1 : 0);
     }
 
-    public int getWindowId()
-    {
+    public int getWindowId() {
         return this.windowId;
     }
 
-    public short getUid()
-    {
+    public short getUid() {
         return this.uid;
     }
 
-    public void processPacket(INetHandler handler)
-    {
-        this.processPacket((INetHandlerPlayServer)handler);
+    public void processPacket(INetHandler handler) {
+        this.processPacket((INetHandlerPlayServer) handler);
     }
 }
