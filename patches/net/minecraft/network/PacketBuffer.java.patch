--- decompiled\net\minecraft\network\PacketBuffer.java
+++ src\main\java\net\minecraft\network\PacketBuffer.java
@@ -1,35 +1,40 @@
 package net.minecraft.network;
 
-import com.google.common.base.Charsets;
-import io.netty.buffer.ByteBuf;
-import io.netty.buffer.ByteBufAllocator;
-import io.netty.buffer.ByteBufInputStream;
-import io.netty.buffer.ByteBufOutputStream;
-import io.netty.buffer.ByteBufProcessor;
-import io.netty.handler.codec.DecoderException;
-import io.netty.handler.codec.EncoderException;
-import io.netty.util.ReferenceCounted;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 import java.nio.channels.GatheringByteChannel;
 import java.nio.channels.ScatteringByteChannel;
 import java.nio.charset.Charset;
 import java.util.UUID;
+
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.CompressedStreamTools;
 import net.minecraft.nbt.NBTSizeTracker;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.IChatComponent;
 
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+
+import com.google.common.base.Charsets;
+
+import io.netty.buffer.ByteBuf;
+import io.netty.buffer.ByteBufAllocator;
+import io.netty.buffer.ByteBufInputStream;
+import io.netty.buffer.ByteBufOutputStream;
+import io.netty.buffer.ByteBufProcessor;
+import io.netty.handler.codec.DecoderException;
+import io.netty.handler.codec.EncoderException;
+
 public class PacketBuffer extends ByteBuf
 {
+
     private final ByteBuf buf;
     private static final String __OBFID = "CL_00001251";
 
     public PacketBuffer(ByteBuf wrapped)
     {
@@ -177,11 +182,11 @@
         {
             try
             {
                 CompressedStreamTools.write(nbt, new ByteBufOutputStream(this));
             }
-            catch (IOException ioexception)
+            catch (Exception ioexception)   // CraftBukkit - IOException -> Exception
             {
                 throw new EncoderException(ioexception);
             }
         }
     }
@@ -202,11 +207,11 @@
         }
     }
 
     public void writeItemStackToBuffer(ItemStack stack)
     {
-        if (stack == null)
+        if (stack == null || stack.getItem() == null)   // CraftBukkit - NPE fix itemstack.getItem()
         {
             this.writeShort(-1);
         }
         else
         {
@@ -215,10 +220,14 @@
             this.writeShort(stack.getMetadata());
             NBTTagCompound nbttagcompound = null;
 
             if (stack.getItem().isDamageable() || stack.getItem().getShareTag())
             {
+                // Spigot start - filter
+                stack = stack.copy();
+                CraftItemStack.setItemMeta(stack, CraftItemStack.getItemMeta(stack));
+                // Spigot end
                 nbttagcompound = stack.getTagCompound();
             }
 
             this.writeNBTTagCompoundToBuffer(nbttagcompound);
         }
@@ -233,10 +242,18 @@
         {
             byte b0 = this.readByte();
             short short2 = this.readShort();
             itemstack = new ItemStack(Item.getItemById(short1), b0, short2);
             itemstack.setTagCompound(this.readNBTTagCompoundFromBuffer());
+
+            // CraftBukkit start
+            if (itemstack.getTagCompound() != null)
+            {
+                CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
+            }
+
+            // CraftBukkit end
         }
 
         return itemstack;
     }
 
@@ -521,16 +538,16 @@
     public ByteBuf getBytes(int p_getBytes_1_, ByteBuffer p_getBytes_2_)
     {
         return this.buf.getBytes(p_getBytes_1_, p_getBytes_2_);
     }
 
-    public ByteBuf getBytes(int p_getBytes_1_, OutputStream p_getBytes_2_, int p_getBytes_3_) throws IOException
+    public ByteBuf getBytes(int p_getBytes_1_, OutputStream p_getBytes_2_, int p_getBytes_3_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.getBytes(p_getBytes_1_, p_getBytes_2_, p_getBytes_3_);
     }
 
-    public int getBytes(int p_getBytes_1_, GatheringByteChannel p_getBytes_2_, int p_getBytes_3_) throws IOException
+    public int getBytes(int p_getBytes_1_, GatheringByteChannel p_getBytes_2_, int p_getBytes_3_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.getBytes(p_getBytes_1_, p_getBytes_2_, p_getBytes_3_);
     }
 
     public ByteBuf setBoolean(int p_setBoolean_1_, boolean p_setBoolean_2_)
@@ -606,16 +623,16 @@
     public ByteBuf setBytes(int p_setBytes_1_, ByteBuffer p_setBytes_2_)
     {
         return this.buf.setBytes(p_setBytes_1_, p_setBytes_2_);
     }
 
-    public int setBytes(int p_setBytes_1_, InputStream p_setBytes_2_, int p_setBytes_3_) throws IOException
+    public int setBytes(int p_setBytes_1_, InputStream p_setBytes_2_, int p_setBytes_3_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.setBytes(p_setBytes_1_, p_setBytes_2_, p_setBytes_3_);
     }
 
-    public int setBytes(int p_setBytes_1_, ScatteringByteChannel p_setBytes_2_, int p_setBytes_3_) throws IOException
+    public int setBytes(int p_setBytes_1_, ScatteringByteChannel p_setBytes_2_, int p_setBytes_3_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.setBytes(p_setBytes_1_, p_setBytes_2_, p_setBytes_3_);
     }
 
     public ByteBuf setZero(int p_setZero_1_, int p_setZero_2_)
@@ -726,16 +743,16 @@
     public ByteBuf readBytes(ByteBuffer p_readBytes_1_)
     {
         return this.buf.readBytes(p_readBytes_1_);
     }
 
-    public ByteBuf readBytes(OutputStream p_readBytes_1_, int p_readBytes_2_) throws IOException
+    public ByteBuf readBytes(OutputStream p_readBytes_1_, int p_readBytes_2_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.readBytes(p_readBytes_1_, p_readBytes_2_);
     }
 
-    public int readBytes(GatheringByteChannel p_readBytes_1_, int p_readBytes_2_) throws IOException
+    public int readBytes(GatheringByteChannel p_readBytes_1_, int p_readBytes_2_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.readBytes(p_readBytes_1_, p_readBytes_2_);
     }
 
     public ByteBuf skipBytes(int p_skipBytes_1_)
@@ -816,16 +833,16 @@
     public ByteBuf writeBytes(ByteBuffer p_writeBytes_1_)
     {
         return this.buf.writeBytes(p_writeBytes_1_);
     }
 
-    public int writeBytes(InputStream p_writeBytes_1_, int p_writeBytes_2_) throws IOException
+    public int writeBytes(InputStream p_writeBytes_1_, int p_writeBytes_2_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.writeBytes(p_writeBytes_1_, p_writeBytes_2_);
     }
 
-    public int writeBytes(ScatteringByteChannel p_writeBytes_1_, int p_writeBytes_2_) throws IOException
+    public int writeBytes(ScatteringByteChannel p_writeBytes_1_, int p_writeBytes_2_) throws IOException   // CraftBukkit - throws IOException // SpigotMCP NOTE -- Already added by mcp
     {
         return this.buf.writeBytes(p_writeBytes_1_, p_writeBytes_2_);
     }
 
     public ByteBuf writeZero(int p_writeZero_1_)
