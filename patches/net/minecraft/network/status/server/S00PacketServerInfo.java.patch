---a/net/minecraft/network/status/server/S00PacketServerInfo.java
+++b/net/minecraft/network/status/server/S00PacketServerInfo.java
@@ -1,10 +1,6 @@
 package net.minecraft.network.status.server;
 
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
 import java.io.IOException;
+
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
@@ -11,41 +11,36 @@
 import net.minecraft.util.ChatStyle;
 import net.minecraft.util.EnumTypeAdapterFactory;
 import net.minecraft.util.IChatComponent;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class S00PacketServerInfo implements Packet
-{
-    private static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(ServerStatusResponse.MinecraftProtocolVersionIdentifier.class, new ServerStatusResponse.MinecraftProtocolVersionIdentifier.Serializer()).registerTypeAdapter(ServerStatusResponse.PlayerCountData.class, new ServerStatusResponse.PlayerCountData.Serializer()).registerTypeAdapter(ServerStatusResponse.class, new ServerStatusResponse.Serializer()).registerTypeHierarchyAdapter(IChatComponent.class, new IChatComponent.Serializer()).registerTypeHierarchyAdapter(ChatStyle.class, new ChatStyle.Serializer()).registerTypeAdapterFactory(new EnumTypeAdapterFactory()).create();
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+
+public class S00PacketServerInfo implements Packet {
+
+    private static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(ServerStatusResponse.MinecraftProtocolVersionIdentifier.class, new ServerStatusResponse.MinecraftProtocolVersionIdentifier.Serializer()).registerTypeAdapter(ServerStatusResponse.PlayerCountData.class, new ServerStatusResponse.PlayerCountData.Serializer()).registerTypeAdapter(ServerStatusResponse.class, new ServerStatusResponse.Serializer())
+                                                        .registerTypeHierarchyAdapter(IChatComponent.class, new IChatComponent.Serializer()).registerTypeHierarchyAdapter(ChatStyle.class, new ChatStyle.Serializer()).registerTypeAdapterFactory(new EnumTypeAdapterFactory()).create();
     private ServerStatusResponse response;
     private static final String __OBFID = "CL_00001384";
 
-    public S00PacketServerInfo() {}
+    public S00PacketServerInfo() {
+    }
 
-    public S00PacketServerInfo(ServerStatusResponse responseIn)
-    {
+    public S00PacketServerInfo(ServerStatusResponse responseIn) {
         this.response = responseIn;
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
-        this.response = (ServerStatusResponse)GSON.fromJson(buf.readStringFromBuffer(32767), ServerStatusResponse.class);
+    public void readPacketData(PacketBuffer buf) throws IOException {
+        this.response = (ServerStatusResponse) GSON.fromJson(buf.readStringFromBuffer(32767), ServerStatusResponse.class);
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeString(GSON.toJson(this.response));
     }
 
-    public void processPacket(INetHandlerStatusClient handler)
-    {
+    public void processPacket(INetHandlerStatusClient handler) {
         handler.handleServerInfo(this);
     }
 
-    @SideOnly(Side.CLIENT)
-    public ServerStatusResponse getResponse()
-    {
-        return this.response;
+    public void processPacket(INetHandler handler) {
+        this.processPacket((INetHandlerStatusClient) handler);
     }
-
-    public void processPacket(INetHandler handler)
-    {
-        this.processPacket((INetHandlerStatusClient)handler);
-    }
-}
+}
