---a/net/minecraft/block/BlockStoneSlab.java
+++b/net/minecraft/block/BlockStoneSlab.java
@@ -1,8 +1,6 @@
 package net.minecraft.block;
 
-import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
@@ -15,25 +15,20 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.IStringSerializable;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public abstract class BlockStoneSlab extends BlockSlab
-{
+
+public abstract class BlockStoneSlab extends BlockSlab {
+
     public static final PropertyBool SEAMLESS = PropertyBool.create("seamless");
     public static final PropertyEnum VARIANT = PropertyEnum.create("variant", BlockStoneSlab.EnumType.class);
     private static final String __OBFID = "CL_00000320";
 
-    public BlockStoneSlab()
-    {
+    public BlockStoneSlab() {
         super(Material.rock);
         IBlockState iblockstate = this.blockState.getBaseState();
 
-        if (this.isDouble())
-        {
+        if (this.isDouble()) {
             iblockstate = iblockstate.withProperty(SEAMLESS, Boolean.valueOf(false));
-        }
-        else
-        {
+        } else {
             iblockstate = iblockstate.withProperty(HALF, BlockSlab.EnumBlockHalf.BOTTOM);
         }
 
@@ -42,100 +42,62 @@
         this.setCreativeTab(CreativeTabs.tabBlock);
     }
 
-    public Item getItemDropped(IBlockState state, Random rand, int fortune)
-    {
+    public Item getItemDropped(IBlockState state, Random rand, int fortune) {
         return Item.getItemFromBlock(Blocks.stone_slab);
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
+    public Item getItem(World worldIn, BlockPos pos) {
         return Item.getItemFromBlock(Blocks.stone_slab);
     }
 
-    public String getUnlocalizedName(int meta)
-    {
+    public String getUnlocalizedName(int meta) {
         return super.getUnlocalizedName() + "." + BlockStoneSlab.EnumType.byMetadata(meta).getUnlocalizedName();
     }
 
-    public IProperty getVariantProperty()
-    {
+    public IProperty getVariantProperty() {
         return VARIANT;
     }
 
-    public Object getVariant(ItemStack stack)
-    {
+    public Object getVariant(ItemStack stack) {
         return BlockStoneSlab.EnumType.byMetadata(stack.getMetadata() & 7);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        if (itemIn != Item.getItemFromBlock(Blocks.double_stone_slab))
-        {
-            BlockStoneSlab.EnumType[] aenumtype = BlockStoneSlab.EnumType.values();
-            int i = aenumtype.length;
-
-            for (int j = 0; j < i; ++j)
-            {
-                BlockStoneSlab.EnumType enumtype = aenumtype[j];
-
-                if (enumtype != BlockStoneSlab.EnumType.WOOD)
-                {
-                    list.add(new ItemStack(itemIn, 1, enumtype.getMetadata()));
-                }
-            }
-        }
-    }
-
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         IBlockState iblockstate = this.getDefaultState().withProperty(VARIANT, BlockStoneSlab.EnumType.byMetadata(meta & 7));
 
-        if (this.isDouble())
-        {
+        if (this.isDouble()) {
             iblockstate = iblockstate.withProperty(SEAMLESS, Boolean.valueOf((meta & 8) != 0));
-        }
-        else
-        {
+        } else {
             iblockstate = iblockstate.withProperty(HALF, (meta & 8) == 0 ? BlockSlab.EnumBlockHalf.BOTTOM : BlockSlab.EnumBlockHalf.TOP);
         }
 
         return iblockstate;
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
+    public int getMetaFromState(IBlockState state) {
         byte b0 = 0;
-        int i = b0 | ((BlockStoneSlab.EnumType)state.getValue(VARIANT)).getMetadata();
+        int i = b0 | ((BlockStoneSlab.EnumType) state.getValue(VARIANT)).getMetadata();
 
-        if (this.isDouble())
-        {
-            if (((Boolean)state.getValue(SEAMLESS)).booleanValue())
-            {
+        if (this.isDouble()) {
+            if (((Boolean) state.getValue(SEAMLESS)).booleanValue()) {
                 i |= 8;
             }
-        }
-        else if (state.getValue(HALF) == BlockSlab.EnumBlockHalf.TOP)
-        {
+        } else if (state.getValue(HALF) == BlockSlab.EnumBlockHalf.TOP) {
             i |= 8;
         }
 
         return i;
     }
 
-    protected BlockState createBlockState()
-    {
-        return this.isDouble() ? new BlockState(this, new IProperty[] {SEAMLESS, VARIANT}): new BlockState(this, new IProperty[] {HALF, VARIANT});
+    protected BlockState createBlockState() {
+        return this.isDouble() ? new BlockState(this, new IProperty[]{SEAMLESS, VARIANT}) : new BlockState(this, new IProperty[]{HALF, VARIANT});
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        return ((BlockStoneSlab.EnumType)state.getValue(VARIANT)).getMetadata();
+    public int damageDropped(IBlockState state) {
+        return ((BlockStoneSlab.EnumType) state.getValue(VARIANT)).getMetadata();
     }
 
-    public static enum EnumType implements IStringSerializable
-    {
+    public static enum EnumType implements IStringSerializable {
         STONE(0, "stone"),
         SAND(1, "sandstone", "sand"),
         WOOD(2, "wood_old", "wood"),
@@ -151,59 +151,48 @@
 
         private static final String __OBFID = "CL_00002056";
 
-        private EnumType(int meta, String name)
-        {
+        private EnumType(int meta, String name) {
             this(meta, name, name);
         }
 
-        private EnumType(int meta, String name, String unlocalizedName)
-        {
+        private EnumType(int meta, String name, String unlocalizedName) {
             this.meta = meta;
             this.name = name;
             this.unlocalizedName = unlocalizedName;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.meta;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.name;
         }
 
-        public static BlockStoneSlab.EnumType byMetadata(int meta)
-        {
-            if (meta < 0 || meta >= META_LOOKUP.length)
-            {
+        public static BlockStoneSlab.EnumType byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
                 meta = 0;
             }
 
             return META_LOOKUP[meta];
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.name;
         }
 
-        public String getUnlocalizedName()
-        {
+        public String getUnlocalizedName() {
             return this.unlocalizedName;
         }
 
-        static
-        {
+        static {
             BlockStoneSlab.EnumType[] var0 = values();
             int var1 = var0.length;
 
-            for (int var2 = 0; var2 < var1; ++var2)
-            {
+            for (int var2 = 0; var2 < var1; ++var2) {
                 BlockStoneSlab.EnumType var3 = var0[var2];
                 META_LOOKUP[var3.getMetadata()] = var3;
             }
         }
     }
-}
+}
