--- decompiled\net\minecraft\block\BlockFarmland.java
+++ src\main\java\net\minecraft\block\BlockFarmland.java
@@ -1,9 +1,10 @@
 package net.minecraft.block;
 
 import java.util.Iterator;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyInteger;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
@@ -13,15 +14,17 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.item.Item;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityInteractEvent;
+
 public class BlockFarmland extends Block
 {
+
     public static final PropertyInteger MOISTURE = PropertyInteger.create("moisture", 0, 7);
     private static final String __OBFID = "CL_00000241";
 
     protected BlockFarmland()
     {
@@ -57,10 +60,19 @@
             {
                 worldIn.setBlockState(pos, state.withProperty(MOISTURE, Integer.valueOf(i - 1)), 2);
             }
             else if (!this.hasCrops(worldIn, pos))
             {
+                // CraftBukkit start
+                org.bukkit.block.Block block = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+
+                if (CraftEventFactory.callBlockFadeEvent(block, Blocks.dirt).isCancelled())
+                {
+                    return;
+                }
+
+                // CraftBukkit end
                 worldIn.setBlockState(pos, Blocks.dirt.getDefaultState());
             }
         }
         else if (i < 7)
         {
@@ -68,23 +80,49 @@
         }
     }
 
     public void onFallenUpon(World worldIn, BlockPos pos, Entity entityIn, float fallDistance)
     {
+        super.onFallenUpon(worldIn, pos, entityIn, fallDistance); // CraftBukkit - moved here as game rules / events shouldn't affect fall damage.
+
         if (entityIn instanceof EntityLivingBase)
         {
             if (!worldIn.isRemote && worldIn.rand.nextFloat() < fallDistance - 0.5F)
             {
                 if (!(entityIn instanceof EntityPlayer) && !worldIn.getGameRules().getGameRuleBooleanValue("mobGriefing"))
                 {
                     return;
                 }
 
+                // CraftBukkit start - Interact soil
+                org.bukkit.event.Cancellable cancellable;
+
+                if (entityIn instanceof EntityPlayer)
+                {
+                    cancellable = CraftEventFactory.callPlayerInteractEvent((EntityPlayer)entityIn, org.bukkit.event.block.Action.PHYSICAL, pos, null, null);
+                }
+                else
+                {
+                    cancellable = new EntityInteractEvent(entityIn.getBukkitEntity(), worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+                    worldIn.getServer().getPluginManager().callEvent((EntityInteractEvent)cancellable);
+                }
+
+                if (cancellable.isCancelled())
+                {
+                    return;
+                }
+
+                if (CraftEventFactory.callEntityChangeBlockEvent(entityIn, pos.getX(), pos.getY(), pos.getZ(), Blocks.dirt, 0).isCancelled())
+                {
+                    return;
+                }
+
+                // CraftBukkit end
                 worldIn.setBlockState(pos, Blocks.dirt.getDefaultState());
             }
 
-            super.onFallenUpon(worldIn, pos, entityIn, fallDistance);
+            // super.onFallenUpon(worldIn, pos, entityIn, fallDistance); // CraftBukkit - moved up
         }
     }
 
     private boolean hasCrops(World worldIn, BlockPos pos)
     {
@@ -129,16 +167,10 @@
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(MOISTURE, Integer.valueOf(meta & 7));
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
-        return Item.getItemFromBlock(Blocks.dirt);
-    }
-
     public int getMetaFromState(IBlockState state)
     {
         return ((Integer)state.getValue(MOISTURE)).intValue();
     }
 
