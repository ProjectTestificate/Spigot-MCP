---a/net/minecraft/block/BlockCactus.java
+++b/net/minecraft/block/BlockCactus.java
@@ -2,6 +2,7 @@
 
 import java.util.Iterator;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyInteger;
@@ -14,101 +14,79 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockCactus extends Block
-{
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
+public class BlockCactus extends Block {
+
     public static final PropertyInteger AGE = PropertyInteger.create("age", 0, 15);
     private static final String __OBFID = "CL_00000210";
 
-    protected BlockCactus()
-    {
+    protected BlockCactus() {
         super(Material.cactus);
         this.setDefaultState(this.blockState.getBaseState().withProperty(AGE, Integer.valueOf(0)));
         this.setTickRandomly(true);
         this.setCreativeTab(CreativeTabs.tabDecorations);
     }
 
-    public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
-    {
+    public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand) {
         BlockPos blockpos1 = pos.up();
 
-        if (worldIn.isAirBlock(blockpos1))
-        {
+        if (worldIn.isAirBlock(blockpos1)) {
             int i;
 
-            for (i = 1; worldIn.getBlockState(pos.down(i)).getBlock() == this; ++i)
-            {
+            for (i = 1; worldIn.getBlockState(pos.down(i)).getBlock() == this; ++i) {
                 ;
             }
 
-            if (i < 3)
-            {
-                int j = ((Integer)state.getValue(AGE)).intValue();
+            if (i < 3) {
+                int j = ((Integer) state.getValue(AGE)).intValue();
 
-                if (j == 15)
+                if (j >= (byte) range(3, (worldIn.growthOdds / worldIn.spigotConfig.cactusModifier * 15) + 0.5F, 15)) // Spigot
                 {
-                    worldIn.setBlockState(blockpos1, this.getDefaultState());
+                    // worldIn.setBlockState(blockpos1, this.getDefaultState()); // CraftBukkit
                     IBlockState iblockstate1 = state.withProperty(AGE, Integer.valueOf(0));
+
+                    CraftEventFactory.handleBlockGrowEvent(worldIn, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), this, 0); // CraftBukkit
                     worldIn.setBlockState(pos, iblockstate1, 4);
                     this.onNeighborBlockChange(worldIn, blockpos1, iblockstate1, this);
-                }
-                else
-                {
+                } else {
                     worldIn.setBlockState(pos, state.withProperty(AGE, Integer.valueOf(j + 1)), 4);
                 }
             }
         }
     }
 
-    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state) {
         float f = 0.0625F;
-        return new AxisAlignedBB((double)((float)pos.getX() + f), (double)pos.getY(), (double)((float)pos.getZ() + f), (double)((float)(pos.getX() + 1) - f), (double)((float)(pos.getY() + 1) - f), (double)((float)(pos.getZ() + 1) - f));
+        return new AxisAlignedBB((double) ((float) pos.getX() + f), (double) pos.getY(), (double) ((float) pos.getZ() + f), (double) ((float) (pos.getX() + 1) - f), (double) ((float) (pos.getY() + 1) - f), (double) ((float) (pos.getZ() + 1) - f));
     }
 
-    @SideOnly(Side.CLIENT)
-    public AxisAlignedBB getSelectedBoundingBox(World worldIn, BlockPos pos)
-    {
-        float f = 0.0625F;
-        return new AxisAlignedBB((double)((float)pos.getX() + f), (double)pos.getY(), (double)((float)pos.getZ() + f), (double)((float)(pos.getX() + 1) - f), (double)(pos.getY() + 1), (double)((float)(pos.getZ() + 1) - f));
-    }
-
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
-    {
+    public boolean canPlaceBlockAt(World worldIn, BlockPos pos) {
         return super.canPlaceBlockAt(worldIn, pos) ? this.canBlockStay(worldIn, pos) : false;
     }
 
-    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
-    {
-        if (!this.canBlockStay(worldIn, pos))
-        {
+    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock) {
+        if (!this.canBlockStay(worldIn, pos)) {
             worldIn.destroyBlock(pos, true);
         }
     }
 
-    public boolean canBlockStay(World worldIn, BlockPos pos)
-    {
+    public boolean canBlockStay(World worldIn, BlockPos pos) {
         Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
 
-        while (iterator.hasNext())
-        {
-            EnumFacing enumfacing = (EnumFacing)iterator.next();
+        while (iterator.hasNext()) {
+            EnumFacing enumfacing = (EnumFacing) iterator.next();
 
-            if (worldIn.getBlockState(pos.offset(enumfacing)).getBlock().getMaterial().isSolid())
-            {
+            if (worldIn.getBlockState(pos.offset(enumfacing)).getBlock().getMaterial().isSolid()) {
                 return false;
             }
         }
@@ -118,25 +118,22 @@
         return block == Blocks.cactus || block == Blocks.sand;
     }
 
-    public void onEntityCollidedWithBlock(World worldIn, BlockPos pos, IBlockState state, Entity entityIn)
-    {
+    public void onEntityCollidedWithBlock(World worldIn, BlockPos pos, IBlockState state, Entity entityIn) {
+        CraftEventFactory.blockDamage = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ()); // CraftBukkit
         entityIn.attackEntityFrom(DamageSource.cactus, 1.0F);
+        CraftEventFactory.blockDamage = null; // CraftBukkit
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(AGE, Integer.valueOf(meta));
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
+    public int getMetaFromState(IBlockState state) {
+        return ((Integer) state.getValue(AGE)).intValue();
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((Integer)state.getValue(AGE)).intValue();
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{AGE});
     }
-
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {AGE});
-    }
-}
+}
