--- decompiled\net\minecraft\block\BlockPortal.java
+++ src\main\java\net\minecraft\block\BlockPortal.java
@@ -1,29 +1,32 @@
 package net.minecraft.block;
 
+import java.util.Collection;
+import java.util.HashSet;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
 import net.minecraft.init.Blocks;
-import net.minecraft.item.Item;
 import net.minecraft.item.ItemMonsterPlacer;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumParticleTypes;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.Location;
+import org.bukkit.event.entity.EntityPortalEnterEvent;
+import org.bukkit.event.world.PortalCreateEvent;
+
 public class BlockPortal extends BlockBreakable
 {
+
     public static final PropertyEnum AXIS = PropertyEnum.create("axis", EnumFacing.Axis.class, new EnumFacing.Axis[] {EnumFacing.Axis.X, EnumFacing.Axis.Z});
     private static final String __OBFID = "CL_00000284";
 
     public BlockPortal()
     {
@@ -34,11 +37,11 @@
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         super.updateTick(worldIn, pos, state, rand);
 
-        if (worldIn.provider.isSurfaceWorld() && worldIn.getGameRules().getGameRuleBooleanValue("doMobSpawning") && rand.nextInt(2000) < worldIn.getDifficulty().getDifficultyId())
+        if (worldIn.spigotConfig.enableZombiePigmenPortalSpawns && worldIn.provider.isSurfaceWorld() && worldIn.getGameRules().getGameRuleBooleanValue("doMobSpawning") && rand.nextInt(2000) < worldIn.getDifficulty().getDifficultyId())   // Spigot        {
         {
             int i = pos.getY();
             BlockPos blockpos1;
 
             for (blockpos1 = pos; !World.doesBlockHaveSolidTopSurface(worldIn, blockpos1) && blockpos1.getY() > 0; blockpos1 = blockpos1.down())
@@ -46,11 +49,12 @@
                 ;
             }
 
             if (i > 0 && !worldIn.getBlockState(blockpos1.up()).getBlock().isNormalCube())
             {
-                Entity entity = ItemMonsterPlacer.spawnCreature(worldIn, 57, (double)blockpos1.getX() + 0.5D, (double)blockpos1.getY() + 1.1D, (double)blockpos1.getZ() + 0.5D);
+                // CraftBukkit - set spawn reason to NETHER_PORTAL
+                Entity entity = ItemMonsterPlacer.spawnCreature(worldIn, 57, (double)blockpos1.getX() + 0.5D, (double)blockpos1.getY() + 1.1D, (double)blockpos1.getZ() + 0.5D, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.NETHER_PORTAL);
 
                 if (entity != null)
                 {
                     entity.timeUntilPortal = entity.getPortalCooldown();
                 }
@@ -96,21 +100,23 @@
     {
         BlockPortal.Size size = new BlockPortal.Size(worldIn, p_176548_2_, EnumFacing.Axis.X);
 
         if (size.func_150860_b() && size.field_150864_e == 0)
         {
-            size.func_150859_c();
-            return true;
+            // CraftBukkit start -- Return portal creator
+            return size.func_150859_c();
+            // return true;
         }
         else
         {
             BlockPortal.Size size1 = new BlockPortal.Size(worldIn, p_176548_2_, EnumFacing.Axis.Z);
 
             if (size1.func_150860_b() && size1.field_150864_e == 0)
             {
-                size1.func_150859_c();
-                return true;
+                return size1.func_150859_c();
+                // return true;
+                // CraftBukkit end
             }
             else
             {
                 return false;
             }
@@ -140,128 +146,54 @@
                 worldIn.setBlockState(pos, Blocks.air.getDefaultState());
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean shouldSideBeRendered(IBlockAccess worldIn, BlockPos pos, EnumFacing side)
-    {
-        EnumFacing.Axis axis = null;
-        IBlockState iblockstate = worldIn.getBlockState(pos);
-
-        if (worldIn.getBlockState(pos).getBlock() == this)
-        {
-            axis = (EnumFacing.Axis)iblockstate.getValue(AXIS);
-
-            if (axis == null)
-            {
-                return false;
-            }
-
-            if (axis == EnumFacing.Axis.Z && side != EnumFacing.EAST && side != EnumFacing.WEST)
-            {
-                return false;
-            }
-
-            if (axis == EnumFacing.Axis.X && side != EnumFacing.SOUTH && side != EnumFacing.NORTH)
-            {
-                return false;
-            }
-        }
-
-        boolean flag = worldIn.getBlockState(pos.west()).getBlock() == this && worldIn.getBlockState(pos.west(2)).getBlock() != this;
-        boolean flag1 = worldIn.getBlockState(pos.east()).getBlock() == this && worldIn.getBlockState(pos.east(2)).getBlock() != this;
-        boolean flag2 = worldIn.getBlockState(pos.north()).getBlock() == this && worldIn.getBlockState(pos.north(2)).getBlock() != this;
-        boolean flag3 = worldIn.getBlockState(pos.south()).getBlock() == this && worldIn.getBlockState(pos.south(2)).getBlock() != this;
-        boolean flag4 = flag || flag1 || axis == EnumFacing.Axis.X;
-        boolean flag5 = flag2 || flag3 || axis == EnumFacing.Axis.Z;
-        return flag4 && side == EnumFacing.WEST ? true : (flag4 && side == EnumFacing.EAST ? true : (flag5 && side == EnumFacing.NORTH ? true : flag5 && side == EnumFacing.SOUTH));
-    }
-
     public int quantityDropped(Random random)
     {
         return 0;
     }
 
     public void onEntityCollidedWithBlock(World worldIn, BlockPos pos, IBlockState state, Entity entityIn)
     {
         if (entityIn.ridingEntity == null && entityIn.riddenByEntity == null)
         {
+            // CraftBukkit start - Entity in portal
+            EntityPortalEnterEvent event = new EntityPortalEnterEvent(entityIn.getBukkitEntity(), new Location(worldIn.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
+            worldIn.getServer().getPluginManager().callEvent(event);
+            // CraftBukkit end
             entityIn.setInPortal();
         }
     }
 
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(AXIS, (meta & 3) == 2 ? EnumFacing.Axis.Z : EnumFacing.Axis.X);
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.TRANSLUCENT;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public void randomDisplayTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
-    {
-        if (rand.nextInt(100) == 0)
-        {
-            worldIn.playSound((double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, "portal.portal", 0.5F, rand.nextFloat() * 0.4F + 0.8F, false);
-        }
-
-        for (int i = 0; i < 4; ++i)
-        {
-            double d0 = (double)((float)pos.getX() + rand.nextFloat());
-            double d1 = (double)((float)pos.getY() + rand.nextFloat());
-            double d2 = (double)((float)pos.getZ() + rand.nextFloat());
-            double d3 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
-            double d4 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
-            double d5 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
-            int j = rand.nextInt(2) * 2 - 1;
-
-            if (worldIn.getBlockState(pos.west()).getBlock() != this && worldIn.getBlockState(pos.east()).getBlock() != this)
-            {
-                d0 = (double)pos.getX() + 0.5D + 0.25D * (double)j;
-                d3 = (double)(rand.nextFloat() * 2.0F * (float)j);
-            }
-            else
-            {
-                d2 = (double)pos.getZ() + 0.5D + 0.25D * (double)j;
-                d5 = (double)(rand.nextFloat() * 2.0F * (float)j);
-            }
-
-            worldIn.spawnParticle(EnumParticleTypes.PORTAL, d0, d1, d2, d3, d4, d5, new int[0]);
-        }
-    }
-
     public int getMetaFromState(IBlockState state)
     {
         return getMetaForAxis((EnumFacing.Axis)state.getValue(AXIS));
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
-        return null;
-    }
-
     protected BlockState createBlockState()
     {
         return new BlockState(this, new IProperty[] {AXIS});
     }
 
     public static class Size
         {
+
             private final World world;
             private final EnumFacing.Axis axis;
             private final EnumFacing field_150866_c;
             private final EnumFacing field_150863_d;
             private int field_150864_e = 0;
             private BlockPos field_150861_f;
             private int field_150862_g;
             private int field_150868_h;
+            Collection blocks = new HashSet(); // CraftBukkit - add field
             private static final String __OBFID = "CL_00000285";
 
             public Size(World worldIn, BlockPos p_i45694_2_, EnumFacing.Axis p_i45694_3_)
             {
                 this.world = worldIn;
@@ -321,10 +253,14 @@
                 return block == Blocks.obsidian ? i : 0;
             }
 
             protected int func_150858_a()
             {
+                // CraftBukkit start
+                this.blocks.clear();
+                org.bukkit.World bworld = this.world.getWorld();
+                // CraftBukkit end
                 int i;
                 label56:
 
                 for (this.field_150862_g = 0; this.field_150862_g < 21; ++this.field_150862_g)
                 {
@@ -348,31 +284,52 @@
                             block = this.world.getBlockState(blockpos.offset(this.field_150863_d)).getBlock();
 
                             if (block != Blocks.obsidian)
                             {
                                 break label56;
+                                // CraftBukkit start - add the block to our list
                             }
+                            else
+                            {
+                                BlockPos pos = blockpos.offset(this.field_150863_d);
+                                blocks.add(bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+                                // CraftBukkit end
+                            }
                         }
                         else if (i == this.field_150868_h - 1)
                         {
                             block = this.world.getBlockState(blockpos.offset(this.field_150866_c)).getBlock();
 
                             if (block != Blocks.obsidian)
                             {
                                 break label56;
+                                // CraftBukkit start - add the block to our list
                             }
+                            else
+                            {
+                                BlockPos pos = blockpos.offset(this.field_150863_d);
+                                blocks.add(bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+                                // CraftBukkit end
+                            }
                         }
                     }
                 }
 
                 for (i = 0; i < this.field_150868_h; ++i)
                 {
                     if (this.world.getBlockState(this.field_150861_f.offset(this.field_150866_c, i).up(this.field_150862_g)).getBlock() != Blocks.obsidian)
                     {
                         this.field_150862_g = 0;
                         break;
+                        // CraftBukkit start - add the block to our list
                     }
+                    else
+                    {
+                        BlockPos pos = this.field_150861_f.offset(this.field_150866_c, i).up(this.field_150862_g);
+                        blocks.add(bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+                        // CraftBukkit end
+                    }
                 }
 
                 if (this.field_150862_g <= 21 && this.field_150862_g >= 3)
                 {
                     return this.field_150862_g;
@@ -394,19 +351,45 @@
             public boolean func_150860_b()
             {
                 return this.field_150861_f != null && this.field_150868_h >= 2 && this.field_150868_h <= 21 && this.field_150862_g >= 3 && this.field_150862_g <= 21;
             }
 
-            public void func_150859_c()
+            // CraftBukkit start - return boolean
+            public boolean func_150859_c()
             {
+                org.bukkit.World bworld = this.world.getWorld();
+
+                // Copy below for loop
                 for (int i = 0; i < this.field_150868_h; ++i)
                 {
+                    BlockPos blockposition = this.field_150861_f.offset(this.field_150866_c, i);
+
+                    for (int j = 0; j < this.field_150862_g; ++j)
+                    {
+                        BlockPos pos = blockposition.up(j);
+                        blocks.add(bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+                    }
+                }
+
+                PortalCreateEvent event = new PortalCreateEvent(blocks, bworld, PortalCreateEvent.CreateReason.FIRE);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled())
+                {
+                    return false;
+                }
+
+                // CraftBukkit end
+                for (int i = 0; i < this.field_150868_h; ++i)
+                {
                     BlockPos blockpos = this.field_150861_f.offset(this.field_150866_c, i);
 
                     for (int j = 0; j < this.field_150862_g; ++j)
                     {
                         this.world.setBlockState(blockpos.up(j), Blocks.portal.getDefaultState().withProperty(BlockPortal.AXIS, this.axis), 2);
                     }
                 }
+
+                return true; // Craft Bukkit
             }
         }
 }
