--- decompiled\net\minecraft\block\BlockSnow.java
+++ src\main\java\net\minecraft\block\BlockSnow.java
@@ -1,8 +1,9 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyInteger;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
@@ -14,19 +15,18 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.stats.StatList;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.EnumFacing;
 import net.minecraft.world.EnumSkyBlock;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class BlockSnow extends Block
 {
+
     public static final PropertyInteger LAYERS = PropertyInteger.create("layers", 1, 8);
     private static final String __OBFID = "CL_00000309";
 
     protected BlockSnow()
     {
@@ -121,21 +121,22 @@
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (worldIn.getLightFor(EnumSkyBlock.BLOCK, pos) > 11)
         {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callBlockFadeEvent(worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ()), Blocks.air).isCancelled())
+            {
+                return;
+            }
+
+            // CraftBukkit end
             this.dropBlockAsItem(worldIn, pos, worldIn.getBlockState(pos), 0);
             worldIn.setBlockToAir(pos);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean shouldSideBeRendered(IBlockAccess worldIn, BlockPos pos, EnumFacing side)
-    {
-        return side == EnumFacing.UP ? true : super.shouldSideBeRendered(worldIn, pos, side);
-    }
-
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(LAYERS, Integer.valueOf((meta & 7) + 1));
     }
 
