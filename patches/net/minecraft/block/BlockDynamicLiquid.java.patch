--- decompiled\net\minecraft\block\BlockDynamicLiquid.java
+++ src\main\java\net\minecraft\block\BlockDynamicLiquid.java
@@ -2,19 +2,24 @@
 
 import java.util.EnumSet;
 import java.util.Iterator;
 import java.util.Random;
 import java.util.Set;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
+import org.bukkit.block.BlockFace;
+import org.bukkit.event.block.BlockFromToEvent;
+
 public class BlockDynamicLiquid extends BlockLiquid
 {
+
     int adjacentSourceBlocks;
     private static final String __OBFID = "CL_00000234";
 
     protected BlockDynamicLiquid(Material materialIn)
     {
@@ -26,10 +31,15 @@
         worldIn.setBlockState(pos, getStaticBlock(this.blockMaterial).getDefaultState().withProperty(LEVEL, currentState.getValue(LEVEL)), 2);
     }
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
+        // CraftBukkit start
+        org.bukkit.World bworld = worldIn.getWorld();
+        org.bukkit.Server server = worldIn.getServer();
+        org.bukkit.block.Block source = bworld == null ? null : bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+        // CraftBukkit end
         int i = ((Integer)state.getValue(LEVEL)).intValue();
         byte b0 = 1;
 
         if (this.blockMaterial == Material.lava && !worldIn.provider.doesWaterVaporize())
         {
@@ -118,25 +128,38 @@
 
         IBlockState iblockstate1 = worldIn.getBlockState(pos.down());
 
         if (this.canFlowInto(worldIn, pos.down(), iblockstate1))
         {
-            if (this.blockMaterial == Material.lava && worldIn.getBlockState(pos.down()).getBlock().getMaterial() == Material.water)
+            // CraftBukkit start - Send "down" to the server
+            BlockFromToEvent event = new BlockFromToEvent(source, BlockFace.DOWN);
+
+            if (server != null)
             {
-                worldIn.setBlockState(pos.down(), Blocks.stone.getDefaultState());
-                this.triggerMixEffects(worldIn, pos.down());
-                return;
+                server.getPluginManager().callEvent(event);
             }
 
-            if (i >= 8)
+            if (!event.isCancelled())
             {
-                this.tryFlowInto(worldIn, pos.down(), iblockstate1, i);
+                if (this.blockMaterial == Material.lava && worldIn.getBlockState(pos.down()).getBlock().getMaterial() == Material.water)
+                {
+                    worldIn.setBlockState(pos.down(), Blocks.stone.getDefaultState());
+                    this.triggerMixEffects(worldIn, pos.down());
+                    return;
+                }
+
+                if (i >= 8)
+                {
+                    this.tryFlowInto(worldIn, pos.down(), iblockstate1, i);
+                }
+                else
+                {
+                    this.tryFlowInto(worldIn, pos.down(), iblockstate1, i + 8);
+                }
             }
-            else
-            {
-                this.tryFlowInto(worldIn, pos.down(), iblockstate1, i + 8);
-            }
+
+            // CraftBukkit end
         }
         else if (i >= 0 && (i == 0 || this.isBlocked(worldIn, pos.down(), iblockstate1)))
         {
             Set set = this.getPossibleFlowDirections(worldIn, pos);
             i1 = i + b0;
@@ -154,11 +177,24 @@
             Iterator iterator1 = set.iterator();
 
             while (iterator1.hasNext())
             {
                 EnumFacing enumfacing1 = (EnumFacing)iterator1.next();
-                this.tryFlowInto(worldIn, pos.offset(enumfacing1), worldIn.getBlockState(pos.offset(enumfacing1)), i1);
+                // CraftBukkit start
+                BlockFromToEvent event = new BlockFromToEvent(source, org.bukkit.craftbukkit.block.CraftBlock.notchToBlockFace(enumfacing1));
+
+                if (server != null)
+                {
+                    server.getPluginManager().callEvent(event);
+                }
+
+                if (!event.isCancelled())
+                {
+                    this.tryFlowInto(worldIn, pos.offset(enumfacing1), worldIn.getBlockState(pos.offset(enumfacing1)), i1);
+                }
+
+                // CraftBukkit end
             }
         }
     }
 
     private void tryFlowInto(World worldIn, BlockPos pos, IBlockState state, int level)
