--- decompiled\net\minecraft\block\BlockTallGrass.java
+++ src\main\java\net\minecraft\block\BlockTallGrass.java
@@ -1,32 +1,29 @@
 package net.minecraft.block;
 
-import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
-import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.stats.StatList;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.IStringSerializable;
-import net.minecraft.world.ColorizerGrass;
-import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class BlockTallGrass extends BlockBush implements IGrowable
 {
+
     public static final PropertyEnum TYPE = PropertyEnum.create("type", BlockTallGrass.EnumType.class);
     private static final String __OBFID = "CL_00000321";
 
     protected BlockTallGrass()
     {
@@ -34,46 +31,20 @@
         this.setDefaultState(this.blockState.getBaseState().withProperty(TYPE, BlockTallGrass.EnumType.DEAD_BUSH));
         float f = 0.4F;
         this.setBlockBounds(0.5F - f, 0.0F, 0.5F - f, 0.5F + f, 0.8F, 0.5F + f);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getBlockColor()
-    {
-        return ColorizerGrass.getGrassColor(0.5D, 1.0D);
-    }
-
     public boolean canBlockStay(World worldIn, BlockPos pos, IBlockState state)
     {
         return this.canPlaceBlockOn(worldIn.getBlockState(pos.down()).getBlock());
     }
 
     public boolean isReplaceable(World worldIn, BlockPos pos)
     {
         return true;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getRenderColor(IBlockState state)
-    {
-        if (state.getBlock() != this)
-        {
-            return super.getRenderColor(state);
-        }
-        else
-        {
-            BlockTallGrass.EnumType enumtype = (BlockTallGrass.EnumType)state.getValue(TYPE);
-            return enumtype == BlockTallGrass.EnumType.DEAD_BUSH ? 16777215 : ColorizerGrass.getGrassColor(0.5D, 1.0D);
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int colorMultiplier(IBlockAccess worldIn, BlockPos pos, int renderPass)
-    {
-        return worldIn.getBiomeGenForCoords(pos).getGrassColorAtPos(pos);
-    }
-
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         return rand.nextInt(8) == 0 ? Items.wheat_seeds : null;
     }
 
@@ -99,19 +70,10 @@
     {
         IBlockState iblockstate = worldIn.getBlockState(pos);
         return iblockstate.getBlock().getMetaFromState(iblockstate);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        for (int i = 1; i < 3; ++i)
-        {
-            list.add(new ItemStack(itemIn, 1, i));
-        }
-    }
-
     public boolean canGrow(World worldIn, BlockPos pos, IBlockState state, boolean isClient)
     {
         return state.getValue(TYPE) != BlockTallGrass.EnumType.DEAD_BUSH;
     }
 
@@ -148,16 +110,10 @@
     protected BlockState createBlockState()
     {
         return new BlockState(this, new IProperty[] {TYPE});
     }
 
-    @SideOnly(Side.CLIENT)
-    public Block.EnumOffsetType getOffsetType()
-    {
-        return Block.EnumOffsetType.XYZ;
-    }
-
     public static enum EnumType implements IStringSerializable
     {
         DEAD_BUSH(0, "dead_bush"),
         GRASS(1, "tall_grass"),
         FERN(2, "fern");
