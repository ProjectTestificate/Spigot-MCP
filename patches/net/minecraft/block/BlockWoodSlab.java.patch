--- decompiled\net\minecraft\block\BlockWoodSlab.java
+++ src\main\java\net\minecraft\block\BlockWoodSlab.java
@@ -1,25 +1,23 @@
 package net.minecraft.block;
 
-import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.init.Blocks;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
-import net.minecraft.util.BlockPos;
-import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public abstract class BlockWoodSlab extends BlockSlab
 {
+
     public static final PropertyEnum VARIANT = PropertyEnum.create("variant", BlockPlanks.EnumType.class);
     private static final String __OBFID = "CL_00000337";
 
     public BlockWoodSlab()
     {
@@ -38,16 +36,10 @@
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         return Item.getItemFromBlock(Blocks.wooden_slab);
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
-        return Item.getItemFromBlock(Blocks.wooden_slab);
-    }
-
     public String getUnlocalizedName(int meta)
     {
         return super.getUnlocalizedName() + "." + BlockPlanks.EnumType.byMetadata(meta).getUnlocalizedName();
     }
 
@@ -59,26 +51,10 @@
     public Object getVariant(ItemStack stack)
     {
         return BlockPlanks.EnumType.byMetadata(stack.getMetadata() & 7);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        if (itemIn != Item.getItemFromBlock(Blocks.double_wooden_slab))
-        {
-            BlockPlanks.EnumType[] aenumtype = BlockPlanks.EnumType.values();
-            int i = aenumtype.length;
-
-            for (int j = 0; j < i; ++j)
-            {
-                BlockPlanks.EnumType enumtype = aenumtype[j];
-                list.add(new ItemStack(itemIn, 1, enumtype.getMetadata()));
-            }
-        }
-    }
-
     public IBlockState getStateFromMeta(int meta)
     {
         IBlockState iblockstate = this.getDefaultState().withProperty(VARIANT, BlockPlanks.EnumType.byMetadata(meta & 7));
 
         if (!this.isDouble())
@@ -102,11 +78,11 @@
         return i;
     }
 
     protected BlockState createBlockState()
     {
-        return this.isDouble() ? new BlockState(this, new IProperty[] {VARIANT}): new BlockState(this, new IProperty[] {HALF, VARIANT});
+        return this.isDouble() ? new BlockState(this, new IProperty[] {VARIANT}) : new BlockState(this, new IProperty[] {HALF, VARIANT});
     }
 
     public int damageDropped(IBlockState state)
     {
         return ((BlockPlanks.EnumType)state.getValue(VARIANT)).getMetadata();
