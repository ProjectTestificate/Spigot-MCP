---a/net/minecraft/block/state/BlockStateBase.java
+++b/net/minecraft/block/state/BlockStateBase.java
@@ -1,75 +1,62 @@
 package net.minecraft.block.state;
 
-import com.google.common.base.Function;
-import com.google.common.base.Joiner;
-import com.google.common.collect.Iterables;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.Map.Entry;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.properties.IProperty;
 
-public abstract class BlockStateBase implements IBlockState
-{
+import com.google.common.base.Function;
+import com.google.common.base.Joiner;
+import com.google.common.collect.Iterables;
+
+public abstract class BlockStateBase implements IBlockState {
+
     private static final Joiner COMMA_JOINER = Joiner.on(',');
-    private static final Function MAP_ENTRY_TO_STRING = new Function()
-    {
+    private static final Function MAP_ENTRY_TO_STRING = new Function() {
+
         private static final String __OBFID = "CL_00002031";
-        public String func_177225_a(Entry p_177225_1_)
-        {
-            if (p_177225_1_ == null)
-            {
+
+        public String func_177225_a(Entry p_177225_1_) {
+            if (p_177225_1_ == null) {
                 return "<NULL>";
+            } else {
+                IProperty iproperty = (IProperty) p_177225_1_.getKey();
+                return iproperty.getName() + "=" + iproperty.getName((Comparable) p_177225_1_.getValue());
             }
-            else
-            {
-                IProperty iproperty = (IProperty)p_177225_1_.getKey();
-                return iproperty.getName() + "=" + iproperty.getName((Comparable)p_177225_1_.getValue());
-            }
         }
-        public Object apply(Object p_apply_1_)
-        {
-            return this.func_177225_a((Entry)p_apply_1_);
+
+        public Object apply(Object p_apply_1_) {
+            return this.func_177225_a((Entry) p_apply_1_);
         }
     };
     private static final String __OBFID = "CL_00002032";
 
-    public IBlockState cycleProperty(IProperty property)
-    {
-        return this.withProperty(property, (Comparable)cyclePropertyValue(property.getAllowedValues(), this.getValue(property)));
+    public IBlockState cycleProperty(IProperty property) {
+        return this.withProperty(property, (Comparable) cyclePropertyValue(property.getAllowedValues(), this.getValue(property)));
     }
 
-    protected static Object cyclePropertyValue(Collection values, Object currentValue)
-    {
+    protected static Object cyclePropertyValue(Collection values, Object currentValue) {
         Iterator iterator = values.iterator();
 
-        do
-        {
-            if (!iterator.hasNext())
-            {
+        do {
+            if (!iterator.hasNext()) {
                 return iterator.next();
             }
-        }
-        while (!iterator.next().equals(currentValue));
+        } while (!iterator.next().equals(currentValue));
 
-        if (iterator.hasNext())
-        {
+        if (iterator.hasNext()) {
             return iterator.next();
-        }
-        else
-        {
+        } else {
             return values.iterator().next();
         }
     }
 
-    public String toString()
-    {
+    public String toString() {
         StringBuilder stringbuilder = new StringBuilder();
         stringbuilder.append(Block.blockRegistry.getNameForObject(this.getBlock()));
 
-        if (!this.getProperties().isEmpty())
-        {
+        if (!this.getProperties().isEmpty()) {
             stringbuilder.append("[");
             COMMA_JOINER.appendTo(stringbuilder, Iterables.transform(this.getProperties().entrySet(), MAP_ENTRY_TO_STRING));
             stringbuilder.append("]");
@@ -76,4 +76,4 @@
 
         return stringbuilder.toString();
     }
-}
+}
