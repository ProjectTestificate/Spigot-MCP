---a/net/minecraft/block/state/BlockPistonStructureHelper.java
+++b/net/minecraft/block/state/BlockPistonStructureHelper.java
@@ -1,9 +1,7 @@
 package net.minecraft.block.state;
 
-import com.google.common.collect.Lists;
 import java.util.ArrayList;
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockPistonBase;
 import net.minecraft.block.material.Material;
@@ -11,8 +11,10 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
-public class BlockPistonStructureHelper
-{
+import com.google.common.collect.Lists;
+
+public class BlockPistonStructureHelper {
+
     private final World world;
     private final BlockPos pistonPos;
     private final BlockPos blockToMove;
@@ -21,53 +21,38 @@
     private final List toDestroy = Lists.newArrayList();
     private static final String __OBFID = "CL_00002033";
 
-    public BlockPistonStructureHelper(World worldIn, BlockPos posIn, EnumFacing pistonFacing, boolean extending)
-    {
+    public BlockPistonStructureHelper(World worldIn, BlockPos posIn, EnumFacing pistonFacing, boolean extending) {
         this.world = worldIn;
         this.pistonPos = posIn;
 
-        if (extending)
-        {
+        if (extending) {
             this.moveDirection = pistonFacing;
             this.blockToMove = posIn.offset(pistonFacing);
-        }
-        else
-        {
+        } else {
             this.moveDirection = pistonFacing.getOpposite();
             this.blockToMove = posIn.offset(pistonFacing, 2);
         }
     }
 
-    public boolean canMove()
-    {
+    public boolean canMove() {
         this.toMove.clear();
         this.toDestroy.clear();
         Block block = this.world.getBlockState(this.blockToMove).getBlock();
 
-        if (!BlockPistonBase.canPush(block, this.world, this.blockToMove, this.moveDirection, false))
-        {
-            if (block.getMobilityFlag() != 1)
-            {
+        if (!BlockPistonBase.canPush(block, this.world, this.blockToMove, this.moveDirection, false)) {
+            if (block.getMobilityFlag() != 1) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.toDestroy.add(this.blockToMove);
                 return true;
             }
-        }
-        else if (!this.func_177251_a(this.blockToMove))
-        {
+        } else if (!this.func_177251_a(this.blockToMove)) {
             return false;
-        }
-        else
-        {
-            for (int i = 0; i < this.toMove.size(); ++i)
-            {
-                BlockPos blockpos = (BlockPos)this.toMove.get(i);
+        } else {
+            for (int i = 0; i < this.toMove.size(); ++i) {
+                BlockPos blockpos = (BlockPos) this.toMove.get(i);
 
-                if (this.world.getBlockState(blockpos).getBlock() == Blocks.slime_block && !this.func_177250_b(blockpos))
-                {
+                if (this.world.getBlockState(blockpos).getBlock() == Blocks.slime_block && !this.func_177250_b(blockpos)) {
                     return false;
                 }
             }
@@ -76,50 +76,34 @@
         }
     }
 
-    private boolean func_177251_a(BlockPos origin)
-    {
+    private boolean func_177251_a(BlockPos origin) {
         Block block = this.world.getBlockState(origin).getBlock();
 
-        if (block.getMaterial() == Material.air)
-        {
+        if (block.getMaterial() == Material.air) {
             return true;
-        }
-        else if (!BlockPistonBase.canPush(block, this.world, origin, this.moveDirection, false))
-        {
+        } else if (!BlockPistonBase.canPush(block, this.world, origin, this.moveDirection, false)) {
             return true;
-        }
-        else if (origin.equals(this.pistonPos))
-        {
+        } else if (origin.equals(this.pistonPos)) {
             return true;
-        }
-        else if (this.toMove.contains(origin))
-        {
+        } else if (this.toMove.contains(origin)) {
             return true;
-        }
-        else
-        {
+        } else {
             int i = 1;
 
-            if (i + this.toMove.size() > 12)
-            {
+            if (i + this.toMove.size() > 12) {
                 return false;
-            }
-            else
-            {
-                while (block == Blocks.slime_block)
-                {
+            } else {
+                while (block == Blocks.slime_block) {
                     BlockPos blockpos1 = origin.offset(this.moveDirection.getOpposite(), i);
                     block = this.world.getBlockState(blockpos1).getBlock();
 
-                    if (block.getMaterial() == Material.air || !BlockPistonBase.canPush(block, this.world, blockpos1, this.moveDirection, false) || blockpos1.equals(this.pistonPos))
-                    {
+                    if (block.getMaterial() == Material.air || !BlockPistonBase.canPush(block, this.world, blockpos1, this.moveDirection, false) || blockpos1.equals(this.pistonPos)) {
                         break;
                     }
 
                     ++i;
 
-                    if (i + this.toMove.size() > 12)
-                    {
+                    if (i + this.toMove.size() > 12) {
                         return false;
                     }
                 }
@@ -127,29 +127,24 @@
                 int i1 = 0;
                 int j;
 
-                for (j = i - 1; j >= 0; --j)
-                {
+                for (j = i - 1; j >= 0; --j) {
                     this.toMove.add(origin.offset(this.moveDirection.getOpposite(), j));
                     ++i1;
                 }
 
                 j = 1;
 
-                while (true)
-                {
+                while (true) {
                     BlockPos blockpos2 = origin.offset(this.moveDirection, j);
                     int k = this.toMove.indexOf(blockpos2);
 
-                    if (k > -1)
-                    {
+                    if (k > -1) {
                         this.func_177255_a(i1, k);
 
-                        for (int l = 0; l <= k + i1; ++l)
-                        {
-                            BlockPos blockpos3 = (BlockPos)this.toMove.get(l);
+                        for (int l = 0; l <= k + i1; ++l) {
+                            BlockPos blockpos3 = (BlockPos) this.toMove.get(l);
 
-                            if (this.world.getBlockState(blockpos3).getBlock() == Blocks.slime_block && !this.func_177250_b(blockpos3))
-                            {
+                            if (this.world.getBlockState(blockpos3).getBlock() == Blocks.slime_block && !this.func_177250_b(blockpos3)) {
                                 return false;
                             }
                         }
@@ -159,24 +159,20 @@
 
                     block = this.world.getBlockState(blockpos2).getBlock();
 
-                    if (block.getMaterial() == Material.air)
-                    {
+                    if (block.getMaterial() == Material.air) {
                         return true;
                     }
 
-                    if (!BlockPistonBase.canPush(block, this.world, blockpos2, this.moveDirection, true) || blockpos2.equals(this.pistonPos))
-                    {
+                    if (!BlockPistonBase.canPush(block, this.world, blockpos2, this.moveDirection, true) || blockpos2.equals(this.pistonPos)) {
                         return false;
                     }
 
-                    if (block.getMobilityFlag() == 1)
-                    {
+                    if (block.getMobilityFlag() == 1) {
                         this.toDestroy.add(blockpos2);
                         return true;
                     }
 
-                    if (this.toMove.size() >= 12)
-                    {
+                    if (this.toMove.size() >= 12) {
                         return false;
                     }
 
@@ -188,8 +188,7 @@
         }
     }
 
-    private void func_177255_a(int p_177255_1_, int p_177255_2_)
-    {
+    private void func_177255_a(int p_177255_1_, int p_177255_2_) {
         ArrayList arraylist = Lists.newArrayList();
         ArrayList arraylist1 = Lists.newArrayList();
         ArrayList arraylist2 = Lists.newArrayList();
@@ -202,17 +202,14 @@
         this.toMove.addAll(arraylist2);
     }
 
-    private boolean func_177250_b(BlockPos p_177250_1_)
-    {
+    private boolean func_177250_b(BlockPos p_177250_1_) {
         EnumFacing[] aenumfacing = EnumFacing.values();
         int i = aenumfacing.length;
 
-        for (int j = 0; j < i; ++j)
-        {
+        for (int j = 0; j < i; ++j) {
             EnumFacing enumfacing = aenumfacing[j];
 
-            if (enumfacing.getAxis() != this.moveDirection.getAxis() && !this.func_177251_a(p_177250_1_.offset(enumfacing)))
-            {
+            if (enumfacing.getAxis() != this.moveDirection.getAxis() && !this.func_177251_a(p_177250_1_.offset(enumfacing))) {
                 return false;
             }
         }
@@ -220,14 +220,11 @@
         return true;
     }
 
-    public List getBlocksToMove()
-    {
+    public List getBlocksToMove() {
         return this.toMove;
     }
 
-    public List getBlocksToDestroy()
-    {
+    public List getBlocksToDestroy() {
         return this.toDestroy;
     }
-}
+}
