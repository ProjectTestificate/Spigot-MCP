---a/net/minecraft/block/BlockStainedGlassPane.java
+++b/net/minecraft/block/BlockStainedGlassPane.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.List;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
@@ -8,75 +8,45 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.item.EnumDyeColor;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockStainedGlassPane extends BlockPane
-{
+
+public class BlockStainedGlassPane extends BlockPane {
+
     public static final PropertyEnum COLOR = PropertyEnum.create("color", EnumDyeColor.class);
     private static final String __OBFID = "CL_00000313";
 
-    public BlockStainedGlassPane()
-    {
+    public BlockStainedGlassPane() {
         super(Material.glass, false);
         this.setDefaultState(this.blockState.getBaseState().withProperty(NORTH, Boolean.valueOf(false)).withProperty(EAST, Boolean.valueOf(false)).withProperty(SOUTH, Boolean.valueOf(false)).withProperty(WEST, Boolean.valueOf(false)).withProperty(COLOR, EnumDyeColor.WHITE));
         this.setCreativeTab(CreativeTabs.tabDecorations);
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        return ((EnumDyeColor)state.getValue(COLOR)).getMetadata();
+    public int damageDropped(IBlockState state) {
+        return ((EnumDyeColor) state.getValue(COLOR)).getMetadata();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        for (int i = 0; i < EnumDyeColor.values().length; ++i)
-        {
-            list.add(new ItemStack(itemIn, 1, i));
-        }
-    }
-
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(COLOR, EnumDyeColor.byMetadata(meta));
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.TRANSLUCENT;
+    public int getMetaFromState(IBlockState state) {
+        return ((EnumDyeColor) state.getValue(COLOR)).getMetadata();
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((EnumDyeColor)state.getValue(COLOR)).getMetadata();
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{NORTH, EAST, WEST, SOUTH, COLOR});
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {NORTH, EAST, WEST, SOUTH, COLOR});
-    }
-
-    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state)
-    {
-        if (!worldIn.isRemote)
-        {
+    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state) {
+        if (!worldIn.isRemote) {
             BlockBeacon.updateColorAsync(worldIn, pos);
         }
     }
 
-    public void breakBlock(World worldIn, BlockPos pos, IBlockState state)
-    {
-        if (!worldIn.isRemote)
-        {
+    public void breakBlock(World worldIn, BlockPos pos, IBlockState state) {
+        if (!worldIn.isRemote) {
             BlockBeacon.updateColorAsync(worldIn, pos);
         }
     }
-}
+}
