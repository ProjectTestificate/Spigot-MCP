---a/net/minecraft/block/BlockLever.java
+++b/net/minecraft/block/BlockLever.java
@@ -1,6 +1,7 @@
 package net.minecraft.block;
 
 import java.util.Iterator;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
@@ -17,84 +17,73 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockLever extends Block
-{
+import org.bukkit.event.block.BlockRedstoneEvent;
+
+public class BlockLever extends Block {
+
     public static final PropertyEnum FACING = PropertyEnum.create("facing", BlockLever.EnumOrientation.class);
     public static final PropertyBool POWERED = PropertyBool.create("powered");
     private static final String __OBFID = "CL_00000264";
 
-    protected BlockLever()
-    {
+    protected BlockLever() {
         super(Material.circuits);
         this.setDefaultState(this.blockState.getBaseState().withProperty(FACING, BlockLever.EnumOrientation.NORTH).withProperty(POWERED, Boolean.valueOf(false)));
         this.setCreativeTab(CreativeTabs.tabRedstone);
     }
 
-    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state) {
         return null;
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public boolean canPlaceBlockOnSide(World worldIn, BlockPos pos, EnumFacing side)
-    {
+    public boolean canPlaceBlockOnSide(World worldIn, BlockPos pos, EnumFacing side) {
         return side == EnumFacing.UP && World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) ? true : this.canSustainLever(worldIn, pos.offset(side.getOpposite()));
     }
 
-    public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
-    {
+    public boolean canPlaceBlockAt(World worldIn, BlockPos pos) {
         return this.canSustainLever(worldIn, pos.west()) ? true : (this.canSustainLever(worldIn, pos.east()) ? true : (this.canSustainLever(worldIn, pos.north()) ? true : (this.canSustainLever(worldIn, pos.south()) ? true : (World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) ? true : this.canSustainLever(worldIn, pos.up())))));
     }
 
-    protected boolean canSustainLever(World worldIn, BlockPos pos)
-    {
+    protected boolean canSustainLever(World worldIn, BlockPos pos) {
         return worldIn.getBlockState(pos).getBlock().isNormalCube();
     }
 
-    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
-    {
+    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer) {
         IBlockState iblockstate = this.getDefaultState().withProperty(POWERED, Boolean.valueOf(false));
 
-        if (this.canSustainLever(worldIn, pos.offset(facing.getOpposite())))
-        {
+        if (this.canSustainLever(worldIn, pos.offset(facing.getOpposite()))) {
             return iblockstate.withProperty(FACING, BlockLever.EnumOrientation.forFacings(facing, placer.getHorizontalFacing()));
-        }
-        else
-        {
+        } else {
             Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
             EnumFacing enumfacing1;
 
-            do
-            {
-                if (!iterator.hasNext())
-                {
-                    if (World.doesBlockHaveSolidTopSurface(worldIn, pos.down()))
-                    {
+            do {
+                if (!iterator.hasNext()) {
+                    if (World.doesBlockHaveSolidTopSurface(worldIn, pos.down())) {
                         return iblockstate.withProperty(FACING, BlockLever.EnumOrientation.forFacings(EnumFacing.UP, placer.getHorizontalFacing()));
                     }
 
                     return iblockstate;
                 }
 
-                enumfacing1 = (EnumFacing)iterator.next();
-            }
-            while (enumfacing1 == facing || !this.canSustainLever(worldIn, pos.offset(enumfacing1.getOpposite())));
+                enumfacing1 = (EnumFacing) iterator.next();
+            } while (enumfacing1 == facing || !this.canSustainLever(worldIn, pos.offset(enumfacing1.getOpposite())));
 
             return iblockstate.withProperty(FACING, BlockLever.EnumOrientation.forFacings(enumfacing1, placer.getHorizontalFacing()));
         }
     }
 
-    public static int getMetadataForFacing(EnumFacing facing)
-    {
-        switch (BlockLever.SwitchEnumFacing.FACING_LOOKUP[facing.ordinal()])
-        {
+    public static int getMetadataForFacing(EnumFacing facing) {
+        switch (BlockLever.SwitchEnumFacing.FACING_LOOKUP[facing.ordinal()]) {
             case 1:
                 return 0;
             case 2:
@@ -114,37 +114,28 @@
         }
     }
 
-    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
-    {
-        if (this.checkForDrop(worldIn, pos) && !this.canSustainLever(worldIn, pos.offset(((BlockLever.EnumOrientation)state.getValue(FACING)).getFacing().getOpposite())))
-        {
+    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock) {
+        if (this.checkForDrop(worldIn, pos) && !this.canSustainLever(worldIn, pos.offset(((BlockLever.EnumOrientation) state.getValue(FACING)).getFacing().getOpposite()))) {
             this.dropBlockAsItem(worldIn, pos, state, 0);
             worldIn.setBlockToAir(pos);
         }
     }
 
-    private boolean checkForDrop(World worldIn, BlockPos pos)
-    {
-        if (this.canPlaceBlockAt(worldIn, pos))
-        {
+    private boolean checkForDrop(World worldIn, BlockPos pos) {
+        if (this.canPlaceBlockAt(worldIn, pos)) {
             return true;
-        }
-        else
-        {
+        } else {
             this.dropBlockAsItem(worldIn, pos, worldIn.getBlockState(pos), 0);
             worldIn.setBlockToAir(pos);
             return false;
         }
     }
 
-    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos)
-    {
+    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos) {
         float f = 0.1875F;
 
-        switch (BlockLever.SwitchEnumFacing.ORIENTATION_LOOKUP[((BlockLever.EnumOrientation)worldIn.getBlockState(pos).getValue(FACING)).ordinal()])
-        {
+        switch (BlockLever.SwitchEnumFacing.ORIENTATION_LOOKUP[((BlockLever.EnumOrientation) worldIn.getBlockState(pos).getValue(FACING)).ordinal()]) {
             case 1:
                 this.setBlockBounds(0.0F, 0.2F, 0.5F - f, f * 2.0F, 0.8F, 0.5F + f);
                 break;
@@ -167,78 +167,77 @@
         }
     }
 
-    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
-    {
-        if (worldIn.isRemote)
-        {
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ) {
+        if (worldIn.isRemote) {
             return true;
-        }
-        else
-        {
+        } else {
+            // CraftBukkit start - Interact Lever
+            boolean powered = (Boolean) state.getValue(POWERED);
+            org.bukkit.block.Block block = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+            int old = (powered) ? 15 : 0;
+            int current = (!powered) ? 15 : 0;
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, old, current);
+            worldIn.getServer().getPluginManager().callEvent(eventRedstone);
+
+            if ((eventRedstone.getNewCurrent() > 0) != (!powered)) {
+                return true;
+            }
+            // CraftBukkit end
+
             state = state.cycleProperty(POWERED);
             worldIn.setBlockState(pos, state, 3);
-            worldIn.playSoundEffect((double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, "random.click", 0.3F, ((Boolean)state.getValue(POWERED)).booleanValue() ? 0.6F : 0.5F);
+            worldIn.playSoundEffect((double) pos.getX() + 0.5D, (double) pos.getY() + 0.5D, (double) pos.getZ() + 0.5D, "random.click", 0.3F, ((Boolean) state.getValue(POWERED)).booleanValue() ? 0.6F : 0.5F);
             worldIn.notifyNeighborsOfStateChange(pos, this);
-            EnumFacing enumfacing1 = ((BlockLever.EnumOrientation)state.getValue(FACING)).getFacing();
+            EnumFacing enumfacing1 = ((BlockLever.EnumOrientation) state.getValue(FACING)).getFacing();
             worldIn.notifyNeighborsOfStateChange(pos.offset(enumfacing1.getOpposite()), this);
             return true;
         }
     }
 
-    public void breakBlock(World worldIn, BlockPos pos, IBlockState state)
-    {
-        if (((Boolean)state.getValue(POWERED)).booleanValue())
-        {
+    public void breakBlock(World worldIn, BlockPos pos, IBlockState state) {
+        if (((Boolean) state.getValue(POWERED)).booleanValue()) {
             worldIn.notifyNeighborsOfStateChange(pos, this);
-            EnumFacing enumfacing = ((BlockLever.EnumOrientation)state.getValue(FACING)).getFacing();
+            EnumFacing enumfacing = ((BlockLever.EnumOrientation) state.getValue(FACING)).getFacing();
             worldIn.notifyNeighborsOfStateChange(pos.offset(enumfacing.getOpposite()), this);
         }
 
         super.breakBlock(worldIn, pos, state);
     }
 
-    public int isProvidingWeakPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side)
-    {
-        return ((Boolean)state.getValue(POWERED)).booleanValue() ? 15 : 0;
+    public int isProvidingWeakPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side) {
+        return ((Boolean) state.getValue(POWERED)).booleanValue() ? 15 : 0;
     }
 
-    public int isProvidingStrongPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side)
-    {
-        return !((Boolean)state.getValue(POWERED)).booleanValue() ? 0 : (((BlockLever.EnumOrientation)state.getValue(FACING)).getFacing() == side ? 15 : 0);
+    public int isProvidingStrongPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side) {
+        return !((Boolean) state.getValue(POWERED)).booleanValue() ? 0 : (((BlockLever.EnumOrientation) state.getValue(FACING)).getFacing() == side ? 15 : 0);
     }
 
-    public boolean canProvidePower()
-    {
+    public boolean canProvidePower() {
         return true;
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(FACING, BlockLever.EnumOrientation.byMetadata(meta & 7)).withProperty(POWERED, Boolean.valueOf((meta & 8) > 0));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
+    public int getMetaFromState(IBlockState state) {
         byte b0 = 0;
-        int i = b0 | ((BlockLever.EnumOrientation)state.getValue(FACING)).getMetadata();
+        int i = b0 | ((BlockLever.EnumOrientation) state.getValue(FACING)).getMetadata();
 
-        if (((Boolean)state.getValue(POWERED)).booleanValue())
-        {
+        if (((Boolean) state.getValue(POWERED)).booleanValue()) {
             i |= 8;
         }
 
         return i;
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {FACING, POWERED});
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{FACING, POWERED});
     }
 
-    public static enum EnumOrientation implements IStringSerializable
-    {
+    public static enum EnumOrientation implements IStringSerializable {
         DOWN_X(0, "down_x", EnumFacing.DOWN),
         EAST(1, "east", EnumFacing.EAST),
         WEST(2, "west", EnumFacing.WEST),
@@ -252,45 +252,36 @@
 
         private static final String __OBFID = "CL_00002102";
 
-        private EnumOrientation(int meta, String name, EnumFacing facing)
-        {
+        private EnumOrientation(int meta, String name, EnumFacing facing) {
             this.meta = meta;
             this.name = name;
             this.facing = facing;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.meta;
         }
 
-        public EnumFacing getFacing()
-        {
+        public EnumFacing getFacing() {
             return this.facing;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.name;
         }
 
-        public static BlockLever.EnumOrientation byMetadata(int meta)
-        {
-            if (meta < 0 || meta >= META_LOOKUP.length)
-            {
+        public static BlockLever.EnumOrientation byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
                 meta = 0;
             }
 
             return META_LOOKUP[meta];
         }
 
-        public static BlockLever.EnumOrientation forFacings(EnumFacing clickedSide, EnumFacing entityFacing)
-        {
-            switch (BlockLever.SwitchEnumFacing.FACING_LOOKUP[clickedSide.ordinal()])
-            {
+        public static BlockLever.EnumOrientation forFacings(EnumFacing clickedSide, EnumFacing entityFacing) {
+            switch (BlockLever.SwitchEnumFacing.FACING_LOOKUP[clickedSide.ordinal()]) {
                 case 1:
-                    switch (BlockLever.SwitchEnumFacing.AXIS_LOOKUP[entityFacing.getAxis().ordinal()])
-                    {
+                    switch (BlockLever.SwitchEnumFacing.AXIS_LOOKUP[entityFacing.getAxis().ordinal()]) {
                         case 1:
                             return DOWN_X;
                         case 2:
@@ -299,8 +299,7 @@
                             throw new IllegalArgumentException("Invalid entityFacing " + entityFacing + " for facing " + clickedSide);
                     }
                 case 2:
-                    switch (BlockLever.SwitchEnumFacing.AXIS_LOOKUP[entityFacing.getAxis().ordinal()])
-                    {
+                    switch (BlockLever.SwitchEnumFacing.AXIS_LOOKUP[entityFacing.getAxis().ordinal()]) {
                         case 1:
                             return UP_X;
                         case 2:
@@ -321,183 +321,129 @@
             }
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.name;
         }
 
-        static
-        {
+        static {
             BlockLever.EnumOrientation[] var0 = values();
             int var1 = var0.length;
 
-            for (int var2 = 0; var2 < var1; ++var2)
-            {
+            for (int var2 = 0; var2 < var1; ++var2) {
                 BlockLever.EnumOrientation var3 = var0[var2];
                 META_LOOKUP[var3.getMetadata()] = var3;
             }
         }
     }
 
-    static final class SwitchEnumFacing
-        {
-            static final int[] FACING_LOOKUP;
+    static final class SwitchEnumFacing {
 
-            static final int[] ORIENTATION_LOOKUP;
+        static final int[] FACING_LOOKUP;
 
-            static final int[] AXIS_LOOKUP = new int[EnumFacing.Axis.values().length];
-            private static final String __OBFID = "CL_00002103";
+        static final int[] ORIENTATION_LOOKUP;
 
-            static
-            {
-                try
-                {
-                    AXIS_LOOKUP[EnumFacing.Axis.X.ordinal()] = 1;
-                }
-                catch (NoSuchFieldError var16)
-                {
-                    ;
-                }
+        static final int[] AXIS_LOOKUP = new int[EnumFacing.Axis.values().length];
+        private static final String __OBFID = "CL_00002103";
 
-                try
-                {
-                    AXIS_LOOKUP[EnumFacing.Axis.Z.ordinal()] = 2;
-                }
-                catch (NoSuchFieldError var15)
-                {
-                    ;
-                }
+        static {
+            try {
+                AXIS_LOOKUP[EnumFacing.Axis.X.ordinal()] = 1;
+            } catch (NoSuchFieldError var16) {
+                ;
+            }
 
-                ORIENTATION_LOOKUP = new int[BlockLever.EnumOrientation.values().length];
+            try {
+                AXIS_LOOKUP[EnumFacing.Axis.Z.ordinal()] = 2;
+            } catch (NoSuchFieldError var15) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.EAST.ordinal()] = 1;
-                }
-                catch (NoSuchFieldError var14)
-                {
-                    ;
-                }
+            ORIENTATION_LOOKUP = new int[BlockLever.EnumOrientation.values().length];
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.WEST.ordinal()] = 2;
-                }
-                catch (NoSuchFieldError var13)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.EAST.ordinal()] = 1;
+            } catch (NoSuchFieldError var14) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.SOUTH.ordinal()] = 3;
-                }
-                catch (NoSuchFieldError var12)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.WEST.ordinal()] = 2;
+            } catch (NoSuchFieldError var13) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.NORTH.ordinal()] = 4;
-                }
-                catch (NoSuchFieldError var11)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.SOUTH.ordinal()] = 3;
+            } catch (NoSuchFieldError var12) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.UP_Z.ordinal()] = 5;
-                }
-                catch (NoSuchFieldError var10)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.NORTH.ordinal()] = 4;
+            } catch (NoSuchFieldError var11) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.UP_X.ordinal()] = 6;
-                }
-                catch (NoSuchFieldError var9)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.UP_Z.ordinal()] = 5;
+            } catch (NoSuchFieldError var10) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.DOWN_X.ordinal()] = 7;
-                }
-                catch (NoSuchFieldError var8)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.UP_X.ordinal()] = 6;
+            } catch (NoSuchFieldError var9) {
+                ;
+            }
 
-                try
-                {
-                    ORIENTATION_LOOKUP[BlockLever.EnumOrientation.DOWN_Z.ordinal()] = 8;
-                }
-                catch (NoSuchFieldError var7)
-                {
-                    ;
-                }
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.DOWN_X.ordinal()] = 7;
+            } catch (NoSuchFieldError var8) {
+                ;
+            }
 
-                FACING_LOOKUP = new int[EnumFacing.values().length];
+            try {
+                ORIENTATION_LOOKUP[BlockLever.EnumOrientation.DOWN_Z.ordinal()] = 8;
+            } catch (NoSuchFieldError var7) {
+                ;
+            }
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.DOWN.ordinal()] = 1;
-                }
-                catch (NoSuchFieldError var6)
-                {
-                    ;
-                }
+            FACING_LOOKUP = new int[EnumFacing.values().length];
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.UP.ordinal()] = 2;
-                }
-                catch (NoSuchFieldError var5)
-                {
-                    ;
-                }
+            try {
+                FACING_LOOKUP[EnumFacing.DOWN.ordinal()] = 1;
+            } catch (NoSuchFieldError var6) {
+                ;
+            }
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.NORTH.ordinal()] = 3;
-                }
-                catch (NoSuchFieldError var4)
-                {
-                    ;
-                }
+            try {
+                FACING_LOOKUP[EnumFacing.UP.ordinal()] = 2;
+            } catch (NoSuchFieldError var5) {
+                ;
+            }
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.SOUTH.ordinal()] = 4;
-                }
-                catch (NoSuchFieldError var3)
-                {
-                    ;
-                }
+            try {
+                FACING_LOOKUP[EnumFacing.NORTH.ordinal()] = 3;
+            } catch (NoSuchFieldError var4) {
+                ;
+            }
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.WEST.ordinal()] = 5;
-                }
-                catch (NoSuchFieldError var2)
-                {
-                    ;
-                }
+            try {
+                FACING_LOOKUP[EnumFacing.SOUTH.ordinal()] = 4;
+            } catch (NoSuchFieldError var3) {
+                ;
+            }
 
-                try
-                {
-                    FACING_LOOKUP[EnumFacing.EAST.ordinal()] = 6;
-                }
-                catch (NoSuchFieldError var1)
-                {
-                    ;
-                }
+            try {
+                FACING_LOOKUP[EnumFacing.WEST.ordinal()] = 5;
+            } catch (NoSuchFieldError var2) {
+                ;
             }
+
+            try {
+                FACING_LOOKUP[EnumFacing.EAST.ordinal()] = 6;
+            } catch (NoSuchFieldError var1) {
+                ;
+            }
         }
-}
+    }
+}
