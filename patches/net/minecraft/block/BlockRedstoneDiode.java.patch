--- decompiled\net\minecraft\block\BlockRedstoneDiode.java
+++ src\main\java\net\minecraft\block\BlockRedstoneDiode.java
@@ -1,23 +1,24 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.init.Blocks;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
 public abstract class BlockRedstoneDiode extends BlockDirectional
 {
+
     protected final boolean isRepeaterPowered;
     private static final String __OBFID = "CL_00000226";
 
     protected BlockRedstoneDiode(boolean powered)
     {
@@ -39,40 +40,50 @@
     public boolean canBlockStay(World worldIn, BlockPos pos)
     {
         return World.doesBlockHaveSolidTopSurface(worldIn, pos.down());
     }
 
-    public void randomTick(World worldIn, BlockPos pos, IBlockState state, Random random) {}
+    public void randomTick(World worldIn, BlockPos pos, IBlockState state, Random random)
+    {
+    }
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (!this.isLocked(worldIn, pos, state))
         {
             boolean flag = this.shouldBePowered(worldIn, pos, state);
 
             if (this.isRepeaterPowered && !flag)
             {
+                // CraftBukkit start
+                if (CraftEventFactory.callRedstoneChange(worldIn, pos.getX(), pos.getY(), pos.getZ(), 15, 0).getNewCurrent() != 0)
+                {
+                    return;
+                }
+
+                // CraftBukkit end
                 worldIn.setBlockState(pos, this.getUnpoweredState(state), 2);
             }
             else if (!this.isRepeaterPowered)
             {
+                // CraftBukkit start
+                if (CraftEventFactory.callRedstoneChange(worldIn, pos.getX(), pos.getY(), pos.getZ(), 0, 15).getNewCurrent() != 15)
+                {
+                    return;
+                }
+
+                // CraftBukkit end
                 worldIn.setBlockState(pos, this.getPoweredState(state), 2);
 
                 if (!flag)
                 {
                     worldIn.updateBlockTick(pos, this.getPoweredState(state).getBlock(), this.getTickDelay(state), -1);
                 }
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean shouldSideBeRendered(IBlockAccess worldIn, BlockPos pos, EnumFacing side)
-    {
-        return side.getAxis() != EnumFacing.Axis.Y;
-    }
-
     protected boolean isPowered(IBlockState state)
     {
         return this.isRepeaterPowered;
     }
 
@@ -266,12 +277,6 @@
 
     public boolean isAssociatedBlock(Block other)
     {
         return this.isAssociated(other);
     }
-
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
 }
