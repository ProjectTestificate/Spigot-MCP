--- decompiled\net\minecraft\block\BlockQuartz.java
+++ src\main\java\net\minecraft\block\BlockQuartz.java
@@ -1,8 +1,7 @@
 package net.minecraft.block;
 
-import java.util.List;
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockState;
@@ -13,88 +12,66 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.IStringSerializable;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockQuartz extends Block
-{
+
+public class BlockQuartz extends Block {
+
     public static final PropertyEnum VARIANT = PropertyEnum.create("variant", BlockQuartz.EnumType.class);
     private static final String __OBFID = "CL_00000292";
 
-    public BlockQuartz()
-    {
+    public BlockQuartz() {
         super(Material.rock);
         this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, BlockQuartz.EnumType.DEFAULT));
         this.setCreativeTab(CreativeTabs.tabBlock);
     }
 
-    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
-    {
-        if (meta == BlockQuartz.EnumType.LINES_Y.getMetadata())
-        {
-            switch (BlockQuartz.SwitchAxis.AXIS_LOOKUP[facing.getAxis().ordinal()])
-            {
+    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer) {
+        if (meta == BlockQuartz.EnumType.LINES_Y.getMetadata()) {
+            switch (BlockQuartz.SwitchAxis.AXIS_LOOKUP[facing.getAxis().ordinal()]) {
                 case 1:
                     return this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.LINES_Z);
                 case 2:
                     return this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.LINES_X);
                 case 3:
                 default:
                     return this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.LINES_Y);
             }
-        }
-        else
-        {
+        } else {
             return meta == BlockQuartz.EnumType.CHISELED.getMetadata() ? this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.CHISELED) : this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.DEFAULT);
         }
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        BlockQuartz.EnumType enumtype = (BlockQuartz.EnumType)state.getValue(VARIANT);
+    public int damageDropped(IBlockState state) {
+        BlockQuartz.EnumType enumtype = (BlockQuartz.EnumType) state.getValue(VARIANT);
         return enumtype != BlockQuartz.EnumType.LINES_X && enumtype != BlockQuartz.EnumType.LINES_Z ? enumtype.getMetadata() : BlockQuartz.EnumType.LINES_Y.getMetadata();
     }
 
-    protected ItemStack createStackedBlock(IBlockState state)
-    {
-        BlockQuartz.EnumType enumtype = (BlockQuartz.EnumType)state.getValue(VARIANT);
+    protected ItemStack createStackedBlock(IBlockState state) {
+        BlockQuartz.EnumType enumtype = (BlockQuartz.EnumType) state.getValue(VARIANT);
         return enumtype != BlockQuartz.EnumType.LINES_X && enumtype != BlockQuartz.EnumType.LINES_Z ? super.createStackedBlock(state) : new ItemStack(Item.getItemFromBlock(this), 1, BlockQuartz.EnumType.LINES_Y.getMetadata());
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        list.add(new ItemStack(itemIn, 1, BlockQuartz.EnumType.DEFAULT.getMetadata()));
-        list.add(new ItemStack(itemIn, 1, BlockQuartz.EnumType.CHISELED.getMetadata()));
-        list.add(new ItemStack(itemIn, 1, BlockQuartz.EnumType.LINES_Y.getMetadata()));
-    }
-
-    public MapColor getMapColor(IBlockState state)
-    {
+    public MapColor getMapColor(IBlockState state) {
         return MapColor.quartzColor;
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(VARIANT, BlockQuartz.EnumType.byMetadata(meta));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((BlockQuartz.EnumType)state.getValue(VARIANT)).getMetadata();
+    public int getMetaFromState(IBlockState state) {
+        return ((BlockQuartz.EnumType) state.getValue(VARIANT)).getMetadata();
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {VARIANT});
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{VARIANT});
     }
 
-    public static enum EnumType implements IStringSerializable
-    {
+    public static enum EnumType implements IStringSerializable {
         DEFAULT(0, "default", "default"),
         CHISELED(1, "chiseled", "chiseled"),
         LINES_Y(2, "lines_y", "lines"),
         LINES_X(3, "lines_x", "lines"),
         LINES_Z(4, "lines_z", "lines");
@@ -103,86 +80,68 @@
         private final String field_176805_h;
         private final String unlocalizedName;
 
         private static final String __OBFID = "CL_00002074";
 
-        private EnumType(int meta, String name, String unlocalizedName)
-        {
+        private EnumType(int meta, String name, String unlocalizedName) {
             this.meta = meta;
             this.field_176805_h = name;
             this.unlocalizedName = unlocalizedName;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.meta;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.unlocalizedName;
         }
 
-        public static BlockQuartz.EnumType byMetadata(int meta)
-        {
-            if (meta < 0 || meta >= META_LOOKUP.length)
-            {
+        public static BlockQuartz.EnumType byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
                 meta = 0;
             }
 
             return META_LOOKUP[meta];
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.field_176805_h;
         }
 
-        static
-        {
+        static {
             BlockQuartz.EnumType[] var0 = values();
             int var1 = var0.length;
 
-            for (int var2 = 0; var2 < var1; ++var2)
-            {
+            for (int var2 = 0; var2 < var1; ++var2) {
                 BlockQuartz.EnumType var3 = var0[var2];
                 META_LOOKUP[var3.getMetadata()] = var3;
             }
         }
     }
 
-    static final class SwitchAxis
-        {
-            static final int[] AXIS_LOOKUP = new int[EnumFacing.Axis.values().length];
-            private static final String __OBFID = "CL_00002075";
+    static final class SwitchAxis {
 
-            static
-            {
-                try
-                {
-                    AXIS_LOOKUP[EnumFacing.Axis.Z.ordinal()] = 1;
-                }
-                catch (NoSuchFieldError var3)
-                {
-                    ;
-                }
+        static final int[] AXIS_LOOKUP = new int[EnumFacing.Axis.values().length];
+        private static final String __OBFID = "CL_00002075";
 
-                try
-                {
-                    AXIS_LOOKUP[EnumFacing.Axis.X.ordinal()] = 2;
-                }
-                catch (NoSuchFieldError var2)
-                {
-                    ;
-                }
+        static {
+            try {
+                AXIS_LOOKUP[EnumFacing.Axis.Z.ordinal()] = 1;
+            } catch (NoSuchFieldError var3) {
+                ;
+            }
 
-                try
-                {
-                    AXIS_LOOKUP[EnumFacing.Axis.Y.ordinal()] = 3;
-                }
-                catch (NoSuchFieldError var1)
-                {
-                    ;
-                }
+            try {
+                AXIS_LOOKUP[EnumFacing.Axis.X.ordinal()] = 2;
+            } catch (NoSuchFieldError var2) {
+                ;
             }
+
+            try {
+                AXIS_LOOKUP[EnumFacing.Axis.Y.ordinal()] = 3;
+            } catch (NoSuchFieldError var1) {
+                ;
+            }
         }
+    }
 }
