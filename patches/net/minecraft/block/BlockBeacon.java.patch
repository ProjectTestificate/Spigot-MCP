---a/net/minecraft/block/BlockBeacon.java
+++b/net/minecraft/block/BlockBeacon.java
@@ -11,126 +11,98 @@
 import net.minecraft.tileentity.TileEntityBeacon;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.util.HttpUtil;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.Chunk;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockBeacon extends BlockContainer
-{
+
+public class BlockBeacon extends BlockContainer {
+
     private static final String __OBFID = "CL_00000197";
 
-    public BlockBeacon()
-    {
+    public BlockBeacon() {
         super(Material.glass);
         this.setHardness(3.0F);
         this.setCreativeTab(CreativeTabs.tabMisc);
     }
 
-    public TileEntity createNewTileEntity(World worldIn, int meta)
-    {
+    public TileEntity createNewTileEntity(World worldIn, int meta) {
         return new TileEntityBeacon();
     }
 
-    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
-    {
-        if (worldIn.isRemote)
-        {
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ) {
+        if (worldIn.isRemote) {
             return true;
-        }
-        else
-        {
+        } else {
             TileEntity tileentity = worldIn.getTileEntity(pos);
 
-            if (tileentity instanceof TileEntityBeacon)
-            {
-                playerIn.displayGUIChest((TileEntityBeacon)tileentity);
+            if (tileentity instanceof TileEntityBeacon) {
+                playerIn.displayGUIChest((TileEntityBeacon) tileentity);
             }
 
             return true;
         }
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public int getRenderType()
-    {
+    public int getRenderType() {
         return 3;
     }
 
-    public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack)
-    {
+    public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack) {
         super.onBlockPlacedBy(worldIn, pos, state, placer, stack);
 
-        if (stack.hasDisplayName())
-        {
+        if (stack.hasDisplayName()) {
             TileEntity tileentity = worldIn.getTileEntity(pos);
 
-            if (tileentity instanceof TileEntityBeacon)
-            {
-                ((TileEntityBeacon)tileentity).func_145999_a(stack.getDisplayName());
+            if (tileentity instanceof TileEntityBeacon) {
+                ((TileEntityBeacon) tileentity).func_145999_a(stack.getDisplayName());
             }
         }
     }
 
-    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
-    {
+    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock) {
         TileEntity tileentity = worldIn.getTileEntity(pos);
 
-        if (tileentity instanceof TileEntityBeacon)
-        {
-            ((TileEntityBeacon)tileentity).func_174908_m();
+        if (tileentity instanceof TileEntityBeacon) {
+            ((TileEntityBeacon) tileentity).func_174908_m();
             worldIn.addBlockEvent(pos, this, 1, 0);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
+    public static void updateColorAsync(final World worldIn, final BlockPos glassPos) {
+        HttpUtil.field_180193_a.submit(new Runnable() {
 
-    public static void updateColorAsync(final World worldIn, final BlockPos glassPos)
-    {
-        HttpUtil.field_180193_a.submit(new Runnable()
-        {
             private static final String __OBFID = "CL_00002136";
-            public void run()
-            {
+
+            public void run() {
                 Chunk chunk = worldIn.getChunkFromBlockCoords(glassPos);
 
-                for (int i = glassPos.getY() - 1; i >= 0; --i)
-                {
+                for (int i = glassPos.getY() - 1; i >= 0; --i) {
                     final BlockPos blockpos = new BlockPos(glassPos.getX(), i, glassPos.getZ());
 
-                    if (!chunk.canSeeSky(blockpos))
-                    {
+                    if (!chunk.canSeeSky(blockpos)) {
                         break;
                     }
 
                     IBlockState iblockstate = worldIn.getBlockState(blockpos);
 
-                    if (iblockstate.getBlock() == Blocks.beacon)
-                    {
-                        ((WorldServer)worldIn).addScheduledTask(new Runnable()
-                        {
+                    if (iblockstate.getBlock() == Blocks.beacon) {
+                        ((WorldServer) worldIn).addScheduledTask(new Runnable() {
+
                             private static final String __OBFID = "CL_00002135";
-                            public void run()
-                            {
+
+                            public void run() {
                                 TileEntity tileentity = worldIn.getTileEntity(blockpos);
 
-                                if (tileentity instanceof TileEntityBeacon)
-                                {
-                                    ((TileEntityBeacon)tileentity).func_174908_m();
+                                if (tileentity instanceof TileEntityBeacon) {
+                                    ((TileEntityBeacon) tileentity).func_174908_m();
                                     worldIn.addBlockEvent(blockpos, Blocks.beacon, 1, 0);
                                 }
                             }
@@ -142,4 +142,4 @@
             }
         });
     }
-}
+}
