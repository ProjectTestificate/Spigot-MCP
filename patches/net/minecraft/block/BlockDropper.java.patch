---a/net/minecraft/block/BlockDropper.java
+++b/net/minecraft/block/BlockDropper.java
@@ -3,6 +3,7 @@
 import net.minecraft.dispenser.BehaviorDefaultDispenseItem;
 import net.minecraft.dispenser.IBehaviorDispenseItem;
 import net.minecraft.inventory.IInventory;
+import net.minecraft.inventory.InventoryLargeChest;
 import net.minecraft.item.ItemStack;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityDispenser;
@@ -12,69 +12,70 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
-public class BlockDropper extends BlockDispenser
-{
+import org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+
+public class BlockDropper extends BlockDispenser {
+
     private final IBehaviorDispenseItem dropBehavior = new BehaviorDefaultDispenseItem();
     private static final String __OBFID = "CL_00000233";
 
-    protected IBehaviorDispenseItem getBehavior(ItemStack stack)
-    {
+    protected IBehaviorDispenseItem getBehavior(ItemStack stack) {
         return this.dropBehavior;
     }
 
-    public TileEntity createNewTileEntity(World worldIn, int meta)
-    {
+    public TileEntity createNewTileEntity(World worldIn, int meta) {
         return new TileEntityDropper();
     }
 
-    protected void dispense(World worldIn, BlockPos pos)
-    {
+    public void dispense(World worldIn, BlockPos pos) { // SpigotMCP -- Apply access transformation
         BlockSourceImpl blocksourceimpl = new BlockSourceImpl(worldIn, pos);
-        TileEntityDispenser tileentitydispenser = (TileEntityDispenser)blocksourceimpl.getBlockTileEntity();
+        TileEntityDispenser tileentitydispenser = (TileEntityDispenser) blocksourceimpl.getBlockTileEntity();
 
-        if (tileentitydispenser != null)
-        {
+        if (tileentitydispenser != null) {
             int i = tileentitydispenser.getDispenseSlot();
 
-            if (i < 0)
-            {
+            if (i < 0) {
                 worldIn.playAuxSFX(1001, pos, 0);
-            }
-            else
-            {
+            } else {
                 ItemStack itemstack = tileentitydispenser.getStackInSlot(i);
 
-                if (itemstack != null)
-                {
-                    EnumFacing enumfacing = (EnumFacing)worldIn.getBlockState(pos).getValue(FACING);
+                if (itemstack != null) {
+                    EnumFacing enumfacing = (EnumFacing) worldIn.getBlockState(pos).getValue(FACING);
                     BlockPos blockpos1 = pos.offset(enumfacing);
-                    IInventory iinventory = TileEntityHopper.func_145893_b(worldIn, (double)blockpos1.getX(), (double)blockpos1.getY(), (double)blockpos1.getZ());
+                    IInventory iinventory = TileEntityHopper.func_145893_b(worldIn, (double) blockpos1.getX(), (double) blockpos1.getY(), (double) blockpos1.getZ());
                     ItemStack itemstack1;
 
-                    if (iinventory == null)
-                    {
+                    if (iinventory == null) {
                         itemstack1 = this.dropBehavior.dispense(blocksourceimpl, itemstack);
 
-                        if (itemstack1 != null && itemstack1.stackSize == 0)
-                        {
+                        if (itemstack1 != null && itemstack1.stackSize == 0) {
                             itemstack1 = null;
                         }
-                    }
-                    else
-                    {
-                        itemstack1 = TileEntityHopper.func_174918_a(iinventory, itemstack.copy().splitStack(1), enumfacing.getOpposite());
+                    } else {
+                        // CraftBukkit start - Fire event when pushing items into other inventories
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(itemstack.copy().splitStack(1));
 
-                        if (itemstack1 == null)
-                        {
-                            itemstack1 = itemstack.copy();
+                        org.bukkit.inventory.Inventory destinationInventory;
+                        // Have to special case large chests as they work oddly
+                        if (iinventory instanceof InventoryLargeChest) {
+                            destinationInventory = new CraftInventoryDoubleChest((InventoryLargeChest) iinventory);
+                        } else {
+                            destinationInventory = iinventory.getOwner().getInventory();
+                        }
 
-                            if (--itemstack1.stackSize == 0)
-                            {
-                                itemstack1 = null;
-                            }
+                        InventoryMoveItemEvent event = new InventoryMoveItemEvent(tileentitydispenser.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+                        worldIn.getServer().getPluginManager().callEvent(event);
+                        if (event.isCancelled()) {
+                            return;
                         }
-                        else
-                        {
+                        itemstack1 = TileEntityHopper.func_174918_a(iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumfacing.getOpposite());
+                        if (event.getItem().equals(oitemstack) && itemstack1 == null) {
+                            // CraftBukkit end
                             itemstack1 = itemstack.copy();
                         }
                     }
@@ -84,4 +84,4 @@
             }
         }
     }
-}
+}
