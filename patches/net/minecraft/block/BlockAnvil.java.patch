---a/net/minecraft/block/BlockAnvil.java
+++b/net/minecraft/block/BlockAnvil.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.List;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyDirection;
@@ -15,8 +15,6 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerRepair;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.EnumFacing;
@@ -24,152 +24,102 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.IInteractionObject;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockAnvil extends BlockFalling
-{
+
+public class BlockAnvil extends BlockFalling {
+
     public static final PropertyDirection FACING = PropertyDirection.create("facing", EnumFacing.Plane.HORIZONTAL);
     public static final PropertyInteger DAMAGE = PropertyInteger.create("damage", 0, 2);
     private static final String __OBFID = "CL_00000192";
 
-    protected BlockAnvil()
-    {
+    protected BlockAnvil() {
         super(Material.anvil);
         this.setDefaultState(this.blockState.getBaseState().withProperty(FACING, EnumFacing.NORTH).withProperty(DAMAGE, Integer.valueOf(0)));
         this.setLightOpacity(0);
         this.setCreativeTab(CreativeTabs.tabDecorations);
     }
 
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
-    {
+    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer) {
         EnumFacing enumfacing1 = placer.getHorizontalFacing().rotateY();
         return super.onBlockPlaced(worldIn, pos, facing, hitX, hitY, hitZ, meta, placer).withProperty(FACING, enumfacing1).withProperty(DAMAGE, Integer.valueOf(meta >> 2));
     }
 
-    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
-    {
-        if (!worldIn.isRemote)
-        {
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ) {
+        if (!worldIn.isRemote) {
             playerIn.displayGui(new BlockAnvil.Anvil(worldIn, pos));
         }
 
         return true;
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        return ((Integer)state.getValue(DAMAGE)).intValue();
+    public int damageDropped(IBlockState state) {
+        return ((Integer) state.getValue(DAMAGE)).intValue();
     }
 
-    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos)
-    {
-        EnumFacing enumfacing = (EnumFacing)worldIn.getBlockState(pos).getValue(FACING);
+    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos) {
+        EnumFacing enumfacing = (EnumFacing) worldIn.getBlockState(pos).getValue(FACING);
 
-        if (enumfacing.getAxis() == EnumFacing.Axis.X)
-        {
+        if (enumfacing.getAxis() == EnumFacing.Axis.X) {
             this.setBlockBounds(0.0F, 0.0F, 0.125F, 1.0F, 1.0F, 0.875F);
-        }
-        else
-        {
+        } else {
             this.setBlockBounds(0.125F, 0.0F, 0.0F, 0.875F, 1.0F, 1.0F);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        list.add(new ItemStack(itemIn, 1, 0));
-        list.add(new ItemStack(itemIn, 1, 1));
-        list.add(new ItemStack(itemIn, 1, 2));
-    }
-
-    protected void onStartFalling(EntityFallingBlock fallingEntity)
-    {
+    protected void onStartFalling(EntityFallingBlock fallingEntity) {
         fallingEntity.setHurtEntities(true);
     }
 
-    public void onEndFalling(World worldIn, BlockPos pos)
-    {
+    public void onEndFalling(World worldIn, BlockPos pos) {
         worldIn.playAuxSFX(1022, pos, 0);
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean shouldSideBeRendered(IBlockAccess worldIn, BlockPos pos, EnumFacing side)
-    {
-        return true;
-    }
-
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(FACING, EnumFacing.getHorizontal(meta & 3)).withProperty(DAMAGE, Integer.valueOf((meta & 15) >> 2));
     }
 
-    @SideOnly(Side.CLIENT)
-    public IBlockState getStateForEntityRender(IBlockState state)
-    {
-        return this.getDefaultState().withProperty(FACING, EnumFacing.SOUTH);
-    }
-
-    public int getMetaFromState(IBlockState state)
-    {
+    public int getMetaFromState(IBlockState state) {
         byte b0 = 0;
-        int i = b0 | ((EnumFacing)state.getValue(FACING)).getHorizontalIndex();
-        i |= ((Integer)state.getValue(DAMAGE)).intValue() << 2;
+        int i = b0 | ((EnumFacing) state.getValue(FACING)).getHorizontalIndex();
+        i |= ((Integer) state.getValue(DAMAGE)).intValue() << 2;
         return i;
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {FACING, DAMAGE});
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{FACING, DAMAGE});
     }
 
-    public static class Anvil implements IInteractionObject
-        {
-            private final World world;
-            private final BlockPos position;
-            private static final String __OBFID = "CL_00002144";
+    public static class Anvil implements IInteractionObject {
 
-            public Anvil(World worldIn, BlockPos pos)
-            {
-                this.world = worldIn;
-                this.position = pos;
-            }
+        private final World world;
+        private final BlockPos position;
+        private static final String __OBFID = "CL_00002144";
 
-            public String getName()
-            {
-                return "anvil";
-            }
+        public Anvil(World worldIn, BlockPos pos) {
+            this.world = worldIn;
+            this.position = pos;
+        }
 
-            public boolean hasCustomName()
-            {
-                return false;
-            }
+        public String getName() {
+            return "anvil";
+        }
 
-            public IChatComponent getDisplayName()
-            {
-                return new ChatComponentTranslation(Blocks.anvil.getUnlocalizedName() + ".name", new Object[0]);
-            }
+        public boolean hasCustomName() {
+            return false;
+        }
 
-            public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
-            {
-                return new ContainerRepair(playerInventory, this.world, this.position, playerIn);
-            }
+        public IChatComponent getDisplayName() {
+            return new ChatComponentTranslation(Blocks.anvil.getUnlocalizedName() + ".name", new Object[0]);
+        }
 
-            public String getGuiID()
-            {
-                return "minecraft:anvil";
-            }
+        public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn) {
+            return new ContainerRepair(playerInventory, this.world, this.position, playerIn);
         }
-}
+
+        public String getGuiID() {
+            return "minecraft:anvil";
+        }
+    }
+}
