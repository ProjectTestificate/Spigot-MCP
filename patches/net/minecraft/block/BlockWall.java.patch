---a/net/minecraft/block/BlockWall.java
+++b/net/minecraft/block/BlockWall.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.List;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
@@ -9,19 +9,12 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.init.Blocks;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.EnumFacing;
 import net.minecraft.util.IStringSerializable;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BlockWall extends Block
-{
+
+public class BlockWall extends Block {
+
     public static final PropertyBool UP = PropertyBool.create("up");
     public static final PropertyBool NORTH = PropertyBool.create("north");
     public static final PropertyBool EAST = PropertyBool.create("east");
@@ -30,8 +30,7 @@
     public static final PropertyEnum VARIANT = PropertyEnum.create("variant", BlockWall.EnumType.class);
     private static final String __OBFID = "CL_00000331";
 
-    public BlockWall(Block modelBlock)
-    {
+    public BlockWall(Block modelBlock) {
         super(modelBlock.blockMaterial);
         this.setDefaultState(this.blockState.getBaseState().withProperty(UP, Boolean.valueOf(false)).withProperty(NORTH, Boolean.valueOf(false)).withProperty(EAST, Boolean.valueOf(false)).withProperty(SOUTH, Boolean.valueOf(false)).withProperty(WEST, Boolean.valueOf(false)).withProperty(VARIANT, BlockWall.EnumType.NORMAL));
         this.setHardness(modelBlock.blockHardness);
@@ -40,23 +40,19 @@
         this.setCreativeTab(CreativeTabs.tabBlock);
     }
 
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public boolean isPassable(IBlockAccess worldIn, BlockPos pos)
-    {
+    public boolean isPassable(IBlockAccess worldIn, BlockPos pos) {
         return false;
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos)
-    {
+    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos) {
         boolean flag = this.canConnectTo(worldIn, pos.north());
         boolean flag1 = this.canConnectTo(worldIn, pos.south());
         boolean flag2 = this.canConnectTo(worldIn, pos.west());
@@ -67,33 +67,27 @@
         float f3 = 0.75F;
         float f4 = 1.0F;
 
-        if (flag)
-        {
+        if (flag) {
             f2 = 0.0F;
         }
 
-        if (flag1)
-        {
+        if (flag1) {
             f3 = 1.0F;
         }
 
-        if (flag2)
-        {
+        if (flag2) {
             f = 0.0F;
         }
 
-        if (flag3)
-        {
+        if (flag3) {
             f1 = 1.0F;
         }
 
-        if (flag && flag1 && !flag2 && !flag3)
-        {
+        if (flag && flag1 && !flag2 && !flag3) {
             f4 = 0.8125F;
             f = 0.3125F;
             f1 = 0.6875F;
-        }
-        else if (!flag && !flag1 && flag2 && flag3)
-        {
+        } else if (!flag && !flag1 && flag2 && flag3) {
             f4 = 0.8125F;
             f2 = 0.3125F;
             f3 = 0.6875F;
@@ -103,65 +103,38 @@
         this.setBlockBounds(f, 0.0F, f2, f1, f4, f3);
     }
 
-    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state) {
         this.setBlockBoundsBasedOnState(worldIn, pos);
         this.maxY = 1.5D;
         return super.getCollisionBoundingBox(worldIn, pos, state);
     }
 
-    public boolean canConnectTo(IBlockAccess worldIn, BlockPos pos)
-    {
+    public boolean canConnectTo(IBlockAccess worldIn, BlockPos pos) {
         Block block = worldIn.getBlockState(pos).getBlock();
         return block == Blocks.barrier ? false : (block != this && !(block instanceof BlockFenceGate) ? (block.blockMaterial.isOpaque() && block.isFullCube() ? block.blockMaterial != Material.gourd : false) : true);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        BlockWall.EnumType[] aenumtype = BlockWall.EnumType.values();
-        int i = aenumtype.length;
-
-        for (int j = 0; j < i; ++j)
-        {
-            BlockWall.EnumType enumtype = aenumtype[j];
-            list.add(new ItemStack(itemIn, 1, enumtype.getMetadata()));
-        }
+    public int damageDropped(IBlockState state) {
+        return ((BlockWall.EnumType) state.getValue(VARIANT)).getMetadata();
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        return ((BlockWall.EnumType)state.getValue(VARIANT)).getMetadata();
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean shouldSideBeRendered(IBlockAccess worldIn, BlockPos pos, EnumFacing side)
-    {
-        return side == EnumFacing.DOWN ? super.shouldSideBeRendered(worldIn, pos, side) : true;
-    }
-
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(VARIANT, BlockWall.EnumType.byMetadata(meta));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((BlockWall.EnumType)state.getValue(VARIANT)).getMetadata();
+    public int getMetaFromState(IBlockState state) {
+        return ((BlockWall.EnumType) state.getValue(VARIANT)).getMetadata();
     }
 
-    public IBlockState getActualState(IBlockState state, IBlockAccess worldIn, BlockPos pos)
-    {
+    public IBlockState getActualState(IBlockState state, IBlockAccess worldIn, BlockPos pos) {
         return state.withProperty(UP, Boolean.valueOf(!worldIn.isAirBlock(pos.up()))).withProperty(NORTH, Boolean.valueOf(this.canConnectTo(worldIn, pos.north()))).withProperty(EAST, Boolean.valueOf(this.canConnectTo(worldIn, pos.east()))).withProperty(SOUTH, Boolean.valueOf(this.canConnectTo(worldIn, pos.south()))).withProperty(WEST, Boolean.valueOf(this.canConnectTo(worldIn, pos.west())));
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {UP, NORTH, EAST, WEST, SOUTH, VARIANT});
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{UP, NORTH, EAST, WEST, SOUTH, VARIANT});
     }
 
-    public static enum EnumType implements IStringSerializable
-    {
+    public static enum EnumType implements IStringSerializable {
         NORMAL(0, "cobblestone", "normal"),
         MOSSY(1, "mossy_cobblestone", "mossy");
         private static final BlockWall.EnumType[] META_LOOKUP = new BlockWall.EnumType[values().length];
@@ -171,54 +171,44 @@
 
         private static final String __OBFID = "CL_00002048";
 
-        private EnumType(int meta, String name, String unlocalizedName)
-        {
+        private EnumType(int meta, String name, String unlocalizedName) {
             this.meta = meta;
             this.name = name;
             this.unlocalizedName = unlocalizedName;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.meta;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.name;
         }
 
-        public static BlockWall.EnumType byMetadata(int meta)
-        {
-            if (meta < 0 || meta >= META_LOOKUP.length)
-            {
+        public static BlockWall.EnumType byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
                 meta = 0;
             }
 
             return META_LOOKUP[meta];
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.name;
         }
 
-        public String getUnlocalizedName()
-        {
+        public String getUnlocalizedName() {
             return this.unlocalizedName;
         }
 
-        static
-        {
+        static {
             BlockWall.EnumType[] var0 = values();
             int var1 = var0.length;
 
-            for (int var2 = 0; var2 < var1; ++var2)
-            {
+            for (int var2 = 0; var2 < var1; ++var2) {
                 BlockWall.EnumType var3 = var0[var2];
                 META_LOOKUP[var3.getMetadata()] = var3;
             }
         }
     }
-}
+}
