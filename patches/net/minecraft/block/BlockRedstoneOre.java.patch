--- decompiled\net\minecraft\block\BlockRedstoneOre.java
+++ src\main\java\net\minecraft\block\BlockRedstoneOre.java
@@ -1,8 +1,9 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
@@ -11,15 +12,17 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityInteractEvent;
+
 public class BlockRedstoneOre extends Block
 {
+
     private final boolean isOn;
     private static final String __OBFID = "CL_00000294";
 
     public BlockRedstoneOre(boolean isOn)
     {
@@ -38,40 +41,78 @@
         return 30;
     }
 
     public void onBlockClicked(World worldIn, BlockPos pos, EntityPlayer playerIn)
     {
-        this.activate(worldIn, pos);
+        this.activate(worldIn, pos, playerIn); // CraftBukkit - add entityhuman
         super.onBlockClicked(worldIn, pos, playerIn);
     }
 
     public void onEntityCollidedWithBlock(World worldIn, BlockPos pos, Entity entityIn)
     {
-        this.activate(worldIn, pos);
-        super.onEntityCollidedWithBlock(worldIn, pos, entityIn);
+        // CraftBukkit start
+        // this.activate(worldIn, pos);
+        // super.onEntityCollidedWithBlock(worldIn, pos, entityIn);
+        if (entityIn instanceof EntityPlayer)
+        {
+            org.bukkit.event.player.PlayerInteractEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerInteractEvent((EntityPlayer)entityIn, org.bukkit.event.block.Action.PHYSICAL, pos, null, null);
+
+            if (!event.isCancelled())
+            {
+                this.activate(worldIn, pos, entityIn); // add entity
+                super.onEntityCollidedWithBlock(worldIn, pos, entityIn);
+            }
+        }
+        else
+        {
+            EntityInteractEvent event = new EntityInteractEvent(entityIn.getBukkitEntity(), worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ()));
+            worldIn.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled())
+            {
+                this.activate(worldIn, pos, entityIn); // add entity
+                super.onEntityCollidedWithBlock(worldIn, pos, entityIn);
+            }
+        }
+
+        // CraftBukkit end
     }
 
     public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
     {
-        this.activate(worldIn, pos);
+        this.activate(worldIn, pos, playerIn);  // CraftBukkit - add entityhuman
         return super.onBlockActivated(worldIn, pos, state, playerIn, side, hitX, hitY, hitZ);
     }
 
-    private void activate(World worldIn, BlockPos pos)
+    private void activate(World worldIn, BlockPos pos, Entity entity) // CraftBukkit - add Entity
     {
         this.spawnParticles(worldIn, pos);
 
         if (this == Blocks.redstone_ore)
         {
+            // CraftBukkit start
+            if (CraftEventFactory.callEntityChangeBlockEvent(entity, pos.getX(), pos.getY(), pos.getZ(), Blocks.lit_redstone_ore, 0).isCancelled())
+            {
+                return;
+            }
+
+            // CraftBukkit end
             worldIn.setBlockState(pos, Blocks.lit_redstone_ore.getDefaultState());
         }
     }
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (this == Blocks.lit_redstone_ore)
         {
+            // CraftBukkit start
+            if (CraftEventFactory.callBlockFadeEvent(worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ()), Blocks.redstone_ore).isCancelled())
+            {
+                return;
+            }
+
+            // CraftBukkit end
             worldIn.setBlockState(pos, Blocks.redstone_ore.getDefaultState());
         }
     }
 
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
@@ -90,25 +131,30 @@
     }
 
     public void dropBlockAsItemWithChance(World worldIn, BlockPos pos, IBlockState state, float chance, int fortune)
     {
         super.dropBlockAsItemWithChance(worldIn, pos, state, chance, fortune);
-
+        /* CraftBukkit start - Delegated to getExpDrop
         if (this.getItemDropped(state, worldIn.rand, fortune) != Item.getItemFromBlock(this))
         {
             int j = 1 + worldIn.rand.nextInt(5);
             this.dropXpOnBlockBreak(worldIn, pos, j);
         }
+        // */
     }
 
-    @SideOnly(Side.CLIENT)
-    public void randomDisplayTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
+    @Override
+    public int getExpDrop(World world, IBlockState data, int i)
     {
-        if (this.isOn)
+        if (this.getItemDropped(data, world.rand, i) != Item.getItemFromBlock(this))
         {
-            this.spawnParticles(worldIn, pos);
+            int j = 1 + world.rand.nextInt(5);
+            return j;
         }
+
+        return 0;
+        // CraftBukkit end
     }
 
     private void spawnParticles(World worldIn, BlockPos pos)
     {
         Random random = worldIn.rand;
