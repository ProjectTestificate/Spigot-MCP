--- decompiled\net\minecraft\block\BlockTripWire.java
+++ src\main\java\net\minecraft\block\BlockTripWire.java
@@ -1,10 +1,11 @@
 package net.minecraft.block;
 
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
@@ -14,18 +15,18 @@
 import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.entity.EntityInteractEvent;
+
 public class BlockTripWire extends Block
 {
+
     public static final PropertyBool POWERED = PropertyBool.create("powered");
     public static final PropertyBool SUSPENDED = PropertyBool.create("suspended");
     public static final PropertyBool ATTACHED = PropertyBool.create("attached");
     public static final PropertyBool DISARMED = PropertyBool.create("disarmed");
     public static final PropertyBool NORTH = PropertyBool.create("north");
@@ -60,16 +61,10 @@
     public boolean isFullCube()
     {
         return false;
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.TRANSLUCENT;
-    }
-
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         return Items.string;
     }
 
@@ -103,16 +98,10 @@
         {
             this.setBlockBounds(0.0F, 0.0625F, 0.0F, 1.0F, 0.15625F, 1.0F);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
-        return Items.string;
-    }
-
     public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state)
     {
         state = state.withProperty(SUSPENDED, Boolean.valueOf(!World.doesBlockHaveSolidTopSurface(worldIn, pos.down())));
         worldIn.setBlockState(pos, state, 3);
         this.notifyHook(worldIn, pos, state);
@@ -181,11 +170,13 @@
                 this.updateState(worldIn, pos);
             }
         }
     }
 
-    public void randomTick(World worldIn, BlockPos pos, IBlockState state, Random random) {}
+    public void randomTick(World worldIn, BlockPos pos, IBlockState state, Random random)
+    {
+    }
 
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (!worldIn.isRemote)
         {
@@ -217,10 +208,55 @@
                     break;
                 }
             }
         }
 
+        // CraftBukkit start - Call interact even when triggering connected tripwire
+        if (flag != flag1 && flag1 && (Boolean)iblockstate.getValue(ATTACHED))
+        {
+            org.bukkit.World bworld = worldIn.getWorld();
+            org.bukkit.plugin.PluginManager manager = worldIn.getServer().getPluginManager();
+            org.bukkit.block.Block block = bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+            boolean allowed = false;
+
+            // If all of the events are cancelled block the tripwire trigger, else allow
+            for (Object object : list)
+            {
+                if (object != null)
+                {
+                    org.bukkit.event.Cancellable cancellable;
+
+                    if (object instanceof EntityPlayer)
+                    {
+                        cancellable = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerInteractEvent((EntityPlayer)object, org.bukkit.event.block.Action.PHYSICAL, pos, null, null);
+                    }
+                    else if (object instanceof Entity)
+                    {
+                        cancellable = new EntityInteractEvent(((Entity)object).getBukkitEntity(), block);
+                        manager.callEvent((EntityInteractEvent)cancellable);
+                    }
+                    else
+                    {
+                        continue;
+                    }
+
+                    if (!cancellable.isCancelled())
+                    {
+                        allowed = true;
+                        break;
+                    }
+                }
+            }
+
+            if (!allowed)
+            {
+                return;
+            }
+        }
+
+        // CraftBukkit end
+
         if (flag1 != flag)
         {
             iblockstate = iblockstate.withProperty(POWERED, Boolean.valueOf(flag1));
             worldIn.setBlockState(pos, iblockstate, 3);
             this.notifyHook(worldIn, pos, iblockstate);
