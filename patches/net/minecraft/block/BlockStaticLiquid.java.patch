---a/net/minecraft/block/BlockStaticLiquid.java
+++b/net/minecraft/block/BlockStaticLiquid.java
@@ -1,6 +1,7 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
@@ -8,75 +8,69 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
-public class BlockStaticLiquid extends BlockLiquid
-{
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
+public class BlockStaticLiquid extends BlockLiquid {
+
     private static final String __OBFID = "CL_00000315";
 
-    protected BlockStaticLiquid(Material materialIn)
-    {
+    protected BlockStaticLiquid(Material materialIn) {
         super(materialIn);
         this.setTickRandomly(false);
 
-        if (materialIn == Material.lava)
-        {
+        if (materialIn == Material.lava) {
             this.setTickRandomly(true);
         }
     }
 
-    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
-    {
-        if (!this.checkForMixing(worldIn, pos, state))
-        {
+    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock) {
+        if (!this.checkForMixing(worldIn, pos, state)) {
             this.updateLiquid(worldIn, pos, state);
         }
     }
 
-    private void updateLiquid(World worldIn, BlockPos p_176370_2_, IBlockState p_176370_3_)
-    {
+    private void updateLiquid(World worldIn, BlockPos p_176370_2_, IBlockState p_176370_3_) {
         BlockDynamicLiquid blockdynamicliquid = getFlowingBlock(this.blockMaterial);
         worldIn.setBlockState(p_176370_2_, blockdynamicliquid.getDefaultState().withProperty(LEVEL, p_176370_3_.getValue(LEVEL)), 2);
         worldIn.scheduleUpdate(p_176370_2_, blockdynamicliquid, this.tickRate(worldIn));
     }
 
-    public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
-    {
-        if (this.blockMaterial == Material.lava)
-        {
-            if (worldIn.getGameRules().getGameRuleBooleanValue("doFireTick"))
-            {
+    public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand) {
+        if (this.blockMaterial == Material.lava) {
+            if (worldIn.getGameRules().getGameRuleBooleanValue("doFireTick")) {
                 int i = rand.nextInt(3);
 
-                if (i > 0)
-                {
+                if (i > 0) {
                     BlockPos blockpos1 = pos;
 
-                    for (int j = 0; j < i; ++j)
-                    {
+                    for (int j = 0; j < i; ++j) {
                         blockpos1 = blockpos1.add(rand.nextInt(3) - 1, 1, rand.nextInt(3) - 1);
                         Block block = worldIn.getBlockState(blockpos1).getBlock();
 
-                        if (block.blockMaterial == Material.air)
-                        {
-                            if (this.isSurroundingBlockFlammable(worldIn, blockpos1))
-                            {
+                        if (block.blockMaterial == Material.air) {
+                            if (this.isSurroundingBlockFlammable(worldIn, blockpos1)) {
+                                // CraftBukkit start - Prevent lava putting something on fire
+                                if (worldIn.getBlockState(blockpos1) != Blocks.fire) {
+                                    if (CraftEventFactory.callBlockIgniteEvent(worldIn, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), pos.getX(), pos.getY(), pos.getZ()).isCancelled()) {
+                                        continue;
+                                    }
+                                }
+                                // CraftBukkit end
                                 worldIn.setBlockState(blockpos1, Blocks.fire.getDefaultState());
                                 return;
                             }
-                        }
-                        else if (block.blockMaterial.blocksMovement())
-                        {
+                        } else if (block.blockMaterial.blocksMovement()) {
                             return;
                         }
                     }
-                }
-                else
-                {
-                    for (int k = 0; k < 3; ++k)
-                    {
+                } else {
+                    for (int k = 0; k < 3; ++k) {
                         BlockPos blockpos2 = pos.add(rand.nextInt(3) - 1, 0, rand.nextInt(3) - 1);
 
-                        if (worldIn.isAirBlock(blockpos2.up()) && this.getCanBlockBurn(worldIn, blockpos2))
-                        {
+                        if (worldIn.isAirBlock(blockpos2.up()) && this.getCanBlockBurn(worldIn, blockpos2)) {
+                            // CraftBukkit start - Prevent lava putting something on fire
+                            BlockPos up = blockpos2.up();
+                            if (worldIn.getBlockState(up) != Blocks.fire) {
+                                if (CraftEventFactory.callBlockIgniteEvent(worldIn, up.getX(), up.getY(), up.getZ(), pos.getX(), pos.getY(), pos.getZ()).isCancelled()) {
+                                    continue;
+                                }
+                            }
+                            // CraftBukkit end
                             worldIn.setBlockState(blockpos2.up(), Blocks.fire.getDefaultState());
                         }
                     }
@@ -85,17 +85,14 @@
         }
     }
 
-    protected boolean isSurroundingBlockFlammable(World worldIn, BlockPos pos)
-    {
+    protected boolean isSurroundingBlockFlammable(World worldIn, BlockPos pos) {
         EnumFacing[] aenumfacing = EnumFacing.values();
         int i = aenumfacing.length;
 
-        for (int j = 0; j < i; ++j)
-        {
+        for (int j = 0; j < i; ++j) {
             EnumFacing enumfacing = aenumfacing[j];
 
-            if (this.getCanBlockBurn(worldIn, pos.offset(enumfacing)))
-            {
+            if (this.getCanBlockBurn(worldIn, pos.offset(enumfacing))) {
                 return true;
             }
         }
@@ -103,9 +103,7 @@
         return false;
     }
 
-    private boolean getCanBlockBurn(World worldIn, BlockPos p_176368_2_)
-    {
+    private boolean getCanBlockBurn(World worldIn, BlockPos p_176368_2_) {
         return worldIn.getBlockState(p_176368_2_).getBlock().getMaterial().getCanBurn();
     }
-}
+}
