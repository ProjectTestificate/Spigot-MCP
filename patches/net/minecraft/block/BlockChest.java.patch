---a/net/minecraft/block/BlockChest.java
+++b/net/minecraft/block/BlockChest.java
@@ -2,6 +2,7 @@
 
 import java.util.Iterator;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyDirection;
@@ -27,15 +27,15 @@
 import net.minecraft.world.ILockableContainer;
 import net.minecraft.world.World;
 
-public class BlockChest extends BlockContainer
-{
+public class BlockChest extends BlockContainer {
+
     public static final PropertyDirection FACING = PropertyDirection.create("facing", EnumFacing.Plane.HORIZONTAL);
     private final Random rand = new Random();
     public final int chestType;
     private static final String __OBFID = "CL_00000214";
 
-    protected BlockChest(int type)
-    {
+    protected BlockChest(int type) {
         super(Material.wood);
         this.setDefaultState(this.blockState.getBaseState().withProperty(FACING, EnumFacing.NORTH));
         this.chestType = type;
@@ -43,70 +43,52 @@
         this.setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 0.875F, 0.9375F);
     }
 
-    public boolean isOpaqueCube()
-    {
+    public boolean isOpaqueCube() {
         return false;
     }
 
-    public boolean isFullCube()
-    {
+    public boolean isFullCube() {
         return false;
     }
 
-    public int getRenderType()
-    {
+    public int getRenderType() {
         return 2;
     }
 
-    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos)
-    {
-        if (worldIn.getBlockState(pos.north()).getBlock() == this)
-        {
+    public void setBlockBoundsBasedOnState(IBlockAccess worldIn, BlockPos pos) {
+        if (worldIn.getBlockState(pos.north()).getBlock() == this) {
             this.setBlockBounds(0.0625F, 0.0F, 0.0F, 0.9375F, 0.875F, 0.9375F);
-        }
-        else if (worldIn.getBlockState(pos.south()).getBlock() == this)
-        {
+        } else if (worldIn.getBlockState(pos.south()).getBlock() == this) {
             this.setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 0.875F, 1.0F);
-        }
-        else if (worldIn.getBlockState(pos.west()).getBlock() == this)
-        {
+        } else if (worldIn.getBlockState(pos.west()).getBlock() == this) {
             this.setBlockBounds(0.0F, 0.0F, 0.0625F, 0.9375F, 0.875F, 0.9375F);
-        }
-        else if (worldIn.getBlockState(pos.east()).getBlock() == this)
-        {
+        } else if (worldIn.getBlockState(pos.east()).getBlock() == this) {
             this.setBlockBounds(0.0625F, 0.0F, 0.0625F, 1.0F, 0.875F, 0.9375F);
-        }
-        else
-        {
+        } else {
             this.setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 0.875F, 0.9375F);
         }
     }
 
-    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state) {
         this.checkForSurroundingChests(worldIn, pos, state);
         Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
 
-        while (iterator.hasNext())
-        {
-            EnumFacing enumfacing = (EnumFacing)iterator.next();
+        while (iterator.hasNext()) {
+            EnumFacing enumfacing = (EnumFacing) iterator.next();
             BlockPos blockpos1 = pos.offset(enumfacing);
             IBlockState iblockstate1 = worldIn.getBlockState(blockpos1);
 
-            if (iblockstate1.getBlock() == this)
-            {
+            if (iblockstate1.getBlock() == this) {
                 this.checkForSurroundingChests(worldIn, blockpos1, iblockstate1);
             }
         }
     }
 
-    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
-    {
+    public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer) {
         return this.getDefaultState().withProperty(FACING, placer.getHorizontalFacing());
     }
 
-    public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack)
-    {
-        EnumFacing enumfacing = EnumFacing.getHorizontal(MathHelper.floor_double((double)(placer.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3).getOpposite();
+    public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack) {
+        EnumFacing enumfacing = EnumFacing.getHorizontal(MathHelper.floor_double((double) (placer.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3).getOpposite();
         state = state.withProperty(FACING, enumfacing);
         BlockPos blockpos1 = pos.north();
         BlockPos blockpos2 = pos.south();
@@ -118,139 +118,106 @@
         boolean flag2 = this == worldIn.getBlockState(blockpos3).getBlock();
         boolean flag3 = this == worldIn.getBlockState(blockpos4).getBlock();
 
-        if (!flag && !flag1 && !flag2 && !flag3)
-        {
+        if (!flag && !flag1 && !flag2 && !flag3) {
             worldIn.setBlockState(pos, state, 3);
-        }
-        else if (enumfacing.getAxis() == EnumFacing.Axis.X && (flag || flag1))
-        {
-            if (flag)
-            {
+        } else if (enumfacing.getAxis() == EnumFacing.Axis.X && (flag || flag1)) {
+            if (flag) {
                 worldIn.setBlockState(blockpos1, state, 3);
-            }
-            else
-            {
+            } else {
                 worldIn.setBlockState(blockpos2, state, 3);
             }
 
             worldIn.setBlockState(pos, state, 3);
-        }
-        else if (enumfacing.getAxis() == EnumFacing.Axis.Z && (flag2 || flag3))
-        {
-            if (flag2)
-            {
+        } else if (enumfacing.getAxis() == EnumFacing.Axis.Z && (flag2 || flag3)) {
+            if (flag2) {
                 worldIn.setBlockState(blockpos3, state, 3);
-            }
-            else
-            {
+            } else {
                 worldIn.setBlockState(blockpos4, state, 3);
             }
 
             worldIn.setBlockState(pos, state, 3);
         }
 
-        if (stack.hasDisplayName())
-        {
+        if (stack.hasDisplayName()) {
             TileEntity tileentity = worldIn.getTileEntity(pos);
 
-            if (tileentity instanceof TileEntityChest)
-            {
-                ((TileEntityChest)tileentity).setCustomName(stack.getDisplayName());
+            if (tileentity instanceof TileEntityChest) {
+                ((TileEntityChest) tileentity).setCustomName(stack.getDisplayName());
             }
         }
     }
 
-    public IBlockState checkForSurroundingChests(World worldIn, BlockPos pos, IBlockState state)
-    {
-        if (worldIn.isRemote)
-        {
+    public IBlockState checkForSurroundingChests(World worldIn, BlockPos pos, IBlockState state) {
+        if (worldIn.isRemote) {
             return state;
-        }
-        else
-        {
+        } else {
             IBlockState iblockstate1 = worldIn.getBlockState(pos.north());
             IBlockState iblockstate2 = worldIn.getBlockState(pos.south());
             IBlockState iblockstate3 = worldIn.getBlockState(pos.west());
             IBlockState iblockstate4 = worldIn.getBlockState(pos.east());
-            EnumFacing enumfacing = (EnumFacing)state.getValue(FACING);
+            EnumFacing enumfacing = (EnumFacing) state.getValue(FACING);
             Block block = iblockstate1.getBlock();
             Block block1 = iblockstate2.getBlock();
             Block block2 = iblockstate3.getBlock();
             Block block3 = iblockstate4.getBlock();
 
-            if (block != this && block1 != this)
-            {
+            if (block != this && block1 != this) {
                 boolean flag = block.isFullBlock();
                 boolean flag1 = block1.isFullBlock();
 
-                if (block2 == this || block3 == this)
-                {
+                if (block2 == this || block3 == this) {
                     BlockPos blockpos2 = block2 == this ? pos.west() : pos.east();
                     IBlockState iblockstate7 = worldIn.getBlockState(blockpos2.north());
                     IBlockState iblockstate8 = worldIn.getBlockState(blockpos2.south());
                     enumfacing = EnumFacing.SOUTH;
                     EnumFacing enumfacing2;
 
-                    if (block2 == this)
-                    {
-                        enumfacing2 = (EnumFacing)iblockstate3.getValue(FACING);
+                    if (block2 == this) {
+                        enumfacing2 = (EnumFacing) iblockstate3.getValue(FACING);
+                    } else {
+                        enumfacing2 = (EnumFacing) iblockstate4.getValue(FACING);
                     }
-                    else
-                    {
-                        enumfacing2 = (EnumFacing)iblockstate4.getValue(FACING);
-                    }
 
-                    if (enumfacing2 == EnumFacing.NORTH)
-                    {
+                    if (enumfacing2 == EnumFacing.NORTH) {
                         enumfacing = EnumFacing.NORTH;
                     }
 
                     Block block6 = iblockstate7.getBlock();
                     Block block7 = iblockstate8.getBlock();
 
-                    if ((flag || block6.isFullBlock()) && !flag1 && !block7.isFullBlock())
-                    {
+                    if ((flag || block6.isFullBlock()) && !flag1 && !block7.isFullBlock()) {
                         enumfacing = EnumFacing.SOUTH;
                     }
 
-                    if ((flag1 || block7.isFullBlock()) && !flag && !block6.isFullBlock())
-                    {
+                    if ((flag1 || block7.isFullBlock()) && !flag && !block6.isFullBlock()) {
                         enumfacing = EnumFacing.NORTH;
                     }
                 }
-            }
-            else
-            {
+            } else {
                 BlockPos blockpos1 = block == this ? pos.north() : pos.south();
                 IBlockState iblockstate5 = worldIn.getBlockState(blockpos1.west());
                 IBlockState iblockstate6 = worldIn.getBlockState(blockpos1.east());
                 enumfacing = EnumFacing.EAST;
                 EnumFacing enumfacing1;
 
-                if (block == this)
-                {
-                    enumfacing1 = (EnumFacing)iblockstate1.getValue(FACING);
+                if (block == this) {
+                    enumfacing1 = (EnumFacing) iblockstate1.getValue(FACING);
+                } else {
+                    enumfacing1 = (EnumFacing) iblockstate2.getValue(FACING);
                 }
-                else
-                {
-                    enumfacing1 = (EnumFacing)iblockstate2.getValue(FACING);
-                }
 
-                if (enumfacing1 == EnumFacing.WEST)
-                {
+                if (enumfacing1 == EnumFacing.WEST) {
                     enumfacing = EnumFacing.WEST;
                 }
 
                 Block block4 = iblockstate5.getBlock();
                 Block block5 = iblockstate6.getBlock();
 
-                if ((block2.isFullBlock() || block4.isFullBlock()) && !block3.isFullBlock() && !block5.isFullBlock())
-                {
+                if ((block2.isFullBlock() || block4.isFullBlock()) && !block3.isFullBlock() && !block5.isFullBlock()) {
                     enumfacing = EnumFacing.EAST;
                 }
 
-                if ((block3.isFullBlock() || block5.isFullBlock()) && !block2.isFullBlock() && !block4.isFullBlock())
-                {
+                if ((block3.isFullBlock() || block5.isFullBlock()) && !block2.isFullBlock() && !block4.isFullBlock()) {
                     enumfacing = EnumFacing.WEST;
                 }
             }
@@ -261,23 +261,19 @@
         }
     }
 
-    public IBlockState correctFacing(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public IBlockState correctFacing(World worldIn, BlockPos pos, IBlockState state) {
         EnumFacing enumfacing = null;
         Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
 
-        while (iterator.hasNext())
-        {
-            EnumFacing enumfacing1 = (EnumFacing)iterator.next();
+        while (iterator.hasNext()) {
+            EnumFacing enumfacing1 = (EnumFacing) iterator.next();
             IBlockState iblockstate1 = worldIn.getBlockState(pos.offset(enumfacing1));
 
-            if (iblockstate1.getBlock() == this)
-            {
+            if (iblockstate1.getBlock() == this) {
                 return state;
             }
 
-            if (iblockstate1.getBlock().isFullBlock())
-            {
-                if (enumfacing != null)
-                {
+            if (iblockstate1.getBlock().isFullBlock()) {
+                if (enumfacing != null) {
                     enumfacing = null;
                     break;
                 }
@@ -288,26 +288,20 @@
             }
         }
 
-        if (enumfacing != null)
-        {
+        if (enumfacing != null) {
             return state.withProperty(FACING, enumfacing.getOpposite());
-        }
-        else
-        {
-            EnumFacing enumfacing2 = (EnumFacing)state.getValue(FACING);
+        } else {
+            EnumFacing enumfacing2 = (EnumFacing) state.getValue(FACING);
 
-            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock())
-            {
+            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock()) {
                 enumfacing2 = enumfacing2.getOpposite();
             }
 
-            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock())
-            {
+            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock()) {
                 enumfacing2 = enumfacing2.rotateY();
             }
 
-            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock())
-            {
+            if (worldIn.getBlockState(pos.offset(enumfacing2)).getBlock().isFullBlock()) {
                 enumfacing2 = enumfacing2.getOpposite();
             }
 
@@ -315,46 +315,38 @@
         }
     }
 
-    public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
-    {
+    public boolean canPlaceBlockAt(World worldIn, BlockPos pos) {
         int i = 0;
         BlockPos blockpos1 = pos.west();
         BlockPos blockpos2 = pos.east();
         BlockPos blockpos3 = pos.north();
         BlockPos blockpos4 = pos.south();
 
-        if (worldIn.getBlockState(blockpos1).getBlock() == this)
-        {
-            if (this.isDoubleChest(worldIn, blockpos1))
-            {
+        if (worldIn.getBlockState(blockpos1).getBlock() == this) {
+            if (this.isDoubleChest(worldIn, blockpos1)) {
                 return false;
             }
 
             ++i;
         }
 
-        if (worldIn.getBlockState(blockpos2).getBlock() == this)
-        {
-            if (this.isDoubleChest(worldIn, blockpos2))
-            {
+        if (worldIn.getBlockState(blockpos2).getBlock() == this) {
+            if (this.isDoubleChest(worldIn, blockpos2)) {
                 return false;
             }
 
             ++i;
         }
 
-        if (worldIn.getBlockState(blockpos3).getBlock() == this)
-        {
-            if (this.isDoubleChest(worldIn, blockpos3))
-            {
+        if (worldIn.getBlockState(blockpos3).getBlock() == this) {
+            if (this.isDoubleChest(worldIn, blockpos3)) {
                 return false;
             }
 
             ++i;
         }
 
-        if (worldIn.getBlockState(blockpos4).getBlock() == this)
-        {
-            if (this.isDoubleChest(worldIn, blockpos4))
-            {
+        if (worldIn.getBlockState(blockpos4).getBlock() == this) {
+            if (this.isDoubleChest(worldIn, blockpos4)) {
                 return false;
             }
 
@@ -366,70 +366,53 @@
         return i <= 1;
     }
 
-    private boolean isDoubleChest(World worldIn, BlockPos pos)
-    {
-        if (worldIn.getBlockState(pos).getBlock() != this)
-        {
+    private boolean isDoubleChest(World worldIn, BlockPos pos) {
+        if (worldIn.getBlockState(pos).getBlock() != this) {
             return false;
-        }
-        else
-        {
+        } else {
             Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
             EnumFacing enumfacing;
 
-            do
-            {
-                if (!iterator.hasNext())
-                {
+            do {
+                if (!iterator.hasNext()) {
                     return false;
                 }
 
-                enumfacing = (EnumFacing)iterator.next();
-            }
-            while (worldIn.getBlockState(pos.offset(enumfacing)).getBlock() != this);
+                enumfacing = (EnumFacing) iterator.next();
+            } while (worldIn.getBlockState(pos.offset(enumfacing)).getBlock() != this);
 
             return true;
         }
     }
 
-    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
-    {
+    public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock) {
         super.onNeighborBlockChange(worldIn, pos, state, neighborBlock);
         TileEntity tileentity = worldIn.getTileEntity(pos);
 
-        if (tileentity instanceof TileEntityChest)
-        {
+        if (tileentity instanceof TileEntityChest) {
             tileentity.updateContainingBlockInfo();
         }
     }
 
-    public void breakBlock(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public void breakBlock(World worldIn, BlockPos pos, IBlockState state) {
         TileEntity tileentity = worldIn.getTileEntity(pos);
 
-        if (tileentity instanceof IInventory)
-        {
-            InventoryHelper.dropInventoryItems(worldIn, pos, (IInventory)tileentity);
+        if (tileentity instanceof IInventory) {
+            InventoryHelper.dropInventoryItems(worldIn, pos, (IInventory) tileentity);
             worldIn.updateComparatorOutputLevel(pos, this);
         }
 
         super.breakBlock(worldIn, pos, state);
     }
 
-    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
-    {
-        if (worldIn.isRemote)
-        {
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ) {
+        if (worldIn.isRemote) {
             return true;
-        }
-        else
-        {
+        } else {
             ILockableContainer ilockablecontainer = this.getLockableContainer(worldIn, pos);
 
-            if (ilockablecontainer != null)
-            {
+            if (ilockablecontainer != null) {
                 playerIn.displayGUIChest(ilockablecontainer);
             }
 
@@ -435,155 +435,120 @@
         }
     }
 
-    public ILockableContainer getLockableContainer(World worldIn, BlockPos pos)
-    {
+    public ILockableContainer getLockableContainer(World worldIn, BlockPos pos) {
         TileEntity tileentity = worldIn.getTileEntity(pos);
 
-        if (!(tileentity instanceof TileEntityChest))
-        {
+        if (!(tileentity instanceof TileEntityChest)) {
             return null;
-        }
-        else
-        {
-            Object object = (TileEntityChest)tileentity;
+        } else {
+            Object object = (TileEntityChest) tileentity;
 
-            if (this.isBlocked(worldIn, pos))
-            {
+            if (this.isBlocked(worldIn, pos)) {
                 return null;
-            }
-            else
-            {
+            } else {
                 Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
 
-                while (iterator.hasNext())
-                {
-                    EnumFacing enumfacing = (EnumFacing)iterator.next();
+                while (iterator.hasNext()) {
+                    EnumFacing enumfacing = (EnumFacing) iterator.next();
                     BlockPos blockpos1 = pos.offset(enumfacing);
                     Block block = worldIn.getBlockState(blockpos1).getBlock();
 
-                    if (block == this)
-                    {
-                        if (this.isBlocked(worldIn, blockpos1))
-                        {
+                    if (block == this) {
+                        if (this.isBlocked(worldIn, blockpos1)) {
                             return null;
                         }
 
                         TileEntity tileentity1 = worldIn.getTileEntity(blockpos1);
 
-                        if (tileentity1 instanceof TileEntityChest)
-                        {
-                            if (enumfacing != EnumFacing.WEST && enumfacing != EnumFacing.NORTH)
-                            {
-                                object = new InventoryLargeChest("container.chestDouble", (ILockableContainer)object, (TileEntityChest)tileentity1);
+                        if (tileentity1 instanceof TileEntityChest) {
+                            if (enumfacing != EnumFacing.WEST && enumfacing != EnumFacing.NORTH) {
+                                object = new InventoryLargeChest("container.chestDouble", (ILockableContainer) object, (TileEntityChest) tileentity1);
+                            } else {
+                                object = new InventoryLargeChest("container.chestDouble", (TileEntityChest) tileentity1, (ILockableContainer) object);
                             }
-                            else
-                            {
-                                object = new InventoryLargeChest("container.chestDouble", (TileEntityChest)tileentity1, (ILockableContainer)object);
-                            }
                         }
                     }
                 }
 
-                return (ILockableContainer)object;
+                return (ILockableContainer) object;
             }
         }
     }
 
-    public TileEntity createNewTileEntity(World worldIn, int meta)
-    {
+    public TileEntity createNewTileEntity(World worldIn, int meta) {
         return new TileEntityChest();
     }
 
-    public boolean canProvidePower()
-    {
+    public boolean canProvidePower() {
         return this.chestType == 1;
     }
 
-    public int isProvidingWeakPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side)
-    {
-        if (!this.canProvidePower())
-        {
+    public int isProvidingWeakPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side) {
+        if (!this.canProvidePower()) {
             return 0;
-        }
-        else
-        {
+        } else {
             int i = 0;
             TileEntity tileentity = worldIn.getTileEntity(pos);
 
-            if (tileentity instanceof TileEntityChest)
-            {
-                i = ((TileEntityChest)tileentity).numPlayersUsing;
+            if (tileentity instanceof TileEntityChest) {
+                i = ((TileEntityChest) tileentity).numPlayersUsing;
             }
 
             return MathHelper.clamp_int(i, 0, 15);
         }
     }
 
-    public int isProvidingStrongPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side)
-    {
+    public int isProvidingStrongPower(IBlockAccess worldIn, BlockPos pos, IBlockState state, EnumFacing side) {
         return side == EnumFacing.UP ? this.isProvidingWeakPower(worldIn, pos, state, side) : 0;
     }
 
-    private boolean isBlocked(World worldIn, BlockPos pos)
-    {
+    private boolean isBlocked(World worldIn, BlockPos pos) {
         return this.isBelowSolidBlock(worldIn, pos) || this.isOcelotSittingOnChest(worldIn, pos);
     }
 
-    private boolean isBelowSolidBlock(World worldIn, BlockPos pos)
-    {
+    private boolean isBelowSolidBlock(World worldIn, BlockPos pos) {
         return worldIn.getBlockState(pos.up()).getBlock().isNormalCube();
     }
 
-    private boolean isOcelotSittingOnChest(World worldIn, BlockPos pos)
-    {
-        Iterator iterator = worldIn.getEntitiesWithinAABB(EntityOcelot.class, new AxisAlignedBB((double)pos.getX(), (double)(pos.getY() + 1), (double)pos.getZ(), (double)(pos.getX() + 1), (double)(pos.getY() + 2), (double)(pos.getZ() + 1))).iterator();
+    private boolean isOcelotSittingOnChest(World worldIn, BlockPos pos) {
+        Iterator iterator = worldIn.getEntitiesWithinAABB(EntityOcelot.class, new AxisAlignedBB((double) pos.getX(), (double) (pos.getY() + 1), (double) pos.getZ(), (double) (pos.getX() + 1), (double) (pos.getY() + 2), (double) (pos.getZ() + 1))).iterator();
         EntityOcelot entityocelot;
 
-        do
-        {
-            if (!iterator.hasNext())
-            {
+        do {
+            if (!iterator.hasNext()) {
                 return false;
             }
 
-            Entity entity = (Entity)iterator.next();
-            entityocelot = (EntityOcelot)entity;
-        }
-        while (!entityocelot.isSitting());
+            Entity entity = (Entity) iterator.next();
+            entityocelot = (EntityOcelot) entity;
+        } while (!entityocelot.isSitting());
 
         return true;
     }
 
-    public boolean hasComparatorInputOverride()
-    {
+    public boolean hasComparatorInputOverride() {
         return true;
     }
 
-    public int getComparatorInputOverride(World worldIn, BlockPos pos)
-    {
+    public int getComparatorInputOverride(World worldIn, BlockPos pos) {
         return Container.calcRedstoneFromInventory(this.getLockableContainer(worldIn, pos));
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         EnumFacing enumfacing = EnumFacing.getFront(meta);
 
-        if (enumfacing.getAxis() == EnumFacing.Axis.Y)
-        {
+        if (enumfacing.getAxis() == EnumFacing.Axis.Y) {
             enumfacing = EnumFacing.NORTH;
         }
 
         return this.getDefaultState().withProperty(FACING, enumfacing);
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((EnumFacing)state.getValue(FACING)).getIndex();
+    public int getMetaFromState(IBlockState state) {
+        return ((EnumFacing) state.getValue(FACING)).getIndex();
     }
 
-    protected BlockState createBlockState()
-    {
-        return new BlockState(this, new IProperty[] {FACING});
+    protected BlockState createBlockState() {
+        return new BlockState(this, new IProperty[]{FACING});
     }
-}
+}
