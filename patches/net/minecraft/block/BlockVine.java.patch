--- decompiled\net\minecraft\block\BlockVine.java
+++ src\main\java\net\minecraft\block\BlockVine.java
@@ -1,9 +1,10 @@
 package net.minecraft.block;
 
 import java.util.Iterator;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
@@ -17,19 +18,18 @@
 import net.minecraft.stats.StatList;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
-import net.minecraft.world.ColorizerFoliage;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
 public class BlockVine extends Block
 {
+
     public static final PropertyBool UP = PropertyBool.create("up");
     public static final PropertyBool NORTH = PropertyBool.create("north");
     public static final PropertyBool EAST = PropertyBool.create("east");
     public static final PropertyBool SOUTH = PropertyBool.create("south");
     public static final PropertyBool WEST = PropertyBool.create("west");
@@ -201,28 +201,10 @@
 
             return true;
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getBlockColor()
-    {
-        return ColorizerFoliage.getFoliageColorBasic();
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getRenderColor(IBlockState state)
-    {
-        return ColorizerFoliage.getFoliageColorBasic();
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int colorMultiplier(IBlockAccess worldIn, BlockPos pos, int renderPass)
-    {
-        return worldIn.getBiomeGenForCoords(pos).getFoliageColorAtPos(pos);
-    }
-
     public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
     {
         if (!worldIn.isRemote && !this.recheckGrownSides(worldIn, pos, state))
         {
             this.dropBlockAsItem(worldIn, pos, state, 0);
@@ -281,10 +263,17 @@
                             }
                         }
 
                         if (((Boolean)iblockstate2.getValue(NORTH)).booleanValue() || ((Boolean)iblockstate2.getValue(EAST)).booleanValue() || ((Boolean)iblockstate2.getValue(SOUTH)).booleanValue() || ((Boolean)iblockstate2.getValue(WEST)).booleanValue())
                         {
+                            // CraftBukkit start - Call BlockSpreadEvent
+                            // world.setTypeAndData(blockposition.up(), iblockdata1, 2);
+                            BlockPos target = pos.up();
+                            org.bukkit.block.Block source = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+                            org.bukkit.block.Block block = worldIn.getWorld().getBlockAt(target.getX(), target.getY(), target.getZ());
+                            CraftEventFactory.handleBlockSpreadEvent(block, source, this, getMetaFromState(iblockstate2));
+                            // CraftBukkit end
                             worldIn.setBlockState(pos.up(), iblockstate2, 2);
                         }
                     }
                 }
                 else
@@ -304,31 +293,43 @@
                                 EnumFacing enumfacing3 = enumfacing1.rotateYCCW();
                                 boolean flag1 = ((Boolean)state.getValue(getPropertyFor(enumfacing2))).booleanValue();
                                 boolean flag2 = ((Boolean)state.getValue(getPropertyFor(enumfacing3))).booleanValue();
                                 BlockPos blockpos3 = blockpos2.offset(enumfacing2);
                                 BlockPos blockpos1 = blockpos2.offset(enumfacing3);
+                                // CraftBukkit start - Call BlockSpreadEvent
+                                org.bukkit.block.Block source = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+                                org.bukkit.block.Block bukkitBlock = worldIn.getWorld().getBlockAt(blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
 
                                 if (flag1 && this.canPlaceOn(worldIn.getBlockState(blockpos3).getBlock()))
                                 {
-                                    worldIn.setBlockState(blockpos2, this.getDefaultState().withProperty(getPropertyFor(enumfacing2), Boolean.valueOf(true)), 2);
+                                    // worldIn.setBlockState(blockpos2, this.getDefaultState().withProperty(getPropertyFor(enumfacing2), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, getMetaFromState(this.getDefaultState().withProperty(getPropertyFor(enumfacing2), Boolean.valueOf(true))));
                                 }
                                 else if (flag2 && this.canPlaceOn(worldIn.getBlockState(blockpos1).getBlock()))
                                 {
-                                    worldIn.setBlockState(blockpos2, this.getDefaultState().withProperty(getPropertyFor(enumfacing3), Boolean.valueOf(true)), 2);
+                                    // worldIn.setBlockState(blockpos2, this.getDefaultState().withProperty(getPropertyFor(enumfacing3), Boolean.valueOf(true)), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, getMetaFromState(this.getDefaultState().withProperty(getPropertyFor(enumfacing3), Boolean.valueOf(true))));
                                 }
                                 else if (flag1 && worldIn.isAirBlock(blockpos3) && this.canPlaceOn(worldIn.getBlockState(pos.offset(enumfacing2)).getBlock()))
                                 {
-                                    worldIn.setBlockState(blockpos3, this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true)), 2);
+                                    // worldIn.setBlockState(blockpos3, this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = worldIn.getWorld().getBlockAt(blockpos2.getX(), blockpos2.getY(), blockpos2.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, getMetaFromState(this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true))));
                                 }
                                 else if (flag2 && worldIn.isAirBlock(blockpos1) && this.canPlaceOn(worldIn.getBlockState(pos.offset(enumfacing3)).getBlock()))
                                 {
-                                    worldIn.setBlockState(blockpos1, this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true)), 2);
+                                    // worldIn.setBlockState(blockpos1, this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true)), 2);
+                                    bukkitBlock = worldIn.getWorld().getBlockAt(blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, getMetaFromState(this.getDefaultState().withProperty(getPropertyFor(enumfacing1.getOpposite()), Boolean.valueOf(true))));
                                 }
                                 else if (this.canPlaceOn(worldIn.getBlockState(blockpos2.up()).getBlock()))
                                 {
-                                    worldIn.setBlockState(blockpos2, this.getDefaultState(), 2);
+                                    // worldIn.setBlockState(blockpos2, this.getDefaultState(), 2);
+                                    CraftEventFactory.handleBlockSpreadEvent(bukkitBlock, source, this, getMetaFromState(this.getDefaultState()));
                                 }
+
+                                // CraftBukkit end
                             }
                             else if (block1.blockMaterial.isOpaque() && block1.isFullCube())
                             {
                                 worldIn.setBlockState(pos, state.withProperty(getPropertyFor(enumfacing1), Boolean.valueOf(true)), 2);
                             }
@@ -381,11 +382,17 @@
                                     }
                                 }
 
                                 if (((Boolean)iblockstate1.getValue(NORTH)).booleanValue() || ((Boolean)iblockstate1.getValue(EAST)).booleanValue() || ((Boolean)iblockstate1.getValue(SOUTH)).booleanValue() || ((Boolean)iblockstate1.getValue(WEST)).booleanValue())
                                 {
-                                    worldIn.setBlockState(blockpos2, iblockstate1, 2);
+                                    // CraftBukkit start - Call BlockSpreadEvent
+                                    // worldIn.setBlockState(blockpos2, iblockstate1, 2);
+                                    BlockPos target = pos.up();
+                                    org.bukkit.block.Block source = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+                                    org.bukkit.block.Block bBlock = worldIn.getWorld().getBlockAt(target.getX(), target.getY(), target.getZ());
+                                    CraftEventFactory.handleBlockSpreadEvent(bBlock, source, this, getMetaFromState(iblockstate1));
+                                    // CraftBukkit end
                                 }
                             }
                         }
                     }
                 }
@@ -430,16 +437,10 @@
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(NORTH, Boolean.valueOf((meta & NORTH_FLAG) > 0)).withProperty(EAST, Boolean.valueOf((meta & EAST_FLAG) > 0)).withProperty(SOUTH, Boolean.valueOf((meta & SOUTH_FLAG) > 0)).withProperty(WEST, Boolean.valueOf((meta & WEST_FLAG) > 0));
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
-
     public int getMetaFromState(IBlockState state)
     {
         int i = 0;
 
         if (((Boolean)state.getValue(NORTH)).booleanValue())
@@ -508,10 +509,11 @@
         return i;
     }
 
     static final class SwitchEnumFacing
         {
+
             static final int[] FACING_LOOKUP = new int[EnumFacing.values().length];
             private static final String __OBFID = "CL_00002049";
 
             static
             {
