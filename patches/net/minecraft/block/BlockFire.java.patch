--- decompiled\net\minecraft\block\BlockFire.java
+++ src\main\java\net\minecraft\block\BlockFire.java
@@ -1,10 +1,10 @@
 package net.minecraft.block;
 
-import com.google.common.collect.Maps;
 import java.util.Map;
 import java.util.Random;
+
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyBool;
 import net.minecraft.block.properties.PropertyInteger;
@@ -12,20 +12,24 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumParticleTypes;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldProviderEnd;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockBurnEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
+import org.bukkit.material.MaterialData;
+
+import com.google.common.collect.Maps;
+
 public class BlockFire extends Block
 {
+
     public static final PropertyInteger AGE = PropertyInteger.create("age", 0, 15);
     public static final PropertyBool FLIP = PropertyBool.create("flip");
     public static final PropertyBool ALT = PropertyBool.create("alt");
     public static final PropertyBool NORTH = PropertyBool.create("north");
     public static final PropertyBool EAST = PropertyBool.create("east");
@@ -142,11 +146,11 @@
     {
         if (worldIn.getGameRules().getGameRuleBooleanValue("doFireTick"))
         {
             if (!this.canPlaceBlockAt(worldIn, pos))
             {
-                worldIn.setBlockToAir(pos);
+                fireExtinguished(worldIn, pos); // CraftBukkit - invalid place location
             }
 
             Block block = worldIn.getBlockState(pos.down()).getBlock();
             boolean flag = block == Blocks.netherrack;
 
@@ -155,11 +159,11 @@
                 flag = true;
             }
 
             if (!flag && worldIn.isRaining() && this.canDie(worldIn, pos))
             {
-                worldIn.setBlockToAir(pos);
+                fireExtinguished(worldIn, pos); // CraftBukkit - extinguished by rain
             }
             else
             {
                 int i = ((Integer)state.getValue(AGE)).intValue();
 
@@ -175,19 +179,19 @@
                 {
                     if (!this.canNeighborCatchFire(worldIn, pos))
                     {
                         if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) || i > 3)
                         {
-                            worldIn.setBlockToAir(pos);
+                            fireExtinguished(worldIn, pos); // CraftBukkit
                         }
 
                         return;
                     }
 
                     if (!this.canCatchFire(worldIn, pos.down()) && i == 15 && rand.nextInt(4) == 0)
                     {
-                        worldIn.setBlockToAir(pos);
+                        fireExtinguished(worldIn, pos); // CraftBukkit
                         return;
                     }
                 }
 
                 boolean flag1 = worldIn.isBlockinHighHumidity(pos);
@@ -239,11 +243,33 @@
                                         if (l1 > 15)
                                         {
                                             l1 = 15;
                                         }
 
-                                        worldIn.setBlockState(blockpos1, state.withProperty(AGE, Integer.valueOf(l1)), 3);
+                                        // CraftBukkit start - Call to stop spread of fire
+                                        if (worldIn.getBlockState(blockpos1) != Blocks.fire)
+                                        {
+                                            if (CraftEventFactory.callBlockIgniteEvent(worldIn, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), pos.getX(), pos.getY(), pos.getZ()).isCancelled())
+                                            {
+                                                continue;
+                                            }
+
+                                            org.bukkit.Server server = worldIn.getServer();
+                                            org.bukkit.World bworld = worldIn.getWorld();
+                                            org.bukkit.block.BlockState blockState = bworld.getBlockAt(blockpos1.getX(), blockpos1.getY(), blockpos1.getZ()).getState();
+                                            blockState.setTypeId(Block.getIdFromBlock(this));
+                                            blockState.setData(new MaterialData(Block.getIdFromBlock(this), (byte)l1));
+                                            BlockSpreadEvent spreadEvent = new BlockSpreadEvent(blockState.getBlock(), bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ()), blockState);
+                                            server.getPluginManager().callEvent(spreadEvent);
+
+                                            if (!spreadEvent.isCancelled())
+                                            {
+                                                blockState.update(true);
+                                            }
+                                        }
+
+                                        // CraftBukkit end
                                     }
                                 }
                             }
                         }
                     }
@@ -260,17 +286,17 @@
     public boolean requiresUpdates()
     {
         return false;
     }
 
-    private int getFlammability(Block blockIn)
+    public int getFlammability(Block blockIn)
     {
         Integer integer = (Integer)this.flammabilities.get(blockIn);
         return integer == null ? 0 : integer.intValue();
     }
 
-    private int getEncouragement(Block blockIn)
+    public int getEncouragement(Block blockIn)
     {
         Integer integer = (Integer)this.encouragements.get(blockIn);
         return integer == null ? 0 : integer.intValue();
     }
 
@@ -279,11 +305,22 @@
         int k = this.getFlammability(worldIn.getBlockState(pos).getBlock());
 
         if (random.nextInt(chance) < k)
         {
             IBlockState iblockstate = worldIn.getBlockState(pos);
+            // CraftBukkit start
+            org.bukkit.block.Block theBlock = worldIn.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+            BlockBurnEvent event = new BlockBurnEvent(theBlock);
+            worldIn.getServer().getPluginManager().callEvent(event);
 
+            if (event.isCancelled())
+            {
+                return;
+            }
+
+            // CraftBukkit end
+
             if (random.nextInt(age + 10) < 5 && !worldIn.canLightningStrike(pos))
             {
                 int l = age + random.nextInt(5) / 4;
 
                 if (l > 15)
@@ -293,11 +330,11 @@
 
                 worldIn.setBlockState(pos, this.getDefaultState().withProperty(AGE, Integer.valueOf(l)), 3);
             }
             else
             {
-                worldIn.setBlockToAir(pos);
+                fireExtinguished(worldIn, pos); // CraftBukkit
             }
 
             if (iblockstate.getBlock() == Blocks.tnt)
             {
                 Blocks.tnt.onBlockDestroyedByPlayer(worldIn, pos, iblockstate.withProperty(BlockTNT.EXPLODE, Boolean.valueOf(true)));
@@ -362,122 +399,34 @@
 
     public void onNeighborBlockChange(World worldIn, BlockPos pos, IBlockState state, Block neighborBlock)
     {
         if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !this.canNeighborCatchFire(worldIn, pos))
         {
-            worldIn.setBlockToAir(pos);
+            fireExtinguished(worldIn, pos); // CraftBukkit - fuel block gone
         }
     }
 
     public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state)
     {
         if (worldIn.provider.getDimensionId() > 0 || !Blocks.portal.func_176548_d(worldIn, pos))
         {
             if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !this.canNeighborCatchFire(worldIn, pos))
             {
-                worldIn.setBlockToAir(pos);
+                fireExtinguished(worldIn, pos); // CraftBukkit - fuel block broke
             }
             else
             {
                 worldIn.scheduleUpdate(pos, this, this.tickRate(worldIn) + worldIn.rand.nextInt(10));
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void randomDisplayTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
-    {
-        if (rand.nextInt(24) == 0)
-        {
-            worldIn.playSound((double)((float)pos.getX() + 0.5F), (double)((float)pos.getY() + 0.5F), (double)((float)pos.getZ() + 0.5F), "fire.fire", 1.0F + rand.nextFloat(), rand.nextFloat() * 0.7F + 0.3F, false);
-        }
-
-        int i;
-        double d0;
-        double d1;
-        double d2;
-
-        if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !Blocks.fire.canCatchFire(worldIn, pos.down()))
-        {
-            if (Blocks.fire.canCatchFire(worldIn, pos.west()))
-            {
-                for (i = 0; i < 2; ++i)
-                {
-                    d0 = (double)pos.getX() + rand.nextDouble() * 0.10000000149011612D;
-                    d1 = (double)pos.getY() + rand.nextDouble();
-                    d2 = (double)pos.getZ() + rand.nextDouble();
-                    worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-                }
-            }
-
-            if (Blocks.fire.canCatchFire(worldIn, pos.east()))
-            {
-                for (i = 0; i < 2; ++i)
-                {
-                    d0 = (double)(pos.getX() + 1) - rand.nextDouble() * 0.10000000149011612D;
-                    d1 = (double)pos.getY() + rand.nextDouble();
-                    d2 = (double)pos.getZ() + rand.nextDouble();
-                    worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-                }
-            }
-
-            if (Blocks.fire.canCatchFire(worldIn, pos.north()))
-            {
-                for (i = 0; i < 2; ++i)
-                {
-                    d0 = (double)pos.getX() + rand.nextDouble();
-                    d1 = (double)pos.getY() + rand.nextDouble();
-                    d2 = (double)pos.getZ() + rand.nextDouble() * 0.10000000149011612D;
-                    worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-                }
-            }
-
-            if (Blocks.fire.canCatchFire(worldIn, pos.south()))
-            {
-                for (i = 0; i < 2; ++i)
-                {
-                    d0 = (double)pos.getX() + rand.nextDouble();
-                    d1 = (double)pos.getY() + rand.nextDouble();
-                    d2 = (double)(pos.getZ() + 1) - rand.nextDouble() * 0.10000000149011612D;
-                    worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-                }
-            }
-
-            if (Blocks.fire.canCatchFire(worldIn, pos.up()))
-            {
-                for (i = 0; i < 2; ++i)
-                {
-                    d0 = (double)pos.getX() + rand.nextDouble();
-                    d1 = (double)(pos.getY() + 1) - rand.nextDouble() * 0.10000000149011612D;
-                    d2 = (double)pos.getZ() + rand.nextDouble();
-                    worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-                }
-            }
-        }
-        else
-        {
-            for (i = 0; i < 3; ++i)
-            {
-                d0 = (double)pos.getX() + rand.nextDouble();
-                d1 = (double)pos.getY() + rand.nextDouble() * 0.5D + 0.5D;
-                d2 = (double)pos.getZ() + rand.nextDouble();
-                worldIn.spawnParticle(EnumParticleTypes.SMOKE_LARGE, d0, d1, d2, 0.0D, 0.0D, 0.0D, new int[0]);
-            }
-        }
-    }
-
     public MapColor getMapColor(IBlockState state)
     {
         return MapColor.tntColor;
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
-
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(AGE, Integer.valueOf(meta));
     }
 
@@ -488,6 +437,16 @@
 
     protected BlockState createBlockState()
     {
         return new BlockState(this, new IProperty[] {AGE, NORTH, EAST, SOUTH, WEST, UPPER, FLIP, ALT});
     }
+
+    // CraftBukkit start
+    private void fireExtinguished(World world, BlockPos position)
+    {
+        if (!CraftEventFactory.callBlockFadeEvent(world.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ()), Blocks.air).isCancelled())
+        {
+            world.setBlockToAir(position);
+        }
+    }
+    // CraftBukkit end
 }
