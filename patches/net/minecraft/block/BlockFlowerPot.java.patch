--- decompiled\net\minecraft\block\BlockFlowerPot.java
+++ src\main\java\net\minecraft\block\BlockFlowerPot.java
@@ -1,8 +1,9 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.properties.PropertyInteger;
 import net.minecraft.block.state.BlockState;
@@ -15,19 +16,18 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityFlowerPot;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.util.IStringSerializable;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class BlockFlowerPot extends BlockContainer
 {
+
     public static final PropertyInteger LEGACY_DATA = PropertyInteger.create("legacy_data", 0, 15);
     public static final PropertyEnum CONTENTS = PropertyEnum.create("contents", BlockFlowerPot.EnumFlowerType.class);
     private static final String __OBFID = "CL_00000247";
 
     public BlockFlowerPot()
@@ -57,28 +57,10 @@
     public boolean isFullCube()
     {
         return false;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int colorMultiplier(IBlockAccess worldIn, BlockPos pos, int renderPass)
-    {
-        TileEntity tileentity = worldIn.getTileEntity(pos);
-
-        if (tileentity instanceof TileEntityFlowerPot)
-        {
-            Item item = ((TileEntityFlowerPot)tileentity).getFlowerPotItem();
-
-            if (item instanceof ItemBlock)
-            {
-                return Block.getBlockFromItem(item).colorMultiplier(worldIn, pos, renderPass);
-            }
-        }
-
-        return 16777215;
-    }
-
     public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumFacing side, float hitX, float hitY, float hitZ)
     {
         ItemStack itemstack = playerIn.inventory.getCurrentItem();
 
         if (itemstack != null && itemstack.getItem() instanceof ItemBlock)
@@ -125,29 +107,16 @@
     private boolean canNotContain(Block blockIn, int meta)
     {
         return blockIn != Blocks.yellow_flower && blockIn != Blocks.red_flower && blockIn != Blocks.cactus && blockIn != Blocks.brown_mushroom && blockIn != Blocks.red_mushroom && blockIn != Blocks.sapling && blockIn != Blocks.deadbush ? blockIn == Blocks.tallgrass && meta == BlockTallGrass.EnumType.FERN.getMeta() : true;
     }
 
-    @SideOnly(Side.CLIENT)
-    public Item getItem(World worldIn, BlockPos pos)
-    {
-        TileEntityFlowerPot tileentityflowerpot = this.getTileEntity(worldIn, pos);
-        return tileentityflowerpot != null && tileentityflowerpot.getFlowerPotItem() != null ? tileentityflowerpot.getFlowerPotItem() : Items.flower_pot;
-    }
-
     public int getDamageValue(World worldIn, BlockPos pos)
     {
         TileEntityFlowerPot tileentityflowerpot = this.getTileEntity(worldIn, pos);
         return tileentityflowerpot != null && tileentityflowerpot.getFlowerPotItem() != null ? tileentityflowerpot.getFlowerPotData() : 0;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean isFlowerPot()
-    {
-        return true;
-    }
-
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
     {
         return super.canPlaceBlockAt(worldIn, pos) && World.doesBlockHaveSolidTopSurface(worldIn, pos.down());
     }
 
@@ -165,10 +134,11 @@
         TileEntityFlowerPot tileentityflowerpot = this.getTileEntity(worldIn, pos);
 
         if (tileentityflowerpot != null && tileentityflowerpot.getFlowerPotItem() != null)
         {
             spawnAsEntity(worldIn, pos, new ItemStack(tileentityflowerpot.getFlowerPotItem(), 1, tileentityflowerpot.getFlowerPotData()));
+            tileentityflowerpot.setFlowerPotData(null, 0); // Spigot
         }
 
         super.breakBlock(worldIn, pos, state);
     }
 
@@ -380,16 +350,10 @@
         }
 
         return state.withProperty(CONTENTS, enumflowertype);
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
-
     public static enum EnumFlowerType implements IStringSerializable
     {
         EMPTY("empty"),
         POPPY("rose"),
         BLUE_ORCHID("blue_orchid"),
@@ -432,10 +396,11 @@
         }
     }
 
     static final class SwitchEnumType
         {
+
             static final int[] WOOD_TYPE_LOOKUP;
 
             static final int[] FLOWER_TYPE_LOOKUP = new int[BlockFlower.EnumFlowerType.values().length];
             private static final String __OBFID = "CL_00002116";
 
