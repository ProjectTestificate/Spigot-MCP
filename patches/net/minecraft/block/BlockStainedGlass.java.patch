--- decompiled\net\minecraft\block\BlockStainedGlass.java
+++ src\main\java\net\minecraft\block\BlockStainedGlass.java
@@ -1,27 +1,24 @@
 package net.minecraft.block;
 
-import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockState;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.item.EnumDyeColor;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class BlockStainedGlass extends BlockBreakable
 {
+
     public static final PropertyEnum COLOR = PropertyEnum.create("color", EnumDyeColor.class);
     private static final String __OBFID = "CL_00000312";
 
     public BlockStainedGlass(Material p_i45427_1_)
     {
@@ -33,40 +30,21 @@
     public int damageDropped(IBlockState state)
     {
         return ((EnumDyeColor)state.getValue(COLOR)).getMetadata();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubBlocks(Item itemIn, CreativeTabs tab, List list)
-    {
-        EnumDyeColor[] aenumdyecolor = EnumDyeColor.values();
-        int i = aenumdyecolor.length;
-
-        for (int j = 0; j < i; ++j)
-        {
-            EnumDyeColor enumdyecolor = aenumdyecolor[j];
-            list.add(new ItemStack(itemIn, 1, enumdyecolor.getMetadata()));
-        }
-    }
-
     public MapColor getMapColor(IBlockState state)
     {
         return ((EnumDyeColor)state.getValue(COLOR)).getMapColor();
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.TRANSLUCENT;
-    }
-
     public int quantityDropped(Random random)
     {
         return 0;
     }
 
-    protected boolean canSilkHarvest()
+    public boolean canSilkHarvest()   // SpigotMCP -- Make public as bukkit assumes in the same package
     {
         return true;
     }
 
     public boolean isFullCube()
