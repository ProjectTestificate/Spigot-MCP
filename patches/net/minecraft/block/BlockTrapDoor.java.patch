--- decompiled\net\minecraft\block\BlockTrapDoor.java
+++ src\main\java\net\minecraft\block\BlockTrapDoor.java
@@ -12,21 +12,21 @@
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.util.IStringSerializable;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.block.BlockRedstoneEvent;
+
 public class BlockTrapDoor extends Block
 {
+
     public static final PropertyDirection FACING = PropertyDirection.create("facing", EnumFacing.Plane.HORIZONTAL);
     public static final PropertyBool OPEN = PropertyBool.create("open");
     public static final PropertyEnum HALF = PropertyEnum.create("half", BlockTrapDoor.DoorHalf.class);
     private static final String __OBFID = "CL_00000327";
 
@@ -53,17 +53,10 @@
     public boolean isPassable(IBlockAccess worldIn, BlockPos pos)
     {
         return !((Boolean)worldIn.getBlockState(pos).getValue(OPEN)).booleanValue();
     }
 
-    @SideOnly(Side.CLIENT)
-    public AxisAlignedBB getSelectedBoundingBox(World worldIn, BlockPos pos)
-    {
-        this.setBlockBoundsBasedOnState(worldIn, pos);
-        return super.getSelectedBoundingBox(worldIn, pos);
-    }
-
     public AxisAlignedBB getCollisionBoundingBox(World worldIn, BlockPos pos, IBlockState state)
     {
         this.setBlockBoundsBasedOnState(worldIn, pos);
         return super.getCollisionBoundingBox(worldIn, pos, state);
     }
@@ -152,10 +145,24 @@
             {
                 boolean flag = worldIn.isBlockPowered(pos);
 
                 if (flag || neighborBlock.canProvidePower())
                 {
+                    // CraftBukkit start
+                    org.bukkit.World bworld = worldIn.getWorld();
+                    org.bukkit.block.Block bblock = bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+                    int power = bblock.getBlockPower();
+                    int oldPower = (Boolean)state.getValue(OPEN) ? 15 : 0;
+
+                    if (oldPower == 0 ^ power == 0 || neighborBlock.canProvidePower())
+                    {
+                        BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bblock, oldPower, power);
+                        worldIn.getServer().getPluginManager().callEvent(eventRedstone);
+                        flag = eventRedstone.getNewCurrent() > 0;
+                    }
+
+                    // CraftBukkit end
                     boolean flag1 = ((Boolean)state.getValue(OPEN)).booleanValue();
 
                     if (flag1 != flag)
                     {
                         worldIn.setBlockState(pos, state.withProperty(OPEN, Boolean.valueOf(flag)), 2);
@@ -225,16 +232,10 @@
     private static boolean isValidSupportBlock(Block blockIn)
     {
         return blockIn.blockMaterial.isOpaque() && blockIn.isFullCube() || blockIn == Blocks.glowstone || blockIn instanceof BlockSlab || blockIn instanceof BlockStairs;
     }
 
-    @SideOnly(Side.CLIENT)
-    public EnumWorldBlockLayer getBlockLayer()
-    {
-        return EnumWorldBlockLayer.CUTOUT;
-    }
-
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(FACING, getFacing(meta)).withProperty(OPEN, Boolean.valueOf((meta & 4) != 0)).withProperty(HALF, (meta & 8) == 0 ? BlockTrapDoor.DoorHalf.BOTTOM : BlockTrapDoor.DoorHalf.TOP);
     }
 
@@ -285,10 +286,11 @@
         }
     }
 
     static final class SwitchEnumFacing
         {
+
             static final int[] FACING_LOOKUP = new int[EnumFacing.values().length];
             private static final String __OBFID = "CL_00002052";
 
             static
             {
