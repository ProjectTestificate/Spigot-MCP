--- decompiled\net\minecraft\block\BlockPumpkin.java
+++ src\main\java\net\minecraft\block\BlockPumpkin.java
@@ -16,12 +16,17 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
+import org.bukkit.event.block.BlockRedstoneEvent;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+
 public class BlockPumpkin extends BlockDirectional
 {
+
     private BlockPattern snowmanBasePattern;
     private BlockPattern snowmanPattern;
     private BlockPattern golemBasePattern;
     private BlockPattern golemPattern;
     private static final String __OBFID = "CL_00000291";
@@ -51,31 +56,44 @@
         int i;
         int j;
 
         if ((patternhelper = this.getSnowmanPattern().match(worldIn, pos)) != null)
         {
+            BlockStateListPopulator blockList = new BlockStateListPopulator(worldIn.getWorld()); // CraftBukkit - Use BlockStateListPopulator
+
             for (i = 0; i < this.getSnowmanPattern().getThumbLength(); ++i)
             {
                 BlockWorldState blockworldstate = patternhelper.translateOffset(0, i, 0);
-                worldIn.setBlockState(blockworldstate.getPos(), Blocks.air.getDefaultState(), 2);
+                // CraftBukkit start
+                // worldIn.setBlockState(blockworldstate.getPos(), Blocks.air.getDefaultState(), 2);
+                BlockPos pos2 = blockworldstate.getPos();
+                blockList.setTypeId(pos2.getX(), pos2.getY(), pos2.getZ(), 0);
+                // CraftBukkit end
             }
 
             EntitySnowman entitysnowman = new EntitySnowman(worldIn);
             BlockPos blockpos2 = patternhelper.translateOffset(0, 2, 0).getPos();
             entitysnowman.setLocationAndAngles((double)blockpos2.getX() + 0.5D, (double)blockpos2.getY() + 0.05D, (double)blockpos2.getZ() + 0.5D, 0.0F, 0.0F);
-            worldIn.spawnEntityInWorld(entitysnowman);
 
-            for (j = 0; j < 120; ++j)
+            // CraftBukkit start
+            if (worldIn.addEntity(entitysnowman, CreatureSpawnEvent.SpawnReason.BUILD_SNOWMAN))
             {
-                worldIn.spawnParticle(EnumParticleTypes.SNOW_SHOVEL, (double)blockpos2.getX() + worldIn.rand.nextDouble(), (double)blockpos2.getY() + worldIn.rand.nextDouble() * 2.5D, (double)blockpos2.getZ() + worldIn.rand.nextDouble(), 0.0D, 0.0D, 0.0D, new int[0]);
-            }
+                blockList.updateList();
 
-            for (j = 0; j < this.getSnowmanPattern().getThumbLength(); ++j)
-            {
-                BlockWorldState blockworldstate1 = patternhelper.translateOffset(0, j, 0);
-                worldIn.notifyNeighborsRespectDebug(blockworldstate1.getPos(), Blocks.air);
+                for (j = 0; j < 120; ++j)
+                {
+                    worldIn.spawnParticle(EnumParticleTypes.SNOW_SHOVEL, (double)blockpos2.getX() + worldIn.rand.nextDouble(), (double)blockpos2.getY() + worldIn.rand.nextDouble() * 2.5D, (double)blockpos2.getZ() + worldIn.rand.nextDouble(), 0.0D, 0.0D, 0.0D, new int[0]);
+                }
+
+                for (j = 0; j < this.getSnowmanPattern().getThumbLength(); ++j)
+                {
+                    BlockWorldState shapedetectorblock1 = patternhelper.translateOffset(0, j, 0);
+                    worldIn.notifyNeighborsRespectDebug(shapedetectorblock1.getPos(), Blocks.air);
+                }
             }
+
+            // CraftBukkit end
         }
         else if ((patternhelper = this.getGolemPattern().match(worldIn, pos)) != null)
         {
             for (i = 0; i < this.getGolemPattern().getPalmLength(); ++i)
             {
@@ -105,10 +123,24 @@
                 }
             }
         }
     }
 
+    // CraftBukkit start
+    @Override
+    public void onNeighborBlockChange(World world, BlockPos position, IBlockState data, Block block)
+    {
+        if (block != null && block.canProvidePower())
+        {
+            org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ());
+            int power = bukkitBlock.getBlockPower();
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bukkitBlock, power, power);
+            world.getServer().getPluginManager().callEvent(eventRedstone);
+        }
+    }
+    // CraftBukkit end
+
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
     {
         return worldIn.getBlockState(pos).getBlock().blockMaterial.isReplaceable() && World.doesBlockHaveSolidTopSurface(worldIn, pos.down());
     }
 
