--- decompiled\net\minecraft\util\FoodStats.java
+++ src\main\java\net\minecraft\util\FoodStats.java
@@ -1,33 +1,62 @@
 package net.minecraft.util;
 
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.item.ItemFood;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.network.play.server.S06PacketUpdateHealth;
 import net.minecraft.world.EnumDifficulty;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.event.entity.FoodLevelChangeEvent;
+
 public class FoodStats
 {
-    private int foodLevel = 20;
-    private float foodSaturationLevel = 5.0F;
-    private float foodExhaustionLevel;
+
+    public int foodLevel = 20; // SpigotMCP -- Apply access transform
+    public float foodSaturationLevel = 5.0F; // SpigotMCP -- Apply access transform
+    public float foodExhaustionLevel; // SpigotMCP -- Apply access transform
     private int foodTimer;
+    private EntityPlayer entityhuman; // CraftBukkit
     private int prevFoodLevel = 20;
     private static final String __OBFID = "CL_00001729";
 
+    public FoodStats()
+    {
+        throw new AssertionError("Whoopsie, we missed the bukkit.");
+    } // CraftBukkit - throw an error
+
+    // CraftBukkit start - added EntityHuman constructor
+    public FoodStats(EntityPlayer entityhuman)
+    {
+        org.apache.commons.lang.Validate.notNull(entityhuman);
+        this.entityhuman = entityhuman;
+    }
+    // CraftBukkit end
+
     public void addStats(int foodLevelIn, float foodSaturationModifier)
     {
         this.foodLevel = Math.min(foodLevelIn + this.foodLevel, 20);
         this.foodSaturationLevel = Math.min(this.foodSaturationLevel + (float)foodLevelIn * foodSaturationModifier * 2.0F, (float)this.foodLevel);
     }
 
     public void addStats(ItemFood p_151686_1_, ItemStack p_151686_2_)
     {
-        this.addStats(p_151686_1_.getHealAmount(p_151686_2_), p_151686_1_.getSaturationModifier(p_151686_2_));
+        // CraftBukkit start
+        int oldFoodLevel = foodLevel;
+        FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, p_151686_1_.getHealAmount(p_151686_2_) + oldFoodLevel);
+
+        if (!event.isCancelled())
+        {
+            this.addStats(event.getFoodLevel() - oldFoodLevel, p_151686_1_.getSaturationModifier(p_151686_2_));
+        }
+
+        ((EntityPlayerMP)entityhuman).playerNetServerHandler.sendPacket(new S06PacketUpdateHealth(((EntityPlayerMP)entityhuman).getBukkitEntity().getScaledHealth(), entityhuman.getFoodStats().foodLevel, entityhuman.getFoodStats().foodSaturationLevel));
+        // CraftBukkit end
     }
 
     public void onUpdate(EntityPlayer player)
     {
         EnumDifficulty enumdifficulty = player.worldObj.getDifficulty();
@@ -41,22 +70,32 @@
             {
                 this.foodSaturationLevel = Math.max(this.foodSaturationLevel - 1.0F, 0.0F);
             }
             else if (enumdifficulty != EnumDifficulty.PEACEFUL)
             {
-                this.foodLevel = Math.max(this.foodLevel - 1, 0);
+                // CraftBukkit start
+                FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, Math.max(this.foodLevel - 1, 0));
+
+                if (!event.isCancelled())
+                {
+                    this.foodLevel = event.getFoodLevel();
+                }
+
+                ((EntityPlayerMP)entityhuman).playerNetServerHandler.sendPacket(new S06PacketUpdateHealth(((EntityPlayerMP)entityhuman).getBukkitEntity().getScaledHealth(), this.foodLevel, this.foodSaturationLevel));
+                // CraftBukkit end
             }
         }
 
         if (player.worldObj.getGameRules().getGameRuleBooleanValue("naturalRegeneration") && this.foodLevel >= 18 && player.shouldHeal())
         {
             ++this.foodTimer;
 
             if (this.foodTimer >= 80)
             {
-                player.heal(1.0F);
-                this.addExhaustion(3.0F);
+                // CraftBukkit - added RegainReason
+                player.heal(1.0F, RegainReason.SATIATED);
+                this.addExhaustion(entityhuman.worldObj.spigotConfig.regenExhaustion);  // Spigot - Change to use configurable value
                 this.foodTimer = 0;
             }
         }
         else if (this.foodLevel <= 0)
         {
@@ -100,16 +139,10 @@
     public int getFoodLevel()
     {
         return this.foodLevel;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getPrevFoodLevel()
-    {
-        return this.prevFoodLevel;
-    }
-
     public boolean needFood()
     {
         return this.foodLevel < 20;
     }
 
@@ -125,12 +158,6 @@
 
     public void setFoodLevel(int foodLevelIn)
     {
         this.foodLevel = foodLevelIn;
     }
-
-    @SideOnly(Side.CLIENT)
-    public void setFoodSaturationLevel(float foodSaturationLevelIn)
-    {
-        this.foodSaturationLevel = foodSaturationLevelIn;
-    }
 }
