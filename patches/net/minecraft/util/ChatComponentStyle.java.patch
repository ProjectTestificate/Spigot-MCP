---a/net/minecraft/util/ChatComponentStyle.java
+++b/net/minecraft/util/ChatComponentStyle.java
@@ -1,57 +1,52 @@
 package net.minecraft.util;
 
+import java.util.Iterator;
+import java.util.List;
+
 import com.google.common.base.Function;
 import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
-import java.util.Iterator;
-import java.util.List;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public abstract class ChatComponentStyle implements IChatComponent
-{
+public abstract class ChatComponentStyle implements IChatComponent {
+
     protected List siblings = Lists.newArrayList();
     private ChatStyle style;
     private static final String __OBFID = "CL_00001257";
 
-    public IChatComponent appendSibling(IChatComponent component)
-    {
+    public IChatComponent appendSibling(IChatComponent component) {
         component.getChatStyle().setParentStyle(this.getChatStyle());
         this.siblings.add(component);
         return this;
     }
 
-    public List getSiblings()
-    {
+    public List getSiblings() {
         return this.siblings;
     }
 
-    public IChatComponent appendText(String text)
-    {
+    public IChatComponent appendText(String text) {
         return this.appendSibling(new ChatComponentText(text));
     }
 
-    public IChatComponent setChatStyle(ChatStyle style)
-    {
+    public IChatComponent setChatStyle(ChatStyle style) {
         this.style = style;
         Iterator iterator = this.siblings.iterator();
 
-        while (iterator.hasNext())
-        {
-            IChatComponent ichatcomponent = (IChatComponent)iterator.next();
+        while (iterator.hasNext()) {
+            IChatComponent ichatcomponent = (IChatComponent) iterator.next();
             ichatcomponent.getChatStyle().setParentStyle(this.getChatStyle());
         }
 
         return this;
     }
 
-    public ChatStyle getChatStyle()
-    {
-        if (this.style == null)
-        {
+    public ChatStyle getChatStyle() {
+        if (this.style == null) {
             this.style = new ChatStyle();
             Iterator iterator = this.siblings.iterator();
 
-            while (iterator.hasNext())
-            {
-                IChatComponent ichatcomponent = (IChatComponent)iterator.next();
+            while (iterator.hasNext()) {
+                IChatComponent ichatcomponent = (IChatComponent) iterator.next();
                 ichatcomponent.getChatStyle().setParentStyle(this.style);
             }
         }
@@ -62,99 +62,69 @@
         return this.style;
     }
 
-    public Iterator iterator()
-    {
-        return Iterators.concat(Iterators.forArray(new ChatComponentStyle[] {this}), createDeepCopyIterator(this.siblings));
+    public Iterator iterator() {
+        return Iterators.concat(Iterators.forArray(new ChatComponentStyle[]{this}), createDeepCopyIterator(this.siblings));
     }
 
-    public final String getUnformattedText()
-    {
+    public final String getUnformattedText() {
         StringBuilder stringbuilder = new StringBuilder();
         Iterator iterator = this.iterator();
 
-        while (iterator.hasNext())
-        {
-            IChatComponent ichatcomponent = (IChatComponent)iterator.next();
+        while (iterator.hasNext()) {
+            IChatComponent ichatcomponent = (IChatComponent) iterator.next();
             stringbuilder.append(ichatcomponent.getUnformattedTextForChat());
         }
 
         return stringbuilder.toString();
     }
 
-    @SideOnly(Side.CLIENT)
-    public final String getFormattedText()
-    {
-        StringBuilder stringbuilder = new StringBuilder();
-        Iterator iterator = this.iterator();
+    public static Iterator createDeepCopyIterator(Iterable components) {
+        Iterator iterator = Iterators.concat(Iterators.transform(components.iterator(), new Function() {
 
-        while (iterator.hasNext())
-        {
-            IChatComponent ichatcomponent = (IChatComponent)iterator.next();
-            stringbuilder.append(ichatcomponent.getChatStyle().getFormattingCode());
-            stringbuilder.append(ichatcomponent.getUnformattedTextForChat());
-            stringbuilder.append(EnumChatFormatting.RESET);
-        }
-
-        return stringbuilder.toString();
-    }
-
-    public static Iterator createDeepCopyIterator(Iterable components)
-    {
-        Iterator iterator = Iterators.concat(Iterators.transform(components.iterator(), new Function()
-        {
             private static final String __OBFID = "CL_00001258";
-            public Iterator apply(IChatComponent p_apply_1_)
-            {
+
+            public Iterator apply(IChatComponent p_apply_1_) {
                 return p_apply_1_.iterator();
             }
-            public Object apply(Object p_apply_1_)
-            {
-                return this.apply((IChatComponent)p_apply_1_);
+
+            public Object apply(Object p_apply_1_) {
+                return this.apply((IChatComponent) p_apply_1_);
             }
         }));
-        iterator = Iterators.transform(iterator, new Function()
-        {
+        iterator = Iterators.transform(iterator, new Function() {
+
             private static final String __OBFID = "CL_00001259";
-            public IChatComponent apply(IChatComponent p_apply_1_)
-            {
+
+            public IChatComponent apply(IChatComponent p_apply_1_) {
                 IChatComponent ichatcomponent1 = p_apply_1_.createCopy();
                 ichatcomponent1.setChatStyle(ichatcomponent1.getChatStyle().createDeepCopy());
                 return ichatcomponent1;
             }
-            public Object apply(Object p_apply_1_)
-            {
-                return this.apply((IChatComponent)p_apply_1_);
+
+            public Object apply(Object p_apply_1_) {
+                return this.apply((IChatComponent) p_apply_1_);
             }
         });
         return iterator;
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        if (this == p_equals_1_)
-        {
+    public boolean equals(Object p_equals_1_) {
+        if (this == p_equals_1_) {
             return true;
-        }
-        else if (!(p_equals_1_ instanceof ChatComponentStyle))
-        {
+        } else if (!(p_equals_1_ instanceof ChatComponentStyle)) {
             return false;
-        }
-        else
-        {
-            ChatComponentStyle chatcomponentstyle = (ChatComponentStyle)p_equals_1_;
+        } else {
+            ChatComponentStyle chatcomponentstyle = (ChatComponentStyle) p_equals_1_;
             return this.siblings.equals(chatcomponentstyle.siblings) && this.getChatStyle().equals(chatcomponentstyle.getChatStyle());
         }
     }
 
-    public int hashCode()
-    {
-        return 31 * this.style.hashCode() + this.siblings.hashCode();
+    public int hashCode() {
+        return 31 * this.getChatStyle().hashCode() + this.siblings.hashCode(); // CraftBukkit - fix null pointer
     }
 
-    public String toString()
-    {
+    public String toString() {
         return "BaseComponent{style=" + this.style + ", siblings=" + this.siblings + '}';
     }
-}
+}
