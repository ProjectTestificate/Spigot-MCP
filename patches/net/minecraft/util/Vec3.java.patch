--- decompiled\net\minecraft\util\Vec3.java
+++ src\main\java\net\minecraft\util\Vec3.java
@@ -1,12 +1,11 @@
 package net.minecraft.util;
 
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
 public class Vec3
 {
+
     public final double xCoord;
     public final double yCoord;
     public final double zCoord;
     private static final String __OBFID = "CL_00000612";
 
@@ -30,16 +29,10 @@
         this.xCoord = x;
         this.yCoord = y;
         this.zCoord = z;
     }
 
-    @SideOnly(Side.CLIENT)
-    public Vec3 subtractReverse(Vec3 vec)
-    {
-        return new Vec3(vec.xCoord - this.xCoord, vec.yCoord - this.yCoord, vec.zCoord - this.zCoord);
-    }
-
     public Vec3 normalize()
     {
         double d0 = (double)MathHelper.sqrt_double(this.xCoord * this.xCoord + this.yCoord * this.yCoord + this.zCoord * this.zCoord);
         return d0 < 1.0E-4D ? new Vec3(0.0D, 0.0D, 0.0D) : new Vec3(this.xCoord / d0, this.yCoord / d0, this.zCoord / d0);
     }
@@ -47,16 +40,10 @@
     public double dotProduct(Vec3 vec)
     {
         return this.xCoord * vec.xCoord + this.yCoord * vec.yCoord + this.zCoord * vec.zCoord;
     }
 
-    @SideOnly(Side.CLIENT)
-    public Vec3 crossProduct(Vec3 vec)
-    {
-        return new Vec3(this.yCoord * vec.zCoord - this.zCoord * vec.yCoord, this.zCoord * vec.xCoord - this.xCoord * vec.zCoord, this.xCoord * vec.yCoord - this.yCoord * vec.xCoord);
-    }
-
     public Vec3 subtract(Vec3 vec)
     {
         return this.subtract(vec.xCoord, vec.yCoord, vec.zCoord);
     }
 
