---a/net/minecraft/util/EnumChatFormatting.java
+++b/net/minecraft/util/EnumChatFormatting.java
@@ -1,16 +1,10 @@
 package net.minecraft.util;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Map;
 import java.util.regex.Pattern;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public enum EnumChatFormatting
-{
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+
+public enum EnumChatFormatting {
     BLACK("BLACK", '0', 0),
     DARK_BLUE("DARK_BLUE", '1', 1),
     DARK_GREEN("DARK_GREEN", '2', 2),
@@ -43,23 +43,19 @@
 
     private static final String __OBFID = "CL_00000342";
 
-    private static String func_175745_c(String p_175745_0_)
-    {
+    private static String func_175745_c(String p_175745_0_) {
         return p_175745_0_.toLowerCase().replaceAll("[^a-z]", "");
     }
 
-    private EnumChatFormatting(String formattingName, char formattingCodeIn, int colorIndex)
-    {
+    private EnumChatFormatting(String formattingName, char formattingCodeIn, int colorIndex) {
         this(formattingName, formattingCodeIn, false, colorIndex);
     }
 
-    private EnumChatFormatting(String formattingName, char formattingCodeIn, boolean fancyStylingIn)
-    {
+    private EnumChatFormatting(String formattingName, char formattingCodeIn, boolean fancyStylingIn) {
         this(formattingName, formattingCodeIn, fancyStylingIn, -1);
     }
 
-    private EnumChatFormatting(String formattingName, char formattingCodeIn, boolean fancyStylingIn, int colorIndex)
-    {
+    private EnumChatFormatting(String formattingName, char formattingCodeIn, boolean fancyStylingIn, int colorIndex) {
         this.name = formattingName;
         this.formattingCode = formattingCodeIn;
         this.fancyStyling = fancyStylingIn;
@@ -67,59 +67,41 @@
         this.controlString = "\u00a7" + formattingCodeIn;
     }
 
-    public int getColorIndex()
-    {
+    public int getColorIndex() {
         return this.colorIndex;
     }
 
-    public boolean isFancyStyling()
-    {
+    public boolean isFancyStyling() {
         return this.fancyStyling;
     }
 
-    public boolean isColor()
-    {
+    public boolean isColor() {
         return !this.fancyStyling && this != RESET;
     }
 
-    public String getFriendlyName()
-    {
+    public String getFriendlyName() {
         return this.name().toLowerCase();
     }
 
-    public String toString()
-    {
+    public String toString() {
         return this.controlString;
     }
 
-    @SideOnly(Side.CLIENT)
-    public static String getTextWithoutFormattingCodes(String text)
-    {
-        return text == null ? null : formattingCodePattern.matcher(text).replaceAll("");
+    public static EnumChatFormatting getValueByName(String friendlyName) {
+        return friendlyName == null ? null : (EnumChatFormatting) nameMapping.get(func_175745_c(friendlyName));
     }
 
-    public static EnumChatFormatting getValueByName(String friendlyName)
-    {
-        return friendlyName == null ? null : (EnumChatFormatting)nameMapping.get(func_175745_c(friendlyName));
-    }
-
-    public static EnumChatFormatting func_175744_a(int p_175744_0_)
-    {
-        if (p_175744_0_ < 0)
-        {
+    public static EnumChatFormatting func_175744_a(int p_175744_0_) {
+        if (p_175744_0_ < 0) {
             return RESET;
-        }
-        else
-        {
+        } else {
             EnumChatFormatting[] aenumchatformatting = values();
             int j = aenumchatformatting.length;
 
-            for (int k = 0; k < j; ++k)
-            {
+            for (int k = 0; k < j; ++k) {
                 EnumChatFormatting enumchatformatting = aenumchatformatting[k];
 
-                if (enumchatformatting.getColorIndex() == p_175744_0_)
-                {
+                if (enumchatformatting.getColorIndex() == p_175744_0_) {
                     return enumchatformatting;
                 }
             }
@@ -128,18 +128,15 @@
         }
     }
 
-    public static Collection getValidValues(boolean p_96296_0_, boolean p_96296_1_)
-    {
+    public static Collection getValidValues(boolean p_96296_0_, boolean p_96296_1_) {
         ArrayList arraylist = Lists.newArrayList();
         EnumChatFormatting[] aenumchatformatting = values();
         int i = aenumchatformatting.length;
 
-        for (int j = 0; j < i; ++j)
-        {
+        for (int j = 0; j < i; ++j) {
             EnumChatFormatting enumchatformatting = aenumchatformatting[j];
 
-            if ((!enumchatformatting.isColor() || p_96296_0_) && (!enumchatformatting.isFancyStyling() || p_96296_1_))
-            {
+            if ((!enumchatformatting.isColor() || p_96296_0_) && (!enumchatformatting.isFancyStyling() || p_96296_1_)) {
                 arraylist.add(enumchatformatting.getFriendlyName());
             }
         }
@@ -147,16 +147,13 @@
         return arraylist;
     }
 
-    static
-    {
+    static {
         EnumChatFormatting[] var0 = values();
         int var1 = var0.length;
 
-        for (int var2 = 0; var2 < var1; ++var2)
-        {
+        for (int var2 = 0; var2 < var1; ++var2) {
             EnumChatFormatting var3 = var0[var2];
             nameMapping.put(func_175745_c(var3.name), var3);
         }
     }
-}
+}
