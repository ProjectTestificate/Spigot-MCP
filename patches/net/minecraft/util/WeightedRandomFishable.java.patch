--- decompiled\net\minecraft\util\WeightedRandomFishable.java
+++ src\main\java\net\minecraft\util\WeightedRandomFishable.java
@@ -1,61 +1,54 @@
 package net.minecraft.util;
 
 import java.util.Random;
+
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.item.ItemStack;
 
-public class WeightedRandomFishable extends WeightedRandom.Item
-{
+public class WeightedRandomFishable extends WeightedRandom.Item {
+
     private final ItemStack returnStack;
     private float maxDamagePercent;
     private boolean enchantable;
     private static final String __OBFID = "CL_00001664";
 
-    public WeightedRandomFishable(ItemStack returnStackIn, int itemWeightIn)
-    {
+    public WeightedRandomFishable(ItemStack returnStackIn, int itemWeightIn) {
         super(itemWeightIn);
         this.returnStack = returnStackIn;
     }
 
-    public ItemStack getItemStack(Random random)
-    {
+    public ItemStack getItemStack(Random random) {
         ItemStack itemstack = this.returnStack.copy();
 
-        if (this.maxDamagePercent > 0.0F)
-        {
-            int i = (int)(this.maxDamagePercent * (float)this.returnStack.getMaxDamage());
+        if (this.maxDamagePercent > 0.0F) {
+            int i = (int) (this.maxDamagePercent * (float) this.returnStack.getMaxDamage());
             int j = itemstack.getMaxDamage() - random.nextInt(random.nextInt(i) + 1);
 
-            if (j > i)
-            {
+            if (j > i) {
                 j = i;
             }
 
-            if (j < 1)
-            {
+            if (j < 1) {
                 j = 1;
             }
 
             itemstack.setItemDamage(j);
         }
 
-        if (this.enchantable)
-        {
+        if (this.enchantable) {
             EnchantmentHelper.addRandomEnchantment(random, itemstack, 30);
         }
 
         return itemstack;
     }
 
-    public WeightedRandomFishable setMaxDamagePercent(float maxDamagePercentIn)
-    {
+    public WeightedRandomFishable setMaxDamagePercent(float maxDamagePercentIn) {
         this.maxDamagePercent = maxDamagePercentIn;
         return this;
     }
 
-    public WeightedRandomFishable setEnchantable()
-    {
+    public WeightedRandomFishable setEnchantable() {
         this.enchantable = true;
         return this;
     }
 }
