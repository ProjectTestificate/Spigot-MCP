--- decompiled\net\minecraft\stats\StatisticsFile.java
+++ src\main\java\net\minecraft\stats\StatisticsFile.java
@@ -1,35 +1,40 @@
 package net.minecraft.stats;
 
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonParser;
 import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.Constructor;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.play.server.S37PacketStatistics;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.IJsonSerializable;
 import net.minecraft.util.TupleIntJsonSerializable;
+
 import org.apache.commons.io.FileUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.spigotmc.SpigotConfig;
 
+import com.google.common.collect.Maps;
+import com.google.common.collect.Sets;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParseException;
+import com.google.gson.JsonParser;
+
 public class StatisticsFile extends StatFileWriter
 {
+
     private static final Logger logger = LogManager.getLogger();
     private final MinecraftServer mcServer;
     private final File statsFile;
     private final Set field_150888_e = Sets.newHashSet();
     private int field_150885_f = -300;
@@ -38,10 +43,20 @@
 
     public StatisticsFile(MinecraftServer serverIn, File statsFileIn)
     {
         this.mcServer = serverIn;
         this.statsFile = statsFileIn;
+
+        // Spigot start
+        for (String name : SpigotConfig.forcedStats.keySet())
+        {
+            TupleIntJsonSerializable wrapper = new TupleIntJsonSerializable();
+            wrapper.setIntegerValue(org.spigotmc.SpigotConfig.forcedStats.get(name));
+            statsData.put(StatList.getOneShotStat(name), wrapper);
+        }
+
+        // Spigot end
     }
 
     public void readStatFile()
     {
         if (this.statsFile.isFile())
@@ -62,10 +77,12 @@
         }
     }
 
     public void saveStatFile()
     {
+        if (org.spigotmc.SpigotConfig.disableStatSaving) return; // Spigot
+
         try
         {
             FileUtils.writeStringToFile(this.statsFile, dumpJson(this.statsData));
         }
         catch (IOException ioexception)
@@ -74,10 +91,12 @@
         }
     }
 
     public void func_150873_a(EntityPlayer p_150873_1_, StatBase p_150873_2_, int p_150873_3_)
     {
+        if (org.spigotmc.SpigotConfig.disableStatSaving) return; // Spigot
+
         int j = p_150873_2_.isAchievement() ? this.readStat(p_150873_2_) : 0;
         super.func_150873_a(p_150873_1_, p_150873_2_, p_150873_3_);
         this.field_150888_e.add(p_150873_2_);
 
         if (p_150873_2_.isAchievement() && j == 0 && p_150873_3_ > 0)
