--- decompiled\net\minecraft\creativetab\CreativeTabs.java
+++ src\main\java\net\minecraft\creativetab\CreativeTabs.java
@@ -1,323 +1,102 @@
 package net.minecraft.creativetab;
 
-import java.util.Iterator;
-import java.util.List;
-import net.minecraft.block.BlockDoublePlant;
-import net.minecraft.enchantment.Enchantment;
-import net.minecraft.enchantment.EnchantmentData;
 import net.minecraft.enchantment.EnumEnchantmentType;
-import net.minecraft.init.Blocks;
-import net.minecraft.init.Items;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemStack;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public abstract class CreativeTabs
-{
-    public static final CreativeTabs[] creativeTabArray = new CreativeTabs[12];
-    public static final CreativeTabs tabBlock = new CreativeTabs(0, "buildingBlocks")
-    {
+
+public abstract class CreativeTabs {
+
+    public static CreativeTabs[] creativeTabArray = new CreativeTabs[12];
+    public static final CreativeTabs tabBlock = new CreativeTabs(0, "buildingBlocks") {
+
         private static final String __OBFID = "CL_00000006";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Item.getItemFromBlock(Blocks.brick_block);
-        }
+
     };
-    public static final CreativeTabs tabDecorations = new CreativeTabs(1, "decorations")
-    {
+    public static final CreativeTabs tabDecorations = new CreativeTabs(1, "decorations") {
+
         private static final String __OBFID = "CL_00000010";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Item.getItemFromBlock(Blocks.double_plant);
-        }
-        @SideOnly(Side.CLIENT)
-        public int getIconItemDamage()
-        {
-            return BlockDoublePlant.EnumPlantType.PAEONIA.getMeta();
-        }
+
     };
-    public static final CreativeTabs tabRedstone = new CreativeTabs(2, "redstone")
-    {
+    public static final CreativeTabs tabRedstone = new CreativeTabs(2, "redstone") {
+
         private static final String __OBFID = "CL_00000011";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.redstone;
-        }
+
     };
-    public static final CreativeTabs tabTransport = new CreativeTabs(3, "transportation")
-    {
+    public static final CreativeTabs tabTransport = new CreativeTabs(3, "transportation") {
+
         private static final String __OBFID = "CL_00000012";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Item.getItemFromBlock(Blocks.golden_rail);
-        }
+
     };
-    public static final CreativeTabs tabMisc = (new CreativeTabs(4, "misc")
-    {
+    public static final CreativeTabs tabMisc = (new CreativeTabs(4, "misc") {
+
         private static final String __OBFID = "CL_00000014";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.lava_bucket;
-        }
-    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[] {EnumEnchantmentType.ALL});
-    public static final CreativeTabs tabAllSearch = (new CreativeTabs(5, "search")
-    {
+
+    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[]{EnumEnchantmentType.ALL});
+    public static final CreativeTabs tabAllSearch = (new CreativeTabs(5, "search") {
+
         private static final String __OBFID = "CL_00000015";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.compass;
-        }
+
     }).setBackgroundImageName("item_search.png");
-    public static final CreativeTabs tabFood = new CreativeTabs(6, "food")
-    {
+    public static final CreativeTabs tabFood = new CreativeTabs(6, "food") {
+
         private static final String __OBFID = "CL_00000016";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.apple;
-        }
+
     };
-    public static final CreativeTabs tabTools = (new CreativeTabs(7, "tools")
-    {
+    public static final CreativeTabs tabTools = (new CreativeTabs(7, "tools") {
+
         private static final String __OBFID = "CL_00000017";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.iron_axe;
-        }
-    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[] {EnumEnchantmentType.DIGGER, EnumEnchantmentType.FISHING_ROD, EnumEnchantmentType.BREAKABLE});
-    public static final CreativeTabs tabCombat = (new CreativeTabs(8, "combat")
-    {
+
+    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[]{EnumEnchantmentType.DIGGER, EnumEnchantmentType.FISHING_ROD, EnumEnchantmentType.BREAKABLE});
+    public static final CreativeTabs tabCombat = (new CreativeTabs(8, "combat") {
+
         private static final String __OBFID = "CL_00000018";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.golden_sword;
-        }
-    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[] {EnumEnchantmentType.ARMOR, EnumEnchantmentType.ARMOR_FEET, EnumEnchantmentType.ARMOR_HEAD, EnumEnchantmentType.ARMOR_LEGS, EnumEnchantmentType.ARMOR_TORSO, EnumEnchantmentType.BOW, EnumEnchantmentType.WEAPON});
-    public static final CreativeTabs tabBrewing = new CreativeTabs(9, "brewing")
-    {
+
+    }).setRelevantEnchantmentTypes(new EnumEnchantmentType[]{EnumEnchantmentType.ARMOR, EnumEnchantmentType.ARMOR_FEET, EnumEnchantmentType.ARMOR_HEAD, EnumEnchantmentType.ARMOR_LEGS, EnumEnchantmentType.ARMOR_TORSO, EnumEnchantmentType.BOW, EnumEnchantmentType.WEAPON});
+    public static final CreativeTabs tabBrewing = new CreativeTabs(9, "brewing") {
+
         private static final String __OBFID = "CL_00000007";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.potionitem;
-        }
+
     };
-    public static final CreativeTabs tabMaterials = new CreativeTabs(10, "materials")
-    {
+    public static final CreativeTabs tabMaterials = new CreativeTabs(10, "materials") {
+
         private static final String __OBFID = "CL_00000008";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Items.stick;
-        }
     };
-    public static final CreativeTabs tabInventory = (new CreativeTabs(11, "inventory")
-    {
+    public static final CreativeTabs tabInventory = (new CreativeTabs(11, "inventory") {
+
         private static final String __OBFID = "CL_00000009";
-        @SideOnly(Side.CLIENT)
-        public Item getTabIconItem()
-        {
-            return Item.getItemFromBlock(Blocks.chest);
-        }
+
     }).setBackgroundImageName("inventory.png").setNoScrollbar().setNoTitle();
     private final int tabIndex;
     private final String tabLabel;
     private String theTexture = "items.png";
     private boolean hasScrollbar = true;
     private boolean drawTitle = true;
     private EnumEnchantmentType[] enchantmentTypes;
-    @SideOnly(Side.CLIENT)
-    private ItemStack iconItemStack;
     private static final String __OBFID = "CL_00000005";
 
-    public CreativeTabs(int index, String label)
-    {
+    public CreativeTabs(int index, String label) {
         this.tabIndex = index;
         this.tabLabel = label;
         creativeTabArray[index] = this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getTabIndex()
-    {
-        return this.tabIndex;
-    }
 
-    public CreativeTabs setBackgroundImageName(String texture)
-    {
+    public CreativeTabs setBackgroundImageName(String texture) {
         this.theTexture = texture;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public String getTabLabel()
-    {
-        return this.tabLabel;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public String getTranslatedTabLabel()
-    {
-        return "itemGroup." + this.getTabLabel();
-    }
-
-    @SideOnly(Side.CLIENT)
-    public ItemStack getIconItemStack()
-    {
-        if (this.iconItemStack == null)
-        {
-            this.iconItemStack = new ItemStack(this.getTabIconItem(), 1, this.getIconItemDamage());
-        }
-
-        return this.iconItemStack;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public abstract Item getTabIconItem();
-
-    @SideOnly(Side.CLIENT)
-    public int getIconItemDamage()
-    {
-        return 0;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public String getBackgroundImageName()
-    {
-        return this.theTexture;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean drawInForegroundOfTab()
-    {
-        return this.drawTitle;
-    }
-
-    public CreativeTabs setNoTitle()
-    {
+    public CreativeTabs setNoTitle() {
         this.drawTitle = false;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean shouldHidePlayerInventory()
-    {
-        return this.hasScrollbar;
-    }
-
-    public CreativeTabs setNoScrollbar()
-    {
+    public CreativeTabs setNoScrollbar() {
         this.hasScrollbar = false;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getTabColumn()
-    {
-        return this.tabIndex % 6;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean isTabInFirstRow()
-    {
-        return this.tabIndex < 6;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public EnumEnchantmentType[] getRelevantEnchantmentTypes()
-    {
-        return this.enchantmentTypes;
-    }
-
-    public CreativeTabs setRelevantEnchantmentTypes(EnumEnchantmentType ... types)
-    {
+    public CreativeTabs setRelevantEnchantmentTypes(EnumEnchantmentType... types) {
         this.enchantmentTypes = types;
         return this;
     }
-
-    @SideOnly(Side.CLIENT)
-    public boolean hasRelevantEnchantmentType(EnumEnchantmentType enchantmentType)
-    {
-        if (this.enchantmentTypes == null)
-        {
-            return false;
-        }
-        else
-        {
-            EnumEnchantmentType[] aenumenchantmenttype = this.enchantmentTypes;
-            int i = aenumenchantmenttype.length;
-
-            for (int j = 0; j < i; ++j)
-            {
-                EnumEnchantmentType enumenchantmenttype1 = aenumenchantmenttype[j];
-
-                if (enumenchantmenttype1 == enchantmentType)
-                {
-                    return true;
-                }
-            }
-
-            return false;
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public void displayAllReleventItems(List p_78018_1_)
-    {
-        Iterator iterator = Item.itemRegistry.iterator();
-
-        while (iterator.hasNext())
-        {
-            Item item = (Item)iterator.next();
-
-            if (item != null && item.getCreativeTab() == this)
-            {
-                item.getSubItems(item, this, p_78018_1_);
-            }
-        }
-
-        if (this.getRelevantEnchantmentTypes() != null)
-        {
-            this.addEnchantmentBooksToList(p_78018_1_, this.getRelevantEnchantmentTypes());
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public void addEnchantmentBooksToList(List itemList, EnumEnchantmentType ... enchantmentType)
-    {
-        Enchantment[] aenchantment = Enchantment.enchantmentsBookList;
-        int i = aenchantment.length;
-
-        for (int j = 0; j < i; ++j)
-        {
-            Enchantment enchantment = aenchantment[j];
-
-            if (enchantment != null && enchantment.type != null)
-            {
-                boolean flag = false;
-
-                for (int k = 0; k < enchantmentType.length && !flag; ++k)
-                {
-                    if (enchantment.type == enchantmentType[k])
-                    {
-                        flag = true;
-                    }
-                }
-
-                if (flag)
-                {
-                    itemList.add(Items.enchanted_book.getEnchantedItemStack(new EnchantmentData(enchantment, enchantment.getMaxLevel())));
-                }
-            }
-        }
-    }
 }
