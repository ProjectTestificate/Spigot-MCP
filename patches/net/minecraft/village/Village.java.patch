---a/net/minecraft/village/Village.java
+++b/net/minecraft/village/Village.java
@@ -1,10 +1,8 @@
 package net.minecraft.village;
 
-import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
 import java.util.TreeMap;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockDoor;
 import net.minecraft.block.material.Material;
@@ -19,8 +19,12 @@
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
 
-public class Village
-{
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+
+import com.google.common.collect.Lists;
+
+public class Village {
+
     private World worldObj;
     private final List villageDoorInfoList = Lists.newArrayList();
     private BlockPos centerHelper;
@@ -35,16 +35,14 @@
     private int numIronGolems;
     private static final String __OBFID = "CL_00001631";
 
-    public Village()
-    {
+    public Village() {
         this.centerHelper = BlockPos.ORIGIN;
         this.center = BlockPos.ORIGIN;
         this.playerReputation = new TreeMap();
         this.villageAgressors = Lists.newArrayList();
     }
 
-    public Village(World worldIn)
-    {
+    public Village(World worldIn) {
         this.centerHelper = BlockPos.ORIGIN;
         this.center = BlockPos.ORIGIN;
         this.playerReputation = new TreeMap();
@@ -52,71 +52,57 @@
         this.worldObj = worldIn;
     }
 
-    public void setWorld(World worldIn)
-    {
+    public void setWorld(World worldIn) {
         this.worldObj = worldIn;
     }
 
-    public void tick(int p_75560_1_)
-    {
+    public void tick(int p_75560_1_) {
         this.tickCounter = p_75560_1_;
         this.removeDeadAndOutOfRangeDoors();
         this.removeDeadAndOldAgressors();
 
-        if (p_75560_1_ % 20 == 0)
-        {
+        if (p_75560_1_ % 20 == 0) {
             this.updateNumVillagers();
         }
 
-        if (p_75560_1_ % 30 == 0)
-        {
+        if (p_75560_1_ % 30 == 0) {
             this.updateNumIronGolems();
         }
 
         int j = this.numVillagers / 10;
 
-        if (this.numIronGolems < j && this.villageDoorInfoList.size() > 20 && this.worldObj.rand.nextInt(7000) == 0)
-        {
+        if (this.numIronGolems < j && this.villageDoorInfoList.size() > 20 && this.worldObj.rand.nextInt(7000) == 0) {
             Vec3 vec3 = this.func_179862_a(this.center, 2, 4, 2);
 
-            if (vec3 != null)
-            {
+            if (vec3 != null) {
                 EntityIronGolem entityirongolem = new EntityIronGolem(this.worldObj);
                 entityirongolem.setPosition(vec3.xCoord, vec3.yCoord, vec3.zCoord);
-                this.worldObj.spawnEntityInWorld(entityirongolem);
+                this.worldObj.addEntity(entityirongolem, SpawnReason.VILLAGE_DEFENSE); // CraftBukkit
                 ++this.numIronGolems;
             }
         }
     }
 
-    private Vec3 func_179862_a(BlockPos p_179862_1_, int p_179862_2_, int p_179862_3_, int p_179862_4_)
-    {
-        for (int l = 0; l < 10; ++l)
-        {
+    private Vec3 func_179862_a(BlockPos p_179862_1_, int p_179862_2_, int p_179862_3_, int p_179862_4_) {
+        for (int l = 0; l < 10; ++l) {
             BlockPos blockpos1 = p_179862_1_.add(this.worldObj.rand.nextInt(16) - 8, this.worldObj.rand.nextInt(6) - 3, this.worldObj.rand.nextInt(16) - 8);
 
-            if (this.func_179866_a(blockpos1) && this.func_179861_a(new BlockPos(p_179862_2_, p_179862_3_, p_179862_4_), blockpos1))
-            {
-                return new Vec3((double)blockpos1.getX(), (double)blockpos1.getY(), (double)blockpos1.getZ());
+            if (this.func_179866_a(blockpos1) && this.func_179861_a(new BlockPos(p_179862_2_, p_179862_3_, p_179862_4_), blockpos1)) {
+                return new Vec3((double) blockpos1.getX(), (double) blockpos1.getY(), (double) blockpos1.getZ());
             }
         }
 
         return null;
     }
 
-    private boolean func_179861_a(BlockPos p_179861_1_, BlockPos p_179861_2_)
-    {
-        if (!World.doesBlockHaveSolidTopSurface(this.worldObj, p_179861_2_.down()))
-        {
+    private boolean func_179861_a(BlockPos p_179861_1_, BlockPos p_179861_2_) {
+        if (!World.doesBlockHaveSolidTopSurface(this.worldObj, p_179861_2_.down())) {
             return false;
-        }
-        else
-        {
+        } else {
             int i = p_179861_2_.getX() - p_179861_1_.getX() / 2;
             int j = p_179861_2_.getZ() - p_179861_1_.getZ() / 2;
 
-            for (int k = i; k < i + p_179861_1_.getX(); ++k)
-            {
-                for (int l = p_179861_2_.getY(); l < p_179861_2_.getY() + p_179861_1_.getY(); ++l)
-                {
-                    for (int i1 = j; i1 < j + p_179861_1_.getZ(); ++i1)
-                    {
-                        if (this.worldObj.getBlockState(new BlockPos(k, l, i1)).getBlock().isNormalCube())
-                        {
+            for (int k = i; k < i + p_179861_1_.getX(); ++k) {
+                for (int l = p_179861_2_.getY(); l < p_179861_2_.getY() + p_179861_1_.getY(); ++l) {
+                    for (int i1 = j; i1 < j + p_179861_1_.getZ(); ++i1) {
+                        if (this.worldObj.getBlockState(new BlockPos(k, l, i1)).getBlock().isNormalCube()) {
                             return false;
                         }
                     }
@@ -133,72 +133,59 @@
         }
     }
 
-    private void updateNumIronGolems()
-    {
-        List list = this.worldObj.getEntitiesWithinAABB(EntityIronGolem.class, new AxisAlignedBB((double)(this.center.getX() - this.villageRadius), (double)(this.center.getY() - 4), (double)(this.center.getZ() - this.villageRadius), (double)(this.center.getX() + this.villageRadius), (double)(this.center.getY() + 4), (double)(this.center.getZ() + this.villageRadius)));
+    private void updateNumIronGolems() {
+        List list = this.worldObj.getEntitiesWithinAABB(EntityIronGolem.class, new AxisAlignedBB((double) (this.center.getX() - this.villageRadius), (double) (this.center.getY() - 4), (double) (this.center.getZ() - this.villageRadius), (double) (this.center.getX() + this.villageRadius), (double) (this.center.getY() + 4), (double) (this.center.getZ() + this.villageRadius)));
         this.numIronGolems = list.size();
     }
 
-    private void updateNumVillagers()
-    {
-        List list = this.worldObj.getEntitiesWithinAABB(EntityVillager.class, new AxisAlignedBB((double)(this.center.getX() - this.villageRadius), (double)(this.center.getY() - 4), (double)(this.center.getZ() - this.villageRadius), (double)(this.center.getX() + this.villageRadius), (double)(this.center.getY() + 4), (double)(this.center.getZ() + this.villageRadius)));
+    private void updateNumVillagers() {
+        List list = this.worldObj.getEntitiesWithinAABB(EntityVillager.class, new AxisAlignedBB((double) (this.center.getX() - this.villageRadius), (double) (this.center.getY() - 4), (double) (this.center.getZ() - this.villageRadius), (double) (this.center.getX() + this.villageRadius), (double) (this.center.getY() + 4), (double) (this.center.getZ() + this.villageRadius)));
         this.numVillagers = list.size();
 
-        if (this.numVillagers == 0)
-        {
+        if (this.numVillagers == 0) {
             this.playerReputation.clear();
         }
     }
 
-    public BlockPos getCenter()
-    {
+    public BlockPos getCenter() {
         return this.center;
     }
 
-    public int getVillageRadius()
-    {
+    public int getVillageRadius() {
         return this.villageRadius;
     }
 
-    public int getNumVillageDoors()
-    {
+    public int getNumVillageDoors() {
         return this.villageDoorInfoList.size();
     }
 
-    public int getTicksSinceLastDoorAdding()
-    {
+    public int getTicksSinceLastDoorAdding() {
         return this.tickCounter - this.lastAddDoorTimestamp;
     }
 
-    public int getNumVillagers()
-    {
+    public int getNumVillagers() {
         return this.numVillagers;
     }
 
-    public boolean func_179866_a(BlockPos p_179866_1_)
-    {
-        return this.center.distanceSq(p_179866_1_) < (double)(this.villageRadius * this.villageRadius);
+    public boolean func_179866_a(BlockPos p_179866_1_) {
+        return this.center.distanceSq(p_179866_1_) < (double) (this.villageRadius * this.villageRadius);
     }
 
-    public List getVillageDoorInfoList()
-    {
+    public List getVillageDoorInfoList() {
         return this.villageDoorInfoList;
     }
 
-    public VillageDoorInfo getNearestDoor(BlockPos p_179865_1_)
-    {
+    public VillageDoorInfo getNearestDoor(BlockPos p_179865_1_) {
         VillageDoorInfo villagedoorinfo = null;
         int i = Integer.MAX_VALUE;
         Iterator iterator = this.villageDoorInfoList.iterator();
 
-        while (iterator.hasNext())
-        {
-            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo)iterator.next();
+        while (iterator.hasNext()) {
+            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo) iterator.next();
             int j = villagedoorinfo1.getDistanceToDoorBlockSq(p_179865_1_);
 
-            if (j < i)
-            {
+            if (j < i) {
                 villagedoorinfo = villagedoorinfo1;
                 i = j;
             }
@@ -206,28 +206,22 @@
         return villagedoorinfo;
     }
 
-    public VillageDoorInfo func_179863_c(BlockPos p_179863_1_)
-    {
+    public VillageDoorInfo func_179863_c(BlockPos p_179863_1_) {
         VillageDoorInfo villagedoorinfo = null;
         int i = Integer.MAX_VALUE;
         Iterator iterator = this.villageDoorInfoList.iterator();
 
-        while (iterator.hasNext())
-        {
-            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo)iterator.next();
+        while (iterator.hasNext()) {
+            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo) iterator.next();
             int j = villagedoorinfo1.getDistanceToDoorBlockSq(p_179863_1_);
 
-            if (j > 256)
-            {
+            if (j > 256) {
                 j *= 1000;
-            }
-            else
-            {
+            } else {
                 j = villagedoorinfo1.getDoorOpeningRestrictionCounter();
             }
 
-            if (j < i)
-            {
+            if (j < i) {
                 villagedoorinfo = villagedoorinfo1;
                 i = j;
             }
@@ -236,79 +236,62 @@
         return villagedoorinfo;
     }
 
-    public VillageDoorInfo getExistedDoor(BlockPos doorBlock)
-    {
-        if (this.center.distanceSq(doorBlock) > (double)(this.villageRadius * this.villageRadius))
-        {
+    public VillageDoorInfo getExistedDoor(BlockPos doorBlock) {
+        if (this.center.distanceSq(doorBlock) > (double) (this.villageRadius * this.villageRadius)) {
             return null;
-        }
-        else
-        {
+        } else {
             Iterator iterator = this.villageDoorInfoList.iterator();
             VillageDoorInfo villagedoorinfo;
 
-            do
-            {
-                if (!iterator.hasNext())
-                {
+            do {
+                if (!iterator.hasNext()) {
                     return null;
                 }
 
-                villagedoorinfo = (VillageDoorInfo)iterator.next();
-            }
-            while (villagedoorinfo.getDoorBlockPos().getX() != doorBlock.getX() || villagedoorinfo.getDoorBlockPos().getZ() != doorBlock.getZ() || Math.abs(villagedoorinfo.getDoorBlockPos().getY() - doorBlock.getY()) > 1);
+                villagedoorinfo = (VillageDoorInfo) iterator.next();
+            } while (villagedoorinfo.getDoorBlockPos().getX() != doorBlock.getX() || villagedoorinfo.getDoorBlockPos().getZ() != doorBlock.getZ() || Math.abs(villagedoorinfo.getDoorBlockPos().getY() - doorBlock.getY()) > 1);
 
             return villagedoorinfo;
         }
     }
 
-    public void addVillageDoorInfo(VillageDoorInfo p_75576_1_)
-    {
+    public void addVillageDoorInfo(VillageDoorInfo p_75576_1_) {
         this.villageDoorInfoList.add(p_75576_1_);
         this.centerHelper = this.centerHelper.add(p_75576_1_.getDoorBlockPos());
         this.updateVillageRadiusAndCenter();
         this.lastAddDoorTimestamp = p_75576_1_.getInsidePosY();
     }
 
-    public boolean isAnnihilated()
-    {
+    public boolean isAnnihilated() {
         return this.villageDoorInfoList.isEmpty();
     }
 
-    public void addOrRenewAgressor(EntityLivingBase p_75575_1_)
-    {
+    public void addOrRenewAgressor(EntityLivingBase p_75575_1_) {
         Iterator iterator = this.villageAgressors.iterator();
         Village.VillageAggressor villageaggressor;
 
-        do
-        {
-            if (!iterator.hasNext())
-            {
+        do {
+            if (!iterator.hasNext()) {
                 this.villageAgressors.add(new Village.VillageAggressor(p_75575_1_, this.tickCounter));
                 return;
             }
 
-            villageaggressor = (Village.VillageAggressor)iterator.next();
-        }
-        while (villageaggressor.agressor != p_75575_1_);
+            villageaggressor = (Village.VillageAggressor) iterator.next();
+        } while (villageaggressor.agressor != p_75575_1_);
 
         villageaggressor.agressionTime = this.tickCounter;
     }
 
-    public EntityLivingBase findNearestVillageAggressor(EntityLivingBase p_75571_1_)
-    {
+    public EntityLivingBase findNearestVillageAggressor(EntityLivingBase p_75571_1_) {
         double d0 = Double.MAX_VALUE;
         Village.VillageAggressor villageaggressor = null;
 
-        for (int i = 0; i < this.villageAgressors.size(); ++i)
-        {
-            Village.VillageAggressor villageaggressor1 = (Village.VillageAggressor)this.villageAgressors.get(i);
+        for (int i = 0; i < this.villageAgressors.size(); ++i) {
+            Village.VillageAggressor villageaggressor1 = (Village.VillageAggressor) this.villageAgressors.get(i);
             double d1 = villageaggressor1.agressor.getDistanceSqToEntity(p_75571_1_);
 
-            if (d1 <= d0)
-            {
+            if (d1 <= d0) {
                 villageaggressor = villageaggressor1;
                 d0 = d1;
             }
@@ -315,26 +315,21 @@
         return villageaggressor != null ? villageaggressor.agressor : null;
     }
 
-    public EntityPlayer getNearestTargetPlayer(EntityLivingBase villageDefender)
-    {
+    public EntityPlayer getNearestTargetPlayer(EntityLivingBase villageDefender) {
         double d0 = Double.MAX_VALUE;
         EntityPlayer entityplayer = null;
         Iterator iterator = this.playerReputation.keySet().iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
 
-            if (this.isPlayerReputationTooLow(s))
-            {
+            if (this.isPlayerReputationTooLow(s)) {
                 EntityPlayer entityplayer1 = this.worldObj.getPlayerEntityByName(s);
 
-                if (entityplayer1 != null)
-                {
+                if (entityplayer1 != null) {
                     double d1 = entityplayer1.getDistanceSqToEntity(villageDefender);
 
-                    if (d1 <= d0)
-                    {
+                    if (d1 <= d0) {
                         entityplayer = entityplayer1;
                         d0 = d1;
                     }
@@ -345,38 +345,31 @@
         return entityplayer;
     }
 
-    private void removeDeadAndOldAgressors()
-    {
+    private void removeDeadAndOldAgressors() {
         Iterator iterator = this.villageAgressors.iterator();
 
-        while (iterator.hasNext())
-        {
-            Village.VillageAggressor villageaggressor = (Village.VillageAggressor)iterator.next();
+        while (iterator.hasNext()) {
+            Village.VillageAggressor villageaggressor = (Village.VillageAggressor) iterator.next();
 
-            if (!villageaggressor.agressor.isEntityAlive() || Math.abs(this.tickCounter - villageaggressor.agressionTime) > 300)
-            {
+            if (!villageaggressor.agressor.isEntityAlive() || Math.abs(this.tickCounter - villageaggressor.agressionTime) > 300) {
                 iterator.remove();
             }
         }
     }
 
-    private void removeDeadAndOutOfRangeDoors()
-    {
+    private void removeDeadAndOutOfRangeDoors() {
         boolean flag = false;
         boolean flag1 = this.worldObj.rand.nextInt(50) == 0;
         Iterator iterator = this.villageDoorInfoList.iterator();
 
-        while (iterator.hasNext())
-        {
-            VillageDoorInfo villagedoorinfo = (VillageDoorInfo)iterator.next();
+        while (iterator.hasNext()) {
+            VillageDoorInfo villagedoorinfo = (VillageDoorInfo) iterator.next();
 
-            if (flag1)
-            {
+            if (flag1) {
                 villagedoorinfo.resetDoorOpeningRestrictionCounter();
             }
 
-            if (!this.isWoodDoor(villagedoorinfo.getDoorBlockPos()) || Math.abs(this.tickCounter - villagedoorinfo.getInsidePosY()) > 1200)
-            {
+            if (!this.isWoodDoor(villagedoorinfo.getDoorBlockPos()) || Math.abs(this.tickCounter - villagedoorinfo.getInsidePosY()) > 1200) {
                 this.centerHelper = this.centerHelper.add(villagedoorinfo.getDoorBlockPos().multiply(-1));
                 flag = true;
                 villagedoorinfo.func_179853_a(true);
@@ -384,63 +384,52 @@
             }
         }
 
-        if (flag)
-        {
+        if (flag) {
             this.updateVillageRadiusAndCenter();
         }
     }
 
-    private boolean isWoodDoor(BlockPos p_179860_1_)
-    {
+    private boolean isWoodDoor(BlockPos p_179860_1_) {
         Block block = this.worldObj.getBlockState(p_179860_1_).getBlock();
         return block instanceof BlockDoor ? block.getMaterial() == Material.wood : false;
     }
 
-    private void updateVillageRadiusAndCenter()
-    {
+    private void updateVillageRadiusAndCenter() {
         int i = this.villageDoorInfoList.size();
 
-        if (i == 0)
-        {
+        if (i == 0) {
             this.center = new BlockPos(0, 0, 0);
             this.villageRadius = 0;
-        }
-        else
-        {
+        } else {
             this.center = new BlockPos(this.centerHelper.getX() / i, this.centerHelper.getY() / i, this.centerHelper.getZ() / i);
             int j = 0;
             VillageDoorInfo villagedoorinfo;
 
-            for (Iterator iterator = this.villageDoorInfoList.iterator(); iterator.hasNext(); j = Math.max(villagedoorinfo.getDistanceToDoorBlockSq(this.center), j))
-            {
-                villagedoorinfo = (VillageDoorInfo)iterator.next();
+            for (Iterator iterator = this.villageDoorInfoList.iterator(); iterator.hasNext(); j = Math.max(villagedoorinfo.getDistanceToDoorBlockSq(this.center), j)) {
+                villagedoorinfo = (VillageDoorInfo) iterator.next();
             }
 
-            this.villageRadius = Math.max(32, (int)Math.sqrt((double)j) + 1);
+            this.villageRadius = Math.max(32, (int) Math.sqrt((double) j) + 1);
         }
     }
 
-    public int getReputationForPlayer(String p_82684_1_)
-    {
-        Integer integer = (Integer)this.playerReputation.get(p_82684_1_);
+    public int getReputationForPlayer(String p_82684_1_) {
+        Integer integer = (Integer) this.playerReputation.get(p_82684_1_);
         return integer != null ? integer.intValue() : 0;
     }
 
-    public int setReputationForPlayer(String p_82688_1_, int p_82688_2_)
-    {
+    public int setReputationForPlayer(String p_82688_1_, int p_82688_2_) {
         int j = this.getReputationForPlayer(p_82688_1_);
         int k = MathHelper.clamp_int(j + p_82688_2_, -30, 10);
         this.playerReputation.put(p_82688_1_, Integer.valueOf(k));
         return k;
     }
 
-    public boolean isPlayerReputationTooLow(String p_82687_1_)
-    {
+    public boolean isPlayerReputationTooLow(String p_82687_1_) {
         return this.getReputationForPlayer(p_82687_1_) <= -15;
     }
 
-    public void readVillageDataFromNBT(NBTTagCompound p_82690_1_)
-    {
+    public void readVillageDataFromNBT(NBTTagCompound p_82690_1_) {
         this.numVillagers = p_82690_1_.getInteger("PopSize");
         this.villageRadius = p_82690_1_.getInteger("Radius");
         this.numIronGolems = p_82690_1_.getInteger("Golems");
@@ -451,8 +451,7 @@
         this.centerHelper = new BlockPos(p_82690_1_.getInteger("ACX"), p_82690_1_.getInteger("ACY"), p_82690_1_.getInteger("ACZ"));
         NBTTagList nbttaglist = p_82690_1_.getTagList("Doors", 10);
 
-        for (int i = 0; i < nbttaglist.tagCount(); ++i)
-        {
+        for (int i = 0; i < nbttaglist.tagCount(); ++i) {
             NBTTagCompound nbttagcompound1 = nbttaglist.getCompoundTagAt(i);
             VillageDoorInfo villagedoorinfo = new VillageDoorInfo(new BlockPos(nbttagcompound1.getInteger("X"), nbttagcompound1.getInteger("Y"), nbttagcompound1.getInteger("Z")), nbttagcompound1.getInteger("IDX"), nbttagcompound1.getInteger("IDZ"), nbttagcompound1.getInteger("TS"));
             this.villageDoorInfoList.add(villagedoorinfo);
@@ -460,15 +460,13 @@
 
         NBTTagList nbttaglist1 = p_82690_1_.getTagList("Players", 10);
 
-        for (int j = 0; j < nbttaglist1.tagCount(); ++j)
-        {
+        for (int j = 0; j < nbttaglist1.tagCount(); ++j) {
             NBTTagCompound nbttagcompound2 = nbttaglist1.getCompoundTagAt(j);
             this.playerReputation.put(nbttagcompound2.getString("Name"), Integer.valueOf(nbttagcompound2.getInteger("S")));
         }
     }
 
-    public void writeVillageDataToNBT(NBTTagCompound p_82689_1_)
-    {
+    public void writeVillageDataToNBT(NBTTagCompound p_82689_1_) {
         p_82689_1_.setInteger("PopSize", this.numVillagers);
         p_82689_1_.setInteger("Radius", this.villageRadius);
         p_82689_1_.setInteger("Golems", this.numIronGolems);
@@ -484,9 +484,8 @@
         NBTTagList nbttaglist = new NBTTagList();
         Iterator iterator = this.villageDoorInfoList.iterator();
 
-        while (iterator.hasNext())
-        {
-            VillageDoorInfo villagedoorinfo = (VillageDoorInfo)iterator.next();
+        while (iterator.hasNext()) {
+            VillageDoorInfo villagedoorinfo = (VillageDoorInfo) iterator.next();
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
             nbttagcompound1.setInteger("X", villagedoorinfo.getDoorBlockPos().getX());
             nbttagcompound1.setInteger("Y", villagedoorinfo.getDoorBlockPos().getY());
@@ -501,51 +501,44 @@
         NBTTagList nbttaglist1 = new NBTTagList();
         Iterator iterator1 = this.playerReputation.keySet().iterator();
 
-        while (iterator1.hasNext())
-        {
-            String s = (String)iterator1.next();
+        while (iterator1.hasNext()) {
+            String s = (String) iterator1.next();
             NBTTagCompound nbttagcompound2 = new NBTTagCompound();
             nbttagcompound2.setString("Name", s);
-            nbttagcompound2.setInteger("S", ((Integer)this.playerReputation.get(s)).intValue());
+            nbttagcompound2.setInteger("S", ((Integer) this.playerReputation.get(s)).intValue());
             nbttaglist1.appendTag(nbttagcompound2);
         }
 
         p_82689_1_.setTag("Players", nbttaglist1);
     }
 
-    public void endMatingSeason()
-    {
+    public void endMatingSeason() {
         this.noBreedTicks = this.tickCounter;
     }
 
-    public boolean isMatingSeason()
-    {
+    public boolean isMatingSeason() {
         return this.noBreedTicks == 0 || this.tickCounter - this.noBreedTicks >= 3600;
     }
 
-    public void setDefaultPlayerReputation(int p_82683_1_)
-    {
+    public void setDefaultPlayerReputation(int p_82683_1_) {
         Iterator iterator = this.playerReputation.keySet().iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
             this.setReputationForPlayer(s, p_82683_1_);
         }
     }
 
-    class VillageAggressor
-    {
+    class VillageAggressor {
+
         public EntityLivingBase agressor;
         public int agressionTime;
         private static final String __OBFID = "CL_00001632";
 
-        VillageAggressor(EntityLivingBase p_i1674_2_, int p_i1674_3_)
-        {
+        VillageAggressor(EntityLivingBase p_i1674_2_, int p_i1674_3_) {
             this.agressor = p_i1674_2_;
             this.agressionTime = p_i1674_3_;
         }
     }
-}
+}
