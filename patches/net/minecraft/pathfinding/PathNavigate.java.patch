--- decompiled\net\minecraft\pathfinding\PathNavigate.java
+++ src\main\java\net\minecraft\pathfinding\PathNavigate.java
@@ -8,12 +8,12 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.ChunkCache;
 import net.minecraft.world.World;
 
-public abstract class PathNavigate
-{
+public abstract class PathNavigate {
+
     protected EntityLiving theEntity;
     protected World worldObj;
     protected PathEntity currentPath;
     protected double speed;
     private final IAttributeInstance pathSearchRange;
@@ -22,236 +22,192 @@
     private Vec3 lastPosCheck = new Vec3(0.0D, 0.0D, 0.0D);
     private float field_179682_i = 1.0F;
     private final PathFinder field_179681_j;
     private static final String __OBFID = "CL_00001627";
 
-    public PathNavigate(EntityLiving p_i1671_1_, World worldIn)
-    {
+    public PathNavigate(EntityLiving p_i1671_1_, World worldIn) {
         this.theEntity = p_i1671_1_;
         this.worldObj = worldIn;
         this.pathSearchRange = p_i1671_1_.getEntityAttribute(SharedMonsterAttributes.followRange);
         this.field_179681_j = this.func_179679_a();
     }
 
     protected abstract PathFinder func_179679_a();
 
-    public void setSpeed(double p_75489_1_)
-    {
+    public void setSpeed(double p_75489_1_) {
         this.speed = p_75489_1_;
     }
 
-    public float getPathSearchRange()
-    {
-        return (float)this.pathSearchRange.getAttributeValue();
+    public float getPathSearchRange() {
+        return (float) this.pathSearchRange.getAttributeValue();
     }
 
-    public final PathEntity getPathToXYZ(double p_75488_1_, double p_75488_3_, double p_75488_5_)
-    {
-        return this.func_179680_a(new BlockPos(MathHelper.floor_double(p_75488_1_), (int)p_75488_3_, MathHelper.floor_double(p_75488_5_)));
+    public final PathEntity getPathToXYZ(double p_75488_1_, double p_75488_3_, double p_75488_5_) {
+        return this.func_179680_a(new BlockPos(MathHelper.floor_double(p_75488_1_), (int) p_75488_3_, MathHelper.floor_double(p_75488_5_)));
     }
 
-    public PathEntity func_179680_a(BlockPos p_179680_1_)
-    {
-        if (!this.canNavigate())
-        {
+    public PathEntity func_179680_a(BlockPos p_179680_1_) {
+        if (!this.canNavigate()) {
             return null;
-        }
-        else
-        {
+        } else {
             float f = this.getPathSearchRange();
             this.worldObj.theProfiler.startSection("pathfind");
             BlockPos blockpos1 = new BlockPos(this.theEntity);
-            int i = (int)(f + 8.0F);
+            int i = (int) (f + 8.0F);
             ChunkCache chunkcache = new ChunkCache(this.worldObj, blockpos1.add(-i, -i, -i), blockpos1.add(i, i, i), 0);
             PathEntity pathentity = this.field_179681_j.func_180782_a(chunkcache, this.theEntity, p_179680_1_, f);
             this.worldObj.theProfiler.endSection();
             return pathentity;
         }
     }
 
-    public boolean tryMoveToXYZ(double p_75492_1_, double p_75492_3_, double p_75492_5_, double p_75492_7_)
-    {
-        PathEntity pathentity = this.getPathToXYZ((double)MathHelper.floor_double(p_75492_1_), (double)((int)p_75492_3_), (double)MathHelper.floor_double(p_75492_5_));
+    public boolean tryMoveToXYZ(double p_75492_1_, double p_75492_3_, double p_75492_5_, double p_75492_7_) {
+        PathEntity pathentity = this.getPathToXYZ((double) MathHelper.floor_double(p_75492_1_), (double) ((int) p_75492_3_), (double) MathHelper.floor_double(p_75492_5_));
         return this.setPath(pathentity, p_75492_7_);
     }
 
-    public void func_179678_a(float p_179678_1_)
-    {
+    public void func_179678_a(float p_179678_1_) {
         this.field_179682_i = p_179678_1_;
     }
 
-    public PathEntity getPathToEntityLiving(Entity p_75494_1_)
-    {
-        if (!this.canNavigate())
-        {
+    public PathEntity getPathToEntityLiving(Entity p_75494_1_) {
+        if (!this.canNavigate()) {
             return null;
-        }
-        else
-        {
+        } else {
             float f = this.getPathSearchRange();
             this.worldObj.theProfiler.startSection("pathfind");
             BlockPos blockpos = (new BlockPos(this.theEntity)).up();
-            int i = (int)(f + 16.0F);
+            int i = (int) (f + 16.0F);
             ChunkCache chunkcache = new ChunkCache(this.worldObj, blockpos.add(-i, -i, -i), blockpos.add(i, i, i), 0);
             PathEntity pathentity = this.field_179681_j.func_176188_a(chunkcache, this.theEntity, p_75494_1_, f);
             this.worldObj.theProfiler.endSection();
             return pathentity;
         }
     }
 
-    public boolean tryMoveToEntityLiving(Entity p_75497_1_, double p_75497_2_)
-    {
+    public boolean tryMoveToEntityLiving(Entity p_75497_1_, double p_75497_2_) {
         PathEntity pathentity = this.getPathToEntityLiving(p_75497_1_);
         return pathentity != null ? this.setPath(pathentity, p_75497_2_) : false;
     }
 
-    public boolean setPath(PathEntity p_75484_1_, double p_75484_2_)
-    {
-        if (p_75484_1_ == null)
-        {
+    public boolean setPath(PathEntity p_75484_1_, double p_75484_2_) {
+        if (p_75484_1_ == null) {
             this.currentPath = null;
             return false;
-        }
-        else
-        {
-            if (!p_75484_1_.isSamePath(this.currentPath))
-            {
+        } else {
+            if (!p_75484_1_.isSamePath(this.currentPath)) {
                 this.currentPath = p_75484_1_;
             }
 
             this.removeSunnyPath();
 
-            if (this.currentPath.getCurrentPathLength() == 0)
-            {
+            if (this.currentPath.getCurrentPathLength() == 0) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.speed = p_75484_2_;
                 Vec3 vec3 = this.getEntityPosition();
                 this.ticksAtLastPos = this.totalTicks;
                 this.lastPosCheck = vec3;
                 return true;
             }
         }
     }
 
-    public PathEntity getPath()
-    {
+    public PathEntity getPath() {
         return this.currentPath;
     }
 
-    public void onUpdateNavigation()
-    {
+    public void onUpdateNavigation() {
         ++this.totalTicks;
 
-        if (!this.noPath())
-        {
+        if (!this.noPath()) {
             Vec3 vec3;
 
-            if (this.canNavigate())
-            {
+            if (this.canNavigate()) {
                 this.pathFollow();
-            }
-            else if (this.currentPath != null && this.currentPath.getCurrentPathIndex() < this.currentPath.getCurrentPathLength())
-            {
+            } else if (this.currentPath != null && this.currentPath.getCurrentPathIndex() < this.currentPath.getCurrentPathLength()) {
                 vec3 = this.getEntityPosition();
                 Vec3 vec31 = this.currentPath.getVectorFromIndex(this.theEntity, this.currentPath.getCurrentPathIndex());
 
-                if (vec3.yCoord > vec31.yCoord && !this.theEntity.onGround && MathHelper.floor_double(vec3.xCoord) == MathHelper.floor_double(vec31.xCoord) && MathHelper.floor_double(vec3.zCoord) == MathHelper.floor_double(vec31.zCoord))
-                {
+                if (vec3.yCoord > vec31.yCoord && !this.theEntity.onGround && MathHelper.floor_double(vec3.xCoord) == MathHelper.floor_double(vec31.xCoord) && MathHelper.floor_double(vec3.zCoord) == MathHelper.floor_double(vec31.zCoord)) {
                     this.currentPath.setCurrentPathIndex(this.currentPath.getCurrentPathIndex() + 1);
                 }
             }
 
-            if (!this.noPath())
-            {
+            if (!this.noPath()) {
                 vec3 = this.currentPath.getPosition(this.theEntity);
 
-                if (vec3 != null)
-                {
+                if (vec3 != null) {
                     this.theEntity.getMoveHelper().setMoveTo(vec3.xCoord, vec3.yCoord, vec3.zCoord, this.speed);
                 }
             }
         }
     }
 
-    protected void pathFollow()
-    {
+    protected void pathFollow() {
         Vec3 vec3 = this.getEntityPosition();
         int i = this.currentPath.getCurrentPathLength();
 
-        for (int j = this.currentPath.getCurrentPathIndex(); j < this.currentPath.getCurrentPathLength(); ++j)
-        {
-            if (this.currentPath.getPathPointFromIndex(j).yCoord != (int)vec3.yCoord)
-            {
+        for (int j = this.currentPath.getCurrentPathIndex(); j < this.currentPath.getCurrentPathLength(); ++j) {
+            if (this.currentPath.getPathPointFromIndex(j).yCoord != (int) vec3.yCoord) {
                 i = j;
                 break;
             }
         }
 
         float f = this.theEntity.width * this.theEntity.width * this.field_179682_i;
         int k;
 
-        for (k = this.currentPath.getCurrentPathIndex(); k < i; ++k)
-        {
+        for (k = this.currentPath.getCurrentPathIndex(); k < i; ++k) {
             Vec3 vec31 = this.currentPath.getVectorFromIndex(this.theEntity, k);
 
-            if (vec3.squareDistanceTo(vec31) < (double)f)
-            {
+            if (vec3.squareDistanceTo(vec31) < (double) f) {
                 this.currentPath.setCurrentPathIndex(k + 1);
             }
         }
 
         k = MathHelper.ceiling_float_int(this.theEntity.width);
-        int j1 = (int)this.theEntity.height + 1;
+        int j1 = (int) this.theEntity.height + 1;
         int l = k;
 
-        for (int i1 = i - 1; i1 >= this.currentPath.getCurrentPathIndex(); --i1)
-        {
-            if (this.isDirectPathBetweenPoints(vec3, this.currentPath.getVectorFromIndex(this.theEntity, i1), k, j1, l))
-            {
+        for (int i1 = i - 1; i1 >= this.currentPath.getCurrentPathIndex(); --i1) {
+            if (this.isDirectPathBetweenPoints(vec3, this.currentPath.getVectorFromIndex(this.theEntity, i1), k, j1, l)) {
                 this.currentPath.setCurrentPathIndex(i1);
                 break;
             }
         }
 
         this.func_179677_a(vec3);
     }
 
-    protected void func_179677_a(Vec3 p_179677_1_)
-    {
-        if (this.totalTicks - this.ticksAtLastPos > 100)
-        {
-            if (p_179677_1_.squareDistanceTo(this.lastPosCheck) < 2.25D)
-            {
+    protected void func_179677_a(Vec3 p_179677_1_) {
+        if (this.totalTicks - this.ticksAtLastPos > 100) {
+            if (p_179677_1_.squareDistanceTo(this.lastPosCheck) < 2.25D) {
                 this.clearPathEntity();
             }
 
             this.ticksAtLastPos = this.totalTicks;
             this.lastPosCheck = p_179677_1_;
         }
     }
 
-    public boolean noPath()
-    {
+    public boolean noPath() {
         return this.currentPath == null || this.currentPath.isFinished();
     }
 
-    public void clearPathEntity()
-    {
+    public void clearPathEntity() {
         this.currentPath = null;
     }
 
     protected abstract Vec3 getEntityPosition();
 
     protected abstract boolean canNavigate();
 
-    protected boolean isInLiquid()
-    {
+    protected boolean isInLiquid() {
         return this.theEntity.isInWater() || this.theEntity.isInLava();
     }
 
-    protected void removeSunnyPath() {}
+    protected void removeSunnyPath() {
+    }
 
     protected abstract boolean isDirectPathBetweenPoints(Vec3 p_75493_1_, Vec3 p_75493_2_, int p_75493_3_, int p_75493_4_, int p_75493_5_);
 }
