--- decompiled\net\minecraft\potion\Potion.java
+++ src\main\java\net\minecraft\potion\Potion.java
@@ -1,28 +1,35 @@
 package net.minecraft.potion;
 
-import com.google.common.collect.Maps;
 import java.util.Iterator;
 import java.util.Map;
-import java.util.UUID;
 import java.util.Map.Entry;
+import java.util.UUID;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.attributes.AttributeModifier;
 import net.minecraft.entity.ai.attributes.BaseAttributeMap;
 import net.minecraft.entity.ai.attributes.IAttribute;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
+import net.minecraft.network.play.server.S06PacketUpdateHealth;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.StringUtils;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.potion.CraftPotionEffectType;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.potion.PotionEffectType;
+
+import com.google.common.collect.Maps;
+
 public class Potion
 {
+
     public static final Potion[] potionTypes = new Potion[32];
     private static final Map field_180150_I = Maps.newHashMap();
     public static final Potion field_180151_b = null;
     public static final Potion moveSpeed = (new Potion(1, new ResourceLocation("speed"), false, 8171462)).setPotionName("potion.moveSpeed").setIconIndex(0, 0).registerPotionAttributeModifier(SharedMonsterAttributes.movementSpeed, "91AEAA56-376B-4498-935B-2F7F68070635", 0.20000000298023224D, 2);
     public static final Potion moveSlowdown = (new Potion(2, new ResourceLocation("slowness"), true, 5926017)).setPotionName("potion.moveSlowdown").setIconIndex(1, 0).registerPotionAttributeModifier(SharedMonsterAttributes.movementSpeed, "7107DE5E-7CE8-4030-940E-514C1F160890", -0.15000000596046448D, 2);
@@ -80,10 +87,11 @@
         {
             this.effectiveness = 1.0D;
         }
 
         this.liquidColor = potionColor;
+        PotionEffectType.registerPotionEffectType(new CraftPotionEffectType(this)); // CraftBukkit
     }
 
     public static Potion getPotionFromResourceLocation(String p_180142_0_)
     {
         return (Potion)field_180150_I.get(new ResourceLocation(p_180142_0_));
@@ -118,18 +126,18 @@
     {
         if (this.id == regeneration.id)
         {
             if (p_76394_1_.getHealth() < p_76394_1_.getMaxHealth())
             {
-                p_76394_1_.heal(1.0F);
+                p_76394_1_.heal(1.0F, RegainReason.MAGIC_REGEN); // CraftBukkit
             }
         }
         else if (this.id == poison.id)
         {
             if (p_76394_1_.getHealth() > 1.0F)
             {
-                p_76394_1_.attackEntityFrom(DamageSource.magic, 1.0F);
+                p_76394_1_.attackEntityFrom(CraftEventFactory.POISON, 1.0F);  // CraftBukkit - DamageSource.MAGIC -> CraftEventFactory.POISON
             }
         }
         else if (this.id == wither.id)
         {
             p_76394_1_.attackEntityFrom(DamageSource.wither, 1.0F);
@@ -140,11 +148,22 @@
         }
         else if (this.id == saturation.id && p_76394_1_ instanceof EntityPlayer)
         {
             if (!p_76394_1_.worldObj.isRemote)
             {
-                ((EntityPlayer)p_76394_1_).getFoodStats().addStats(p_76394_2_ + 1, 1.0F);
+                // CraftBukkit start
+                EntityPlayer entityhuman = (EntityPlayer)p_76394_1_;
+                int oldFoodLevel = entityhuman.getFoodStats().foodLevel;
+                org.bukkit.event.entity.FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, p_76394_2_ + 1 + oldFoodLevel);
+
+                if (!event.isCancelled())
+                {
+                    entityhuman.getFoodStats().addStats(event.getFoodLevel() - oldFoodLevel, 1.0F);
+                }
+
+                ((EntityPlayerMP)entityhuman).playerNetServerHandler.sendPacket(new S06PacketUpdateHealth(((EntityPlayerMP)entityhuman).getBukkitEntity().getScaledHealth(), entityhuman.getFoodStats().foodLevel, entityhuman.getFoodStats().foodSaturationLevel));
+                // CraftBukkit end
             }
         }
         else if ((this.id != heal.id || p_76394_1_.isEntityUndead()) && (this.id != harm.id || !p_76394_1_.isEntityUndead()))
         {
             if (this.id == harm.id && !p_76394_1_.isEntityUndead() || this.id == heal.id && p_76394_1_.isEntityUndead())
@@ -152,11 +171,11 @@
                 p_76394_1_.attackEntityFrom(DamageSource.magic, (float)(6 << p_76394_2_));
             }
         }
         else
         {
-            p_76394_1_.heal((float)Math.max(4 << p_76394_2_, 0));
+            p_76394_1_.heal((float)Math.max(4 << p_76394_2_, 0), RegainReason.MAGIC); // CraftBukkit
         }
     }
 
     public void affectEntity(Entity p_180793_1_, Entity p_180793_2_, EntityLivingBase p_180793_3_, int p_180793_4_, double p_180793_5_)
     {
@@ -179,11 +198,11 @@
             }
         }
         else
         {
             j = (int)(p_180793_5_ * (double)(4 << p_180793_4_) + 0.5D);
-            p_180793_3_.heal((float)j);
+            p_180793_3_.heal((float)j, RegainReason.MAGIC); // CraftBukkit
         }
     }
 
     public boolean isInstant()
     {
@@ -230,42 +249,10 @@
     {
         this.effectiveness = p_76404_1_;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean hasStatusIcon()
-    {
-        return this.statusIconIndex >= 0;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getStatusIconIndex()
-    {
-        return this.statusIconIndex;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean isBadEffect()
-    {
-        return this.isBadEffect;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public static String getDurationString(PotionEffect p_76389_0_)
-    {
-        if (p_76389_0_.getIsPotionDurationMax())
-        {
-            return "**:**";
-        }
-        else
-        {
-            int i = p_76389_0_.getDuration();
-            return StringUtils.ticksToElapsedTime(i);
-        }
-    }
-
     public double getEffectiveness()
     {
         return this.effectiveness;
     }
 
@@ -300,16 +287,10 @@
                 iattributeinstance.removeModifier((AttributeModifier)entry.getValue());
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public Map getAttributeModifierMap()
-    {
-        return this.attributeModifierMap;
-    }
-
     public void applyAttributesModifiersToEntity(EntityLivingBase p_111185_1_, BaseAttributeMap p_111185_2_, int p_111185_3_)
     {
         Iterator iterator = this.attributeModifierMap.entrySet().iterator();
 
         while (iterator.hasNext())
