---a/net/minecraft/profiler/PlayerUsageSnooper.java
+++b/net/minecraft/profiler/PlayerUsageSnooper.java
@@ -1,24 +1,19 @@
 package net.minecraft.profiler;
 
-import com.google.common.collect.Maps;
 import java.lang.management.ManagementFactory;
 import java.lang.management.RuntimeMXBean;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.HashMap;
 import java.util.Iterator;
-import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.UUID;
-import java.util.Map.Entry;
+
 import net.minecraft.util.HttpUtil;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class PlayerUsageSnooper
-{
+import com.google.common.collect.Maps;
+
+public class PlayerUsageSnooper {
+
     private final Map field_152773_a = Maps.newHashMap();
     private final Map field_152774_b = Maps.newHashMap();
     private final String uniqueID = UUID.randomUUID().toString();
@@ -32,15 +32,11 @@
     private int selfCounter;
     private static final String __OBFID = "CL_00001515";
 
-    public PlayerUsageSnooper(String p_i1563_1_, IPlayerUsage playerStatCollector, long startTime)
-    {
-        try
-        {
+    public PlayerUsageSnooper(String p_i1563_1_, IPlayerUsage playerStatCollector, long startTime) {
+        try {
             this.serverUrl = new URL("http://snoop.minecraft.net/" + p_i1563_1_ + "?version=" + 2);
-        }
-        catch (MalformedURLException malformedurlexception)
-        {
+        } catch (MalformedURLException malformedurlexception) {
             throw new IllegalArgumentException();
         }
 
@@ -47,29 +47,23 @@
         this.minecraftStartTimeMilis = startTime;
     }
 
-    public void startSnooper()
-    {
-        if (!this.isRunning)
-        {
+    public void startSnooper() {
+        if (!this.isRunning) {
             this.isRunning = true;
             this.func_152766_h();
-            this.threadTrigger.schedule(new TimerTask()
-            {
+            this.threadTrigger.schedule(new TimerTask() {
+
                 private static final String __OBFID = "CL_00001516";
-                public void run()
-                {
-                    if (PlayerUsageSnooper.this.playerStatsCollector.isSnooperEnabled())
-                    {
+
+                public void run() {
+                    if (PlayerUsageSnooper.this.playerStatsCollector.isSnooperEnabled()) {
                         HashMap hashmap;
 
-                        synchronized (PlayerUsageSnooper.this.syncLock)
-                        {
+                        synchronized (PlayerUsageSnooper.this.syncLock) {
                             hashmap = Maps.newHashMap(PlayerUsageSnooper.this.field_152774_b);
 
-                            if (PlayerUsageSnooper.this.selfCounter == 0)
-                            {
+                            if (PlayerUsageSnooper.this.selfCounter == 0) {
                                 hashmap.putAll(PlayerUsageSnooper.this.field_152773_a);
                             }
 
@@ -82,8 +82,7 @@
         }
     }
 
-    private void func_152766_h()
-    {
+    private void func_152766_h() {
         this.addJvmArgsToSnooper();
         this.addClientStat("snooper_token", this.uniqueID);
         this.addStatToSnooper("snooper_token", this.uniqueID);
@@ -95,19 +95,16 @@
         this.playerStatsCollector.addServerTypeToSnooper(this);
     }
 
-    private void addJvmArgsToSnooper()
-    {
+    private void addJvmArgsToSnooper() {
         RuntimeMXBean runtimemxbean = ManagementFactory.getRuntimeMXBean();
         List list = runtimemxbean.getInputArguments();
         int i = 0;
         Iterator iterator = list.iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
 
-            if (s.startsWith("-X"))
-            {
+            if (s.startsWith("-X")) {
                 this.addClientStat("jvm_arg[" + i++ + "]", s);
             }
         }
@@ -115,8 +115,7 @@
         this.addClientStat("jvm_args", Integer.valueOf(i));
     }
 
-    public void addMemoryStatsToSnooper()
-    {
+    public void addMemoryStatsToSnooper() {
         this.addStatToSnooper("memory_total", Long.valueOf(Runtime.getRuntime().totalMemory()));
         this.addStatToSnooper("memory_max", Long.valueOf(Runtime.getRuntime().maxMemory()));
         this.addStatToSnooper("memory_free", Long.valueOf(Runtime.getRuntime().freeMemory()));
@@ -124,80 +124,35 @@
         this.playerStatsCollector.addServerStatsToSnooper(this);
     }
 
-    public void addClientStat(String p_152768_1_, Object p_152768_2_)
-    {
+    public void addClientStat(String p_152768_1_, Object p_152768_2_) {
         Object object1 = this.syncLock;
 
-        synchronized (this.syncLock)
-        {
+        synchronized (this.syncLock) {
             this.field_152774_b.put(p_152768_1_, p_152768_2_);
         }
     }
 
-    public void addStatToSnooper(String p_152767_1_, Object p_152767_2_)
-    {
+    public void addStatToSnooper(String p_152767_1_, Object p_152767_2_) {
         Object object1 = this.syncLock;
 
-        synchronized (this.syncLock)
-        {
+        synchronized (this.syncLock) {
             this.field_152773_a.put(p_152767_1_, p_152767_2_);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public Map getCurrentStats()
-    {
-        LinkedHashMap linkedhashmap = Maps.newLinkedHashMap();
-        Object object = this.syncLock;
-
-        synchronized (this.syncLock)
-        {
-            this.addMemoryStatsToSnooper();
-            Iterator iterator = this.field_152773_a.entrySet().iterator();
-            Entry entry;
-
-            while (iterator.hasNext())
-            {
-                entry = (Entry)iterator.next();
-                linkedhashmap.put(entry.getKey(), entry.getValue().toString());
-            }
-
-            iterator = this.field_152774_b.entrySet().iterator();
-
-            while (iterator.hasNext())
-            {
-                entry = (Entry)iterator.next();
-                linkedhashmap.put(entry.getKey(), entry.getValue().toString());
-            }
-
-            return linkedhashmap;
-        }
-    }
-
-    public boolean isSnooperRunning()
-    {
+    public boolean isSnooperRunning() {
         return this.isRunning;
     }
 
-    public void stopSnooper()
-    {
+    public void stopSnooper() {
         this.threadTrigger.cancel();
     }
 
-    @SideOnly(Side.CLIENT)
-    public String getUniqueID()
-    {
-        return this.uniqueID;
-    }
-
-    public long getMinecraftStartTimeMillis()
-    {
+    public long getMinecraftStartTimeMillis() {
         return this.minecraftStartTimeMilis;
     }
 
-    static int access$308(PlayerUsageSnooper p_access$308_0_)
-    {
+    static int access$308(PlayerUsageSnooper p_access$308_0_) {
         return p_access$308_0_.selfCounter++;
     }
-}
+}
