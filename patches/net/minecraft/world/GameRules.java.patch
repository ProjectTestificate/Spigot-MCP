---a/net/minecraft/world/GameRules.java
+++b/net/minecraft/world/GameRules.java
@@ -3,13 +3,15 @@
 import java.util.Iterator;
 import java.util.Set;
 import java.util.TreeMap;
+
 import net.minecraft.nbt.NBTTagCompound;
 
-public class GameRules
-{
+public class GameRules {
+
     private TreeMap theGameRules = new TreeMap();
     private static final String __OBFID = "CL_00000136";
 
-    public GameRules()
-    {
+    public GameRules() {
         this.addGameRule("doFireTick", "true", GameRules.ValueType.BOOLEAN_VALUE);
         this.addGameRule("mobGriefing", "true", GameRules.ValueType.BOOLEAN_VALUE);
         this.addGameRule("keepInventory", "false", GameRules.ValueType.BOOLEAN_VALUE);
@@ -28,155 +28,126 @@
         this.addGameRule("reducedDebugInfo", "false", GameRules.ValueType.BOOLEAN_VALUE);
     }
 
-    public void addGameRule(String key, String value, GameRules.ValueType type)
-    {
+    public void addGameRule(String key, String value, GameRules.ValueType type) {
         this.theGameRules.put(key, new GameRules.Value(value, type));
     }
 
-    public void setOrCreateGameRule(String key, String ruleValue)
-    {
-        GameRules.Value value = (GameRules.Value)this.theGameRules.get(key);
+    public void setOrCreateGameRule(String key, String ruleValue) {
+        GameRules.Value value = (GameRules.Value) this.theGameRules.get(key);
 
-        if (value != null)
-        {
+        if (value != null) {
             value.setValue(ruleValue);
-        }
-        else
-        {
+        } else {
             this.addGameRule(key, ruleValue, GameRules.ValueType.ANY_VALUE);
         }
     }
 
-    public String getGameRuleStringValue(String name)
-    {
-        GameRules.Value value = (GameRules.Value)this.theGameRules.get(name);
+    public String getGameRuleStringValue(String name) {
+        GameRules.Value value = (GameRules.Value) this.theGameRules.get(name);
         return value != null ? value.getGameRuleStringValue() : "";
     }
 
-    public boolean getGameRuleBooleanValue(String name)
-    {
-        GameRules.Value value = (GameRules.Value)this.theGameRules.get(name);
+    public boolean getGameRuleBooleanValue(String name) {
+        GameRules.Value value = (GameRules.Value) this.theGameRules.get(name);
         return value != null ? value.getGameRuleBooleanValue() : false;
     }
 
-    public int getInt(String name)
-    {
-        GameRules.Value value = (GameRules.Value)this.theGameRules.get(name);
+    public int getInt(String name) {
+        GameRules.Value value = (GameRules.Value) this.theGameRules.get(name);
         return value != null ? value.getInt() : 0;
     }
 
-    public NBTTagCompound writeGameRulesToNBT()
-    {
+    public NBTTagCompound writeGameRulesToNBT() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         Iterator iterator = this.theGameRules.keySet().iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
-            GameRules.Value value = (GameRules.Value)this.theGameRules.get(s);
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
+            GameRules.Value value = (GameRules.Value) this.theGameRules.get(s);
             nbttagcompound.setString(s, value.getGameRuleStringValue());
         }
 
         return nbttagcompound;
     }
 
-    public void readGameRulesFromNBT(NBTTagCompound nbt)
-    {
+    public void readGameRulesFromNBT(NBTTagCompound nbt) {
         Set set = nbt.getKeySet();
         Iterator iterator = set.iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
             String s1 = nbt.getString(s);
             this.setOrCreateGameRule(s, s1);
         }
     }
 
-    public String[] getRules()
-    {
-        return (String[])this.theGameRules.keySet().toArray(new String[0]);
+    public String[] getRules() {
+        return (String[]) this.theGameRules.keySet().toArray(new String[0]);
     }
 
-    public boolean hasRule(String name)
-    {
+    public boolean hasRule(String name) {
         return this.theGameRules.containsKey(name);
     }
 
-    public boolean areSameType(String key, GameRules.ValueType otherValue)
-    {
-        GameRules.Value value = (GameRules.Value)this.theGameRules.get(key);
+    public boolean areSameType(String key, GameRules.ValueType otherValue) {
+        GameRules.Value value = (GameRules.Value) this.theGameRules.get(key);
         return value != null && (value.getType() == otherValue || otherValue == GameRules.ValueType.ANY_VALUE);
     }
 
-    static class Value
-        {
-            private String valueString;
-            private boolean valueBoolean;
-            private int valueInteger;
-            private double valueDouble;
-            private final GameRules.ValueType type;
-            private static final String __OBFID = "CL_00000137";
+    static class Value {
 
-            public Value(String value, GameRules.ValueType type)
-            {
-                this.type = type;
-                this.setValue(value);
-            }
+        private String valueString;
+        private boolean valueBoolean;
+        private int valueInteger;
+        private double valueDouble;
+        private final GameRules.ValueType type;
+        private static final String __OBFID = "CL_00000137";
 
-            public void setValue(String value)
-            {
-                this.valueString = value;
-                this.valueBoolean = Boolean.parseBoolean(value);
-                this.valueInteger = this.valueBoolean ? 1 : 0;
+        public Value(String value, GameRules.ValueType type) {
+            this.type = type;
+            this.setValue(value);
+        }
 
-                try
-                {
-                    this.valueInteger = Integer.parseInt(value);
-                }
-                catch (NumberFormatException numberformatexception1)
-                {
-                    ;
-                }
+        public void setValue(String value) {
+            this.valueString = value;
+            this.valueBoolean = Boolean.parseBoolean(value);
+            this.valueInteger = this.valueBoolean ? 1 : 0;
 
-                try
-                {
-                    this.valueDouble = Double.parseDouble(value);
-                }
-                catch (NumberFormatException numberformatexception)
-                {
-                    ;
-                }
+            try {
+                this.valueInteger = Integer.parseInt(value);
+            } catch (NumberFormatException numberformatexception1) {
+                ;
             }
 
-            public String getGameRuleStringValue()
-            {
-                return this.valueString;
+            try {
+                this.valueDouble = Double.parseDouble(value);
+            } catch (NumberFormatException numberformatexception) {
+                ;
             }
+        }
 
-            public boolean getGameRuleBooleanValue()
-            {
-                return this.valueBoolean;
-            }
+        public String getGameRuleStringValue() {
+            return this.valueString;
+        }
 
-            public int getInt()
-            {
-                return this.valueInteger;
-            }
+        public boolean getGameRuleBooleanValue() {
+            return this.valueBoolean;
+        }
 
-            public GameRules.ValueType getType()
-            {
-                return this.type;
-            }
+        public int getInt() {
+            return this.valueInteger;
         }
 
-    public static enum ValueType
-    {
+        public GameRules.ValueType getType() {
+            return this.type;
+        }
+    }
+
+    public static enum ValueType {
         ANY_VALUE,
         BOOLEAN_VALUE,
         NUMERICAL_VALUE;
 
         private static final String __OBFID = "CL_00002151";
     }
-}
+}
