--- decompiled\net\minecraft\world\ChunkCache.java
+++ src\main\java\net\minecraft\world\ChunkCache.java
@@ -4,17 +4,16 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
-import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.chunk.Chunk;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class ChunkCache implements IBlockAccess
 {
+
     protected int chunkX;
     protected int chunkZ;
     protected Chunk[][] chunkArray;
     protected boolean hasExtendedLevels;
     protected World worldObj;
@@ -52,37 +51,17 @@
                 }
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean extendedLevelsInChunkCache()
-    {
-        return this.hasExtendedLevels;
-    }
-
     public TileEntity getTileEntity(BlockPos pos)
     {
         int i = (pos.getX() >> 4) - this.chunkX;
         int j = (pos.getZ() >> 4) - this.chunkZ;
         return this.chunkArray[i][j].getTileEntity(pos, Chunk.EnumCreateEntityType.IMMEDIATE);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getCombinedLight(BlockPos pos, int p_175626_2_)
-    {
-        int j = this.getLightForExt(EnumSkyBlock.SKY, pos);
-        int k = this.getLightForExt(EnumSkyBlock.BLOCK, pos);
-
-        if (k < p_175626_2_)
-        {
-            k = p_175626_2_;
-        }
-
-        return j << 20 | k << 4;
-    }
-
     public IBlockState getBlockState(BlockPos pos)
     {
         if (pos.getY() >= 0 && pos.getY() < 256)
         {
             int i = (pos.getX() >> 4) - this.chunkX;
@@ -100,91 +79,17 @@
         }
 
         return Blocks.air.getDefaultState();
     }
 
-    @SideOnly(Side.CLIENT)
-    public BiomeGenBase getBiomeGenForCoords(BlockPos pos)
-    {
-        return this.worldObj.getBiomeGenForCoords(pos);
-    }
-
-    @SideOnly(Side.CLIENT)
-    private int getLightForExt(EnumSkyBlock p_175629_1_, BlockPos pos)
-    {
-        if (p_175629_1_ == EnumSkyBlock.SKY && this.worldObj.provider.getHasNoSky())
-        {
-            return 0;
-        }
-        else if (pos.getY() >= 0 && pos.getY() < 256)
-        {
-            int i;
-
-            if (this.getBlockState(pos).getBlock().getUseNeighborBrightness())
-            {
-                i = 0;
-                EnumFacing[] aenumfacing = EnumFacing.values();
-                int k = aenumfacing.length;
-
-                for (int l = 0; l < k; ++l)
-                {
-                    EnumFacing enumfacing = aenumfacing[l];
-                    int i1 = this.getLightFor(p_175629_1_, pos.offset(enumfacing));
-
-                    if (i1 > i)
-                    {
-                        i = i1;
-                    }
-
-                    if (i >= 15)
-                    {
-                        return i;
-                    }
-                }
-
-                return i;
-            }
-            else
-            {
-                i = (pos.getX() >> 4) - this.chunkX;
-                int j = (pos.getZ() >> 4) - this.chunkZ;
-                return this.chunkArray[i][j].getLightFor(p_175629_1_, pos);
-            }
-        }
-        else
-        {
-            return p_175629_1_.defaultLightValue;
-        }
-    }
-
     public boolean isAirBlock(BlockPos pos)
     {
         return this.getBlockState(pos).getBlock().getMaterial() == Material.air;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getLightFor(EnumSkyBlock p_175628_1_, BlockPos pos)
-    {
-        if (pos.getY() >= 0 && pos.getY() < 256)
-        {
-            int i = (pos.getX() >> 4) - this.chunkX;
-            int j = (pos.getZ() >> 4) - this.chunkZ;
-            return this.chunkArray[i][j].getLightFor(p_175628_1_, pos);
-        }
-        else
-        {
-            return p_175628_1_.defaultLightValue;
-        }
-    }
-
     public int getStrongPower(BlockPos pos, EnumFacing direction)
     {
         IBlockState iblockstate = this.getBlockState(pos);
         return iblockstate.getBlock().isProvidingStrongPower(this, pos, iblockstate, direction);
     }
 
-    @SideOnly(Side.CLIENT)
-    public WorldType getWorldType()
-    {
-        return this.worldObj.getWorldType();
-    }
 }
