--- decompiled\net\minecraft\world\gen\ChunkProviderDebug.java
+++ src\main\java\net\minecraft\world\gen\ChunkProviderDebug.java
@@ -1,10 +1,10 @@
 package net.minecraft.world.gen;
 
-import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.EnumCreatureType;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.BlockPos;
@@ -14,12 +14,15 @@
 import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.chunk.Chunk;
 import net.minecraft.world.chunk.ChunkPrimer;
 import net.minecraft.world.chunk.IChunkProvider;
 
+import com.google.common.collect.Lists;
+
 public class ChunkProviderDebug implements IChunkProvider
 {
+
     private static final List field_177464_a = Lists.newArrayList();
     private static final int field_177462_b;
     private final World world;
     private static final String __OBFID = "CL_00002002";
 
@@ -89,11 +92,13 @@
     public boolean chunkExists(int x, int z)
     {
         return true;
     }
 
-    public void populate(IChunkProvider p_73153_1_, int p_73153_2_, int p_73153_3_) {}
+    public void populate(IChunkProvider p_73153_1_, int p_73153_2_, int p_73153_3_)
+    {
+    }
 
     public boolean func_177460_a(IChunkProvider p_177460_1_, Chunk p_177460_2_, int p_177460_3_, int p_177460_4_)
     {
         return false;
     }
@@ -101,11 +106,13 @@
     public boolean saveChunks(boolean p_73151_1_, IProgressUpdate p_73151_2_)
     {
         return true;
     }
 
-    public void saveExtraData() {}
+    public void saveExtraData()
+    {
+    }
 
     public boolean unloadQueuedChunks()
     {
         return false;
     }
@@ -134,11 +141,13 @@
     public int getLoadedChunkCount()
     {
         return 0;
     }
 
-    public void recreateStructures(Chunk p_180514_1_, int p_180514_2_, int p_180514_3_) {}
+    public void recreateStructures(Chunk p_180514_1_, int p_180514_2_, int p_180514_3_)
+    {
+    }
 
     public Chunk provideChunk(BlockPos blockPosIn)
     {
         return this.provideChunk(blockPosIn.getX() >> 4, blockPosIn.getZ() >> 4);
     }
