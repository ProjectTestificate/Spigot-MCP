--- decompiled\net\minecraft\world\gen\structure\MapGenScatteredFeature.java
+++ src\main\java\net\minecraft\world\gen\structure\MapGenScatteredFeature.java
@@ -1,159 +1,137 @@
 package net.minecraft.world.gen.structure;
 
-import com.google.common.collect.Lists;
 import java.util.Arrays;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.Random;
 import java.util.Map.Entry;
+import java.util.Random;
+
 import net.minecraft.entity.monster.EntityWitch;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 import net.minecraft.world.biome.BiomeGenBase;
 
-public class MapGenScatteredFeature extends MapGenStructure
-{
-    private static final List biomelist = Arrays.asList(new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.desertHills, BiomeGenBase.jungle, BiomeGenBase.jungleHills, BiomeGenBase.swampland});
+import com.google.common.collect.Lists;
+
+public class MapGenScatteredFeature extends MapGenStructure {
+
+    private static final List biomelist = Arrays.asList(new BiomeGenBase[]{BiomeGenBase.desert, BiomeGenBase.desertHills, BiomeGenBase.jungle, BiomeGenBase.jungleHills, BiomeGenBase.swampland});
     private List scatteredFeatureSpawnList;
     private int maxDistanceBetweenScatteredFeatures;
     private int minDistanceBetweenScatteredFeatures;
     private static final String __OBFID = "CL_00000471";
 
-    public MapGenScatteredFeature()
-    {
+    public MapGenScatteredFeature() {
         this.scatteredFeatureSpawnList = Lists.newArrayList();
         this.maxDistanceBetweenScatteredFeatures = 32;
         this.minDistanceBetweenScatteredFeatures = 8;
         this.scatteredFeatureSpawnList.add(new BiomeGenBase.SpawnListEntry(EntityWitch.class, 1, 1, 1));
     }
 
-    public MapGenScatteredFeature(Map p_i2061_1_)
-    {
+    public MapGenScatteredFeature(Map p_i2061_1_) {
         this();
         Iterator iterator = p_i2061_1_.entrySet().iterator();
 
-        while (iterator.hasNext())
-        {
-            Entry entry = (Entry)iterator.next();
+        while (iterator.hasNext()) {
+            Entry entry = (Entry) iterator.next();
 
-            if (((String)entry.getKey()).equals("distance"))
-            {
-                this.maxDistanceBetweenScatteredFeatures = MathHelper.parseIntWithDefaultAndMax((String)entry.getValue(), this.maxDistanceBetweenScatteredFeatures, this.minDistanceBetweenScatteredFeatures + 1);
+            if (((String) entry.getKey()).equals("distance")) {
+                this.maxDistanceBetweenScatteredFeatures = MathHelper.parseIntWithDefaultAndMax((String) entry.getValue(), this.maxDistanceBetweenScatteredFeatures, this.minDistanceBetweenScatteredFeatures + 1);
             }
         }
     }
 
-    public String getStructureName()
-    {
+    public String getStructureName() {
         return "Temple";
     }
 
-    protected boolean canSpawnStructureAtCoords(int p_75047_1_, int p_75047_2_)
-    {
+    protected boolean canSpawnStructureAtCoords(int p_75047_1_, int p_75047_2_) {
         int k = p_75047_1_;
         int l = p_75047_2_;
 
-        if (p_75047_1_ < 0)
-        {
+        if (p_75047_1_ < 0) {
             p_75047_1_ -= this.maxDistanceBetweenScatteredFeatures - 1;
         }
 
-        if (p_75047_2_ < 0)
-        {
+        if (p_75047_2_ < 0) {
             p_75047_2_ -= this.maxDistanceBetweenScatteredFeatures - 1;
         }
 
         int i1 = p_75047_1_ / this.maxDistanceBetweenScatteredFeatures;
         int j1 = p_75047_2_ / this.maxDistanceBetweenScatteredFeatures;
-        Random random = this.worldObj.setRandomSeed(i1, j1, 14357617);
+        Random random = this.worldObj.setRandomSeed(i1, j1, this.worldObj.spigotConfig.largeFeatureSeed);
         i1 *= this.maxDistanceBetweenScatteredFeatures;
         j1 *= this.maxDistanceBetweenScatteredFeatures;
         i1 += random.nextInt(this.maxDistanceBetweenScatteredFeatures - this.minDistanceBetweenScatteredFeatures);
         j1 += random.nextInt(this.maxDistanceBetweenScatteredFeatures - this.minDistanceBetweenScatteredFeatures);
 
-        if (k == i1 && l == j1)
-        {
+        if (k == i1 && l == j1) {
             BiomeGenBase biomegenbase = this.worldObj.getWorldChunkManager().getBiomeGenerator(new BlockPos(k * 16 + 8, 0, l * 16 + 8));
 
-            if (biomegenbase == null)
-            {
+            if (biomegenbase == null) {
                 return false;
             }
 
             Iterator iterator = biomelist.iterator();
 
-            while (iterator.hasNext())
-            {
-                BiomeGenBase biomegenbase1 = (BiomeGenBase)iterator.next();
+            while (iterator.hasNext()) {
+                BiomeGenBase biomegenbase1 = (BiomeGenBase) iterator.next();
 
-                if (biomegenbase == biomegenbase1)
-                {
+                if (biomegenbase == biomegenbase1) {
                     return true;
                 }
             }
         }
 
         return false;
     }
 
-    protected StructureStart getStructureStart(int p_75049_1_, int p_75049_2_)
-    {
+    protected StructureStart getStructureStart(int p_75049_1_, int p_75049_2_) {
         return new MapGenScatteredFeature.Start(this.worldObj, this.rand, p_75049_1_, p_75049_2_);
     }
 
-    public boolean func_175798_a(BlockPos p_175798_1_)
-    {
+    public boolean func_175798_a(BlockPos p_175798_1_) {
         StructureStart structurestart = this.func_175797_c(p_175798_1_);
 
-        if (structurestart != null && structurestart instanceof MapGenScatteredFeature.Start && !structurestart.components.isEmpty())
-        {
-            StructureComponent structurecomponent = (StructureComponent)structurestart.components.getFirst();
+        if (structurestart != null && structurestart instanceof MapGenScatteredFeature.Start && !structurestart.components.isEmpty()) {
+            StructureComponent structurecomponent = (StructureComponent) structurestart.components.getFirst();
             return structurecomponent instanceof ComponentScatteredFeaturePieces.SwampHut;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
-    public List getScatteredFeatureSpawnList()
-    {
+    public List getScatteredFeatureSpawnList() {
         return this.scatteredFeatureSpawnList;
     }
 
-    public static class Start extends StructureStart
-        {
-            private static final String __OBFID = "CL_00000472";
+    public static class Start extends StructureStart {
 
-            public Start() {}
+        private static final String __OBFID = "CL_00000472";
 
-            public Start(World worldIn, Random p_i2060_2_, int p_i2060_3_, int p_i2060_4_)
-            {
-                super(p_i2060_3_, p_i2060_4_);
-                BiomeGenBase biomegenbase = worldIn.getBiomeGenForCoords(new BlockPos(p_i2060_3_ * 16 + 8, 0, p_i2060_4_ * 16 + 8));
+        public Start() {
+        }
 
-                if (biomegenbase != BiomeGenBase.jungle && biomegenbase != BiomeGenBase.jungleHills)
-                {
-                    if (biomegenbase == BiomeGenBase.swampland)
-                    {
-                        ComponentScatteredFeaturePieces.SwampHut swamphut = new ComponentScatteredFeaturePieces.SwampHut(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
-                        this.components.add(swamphut);
-                    }
-                    else if (biomegenbase == BiomeGenBase.desert || biomegenbase == BiomeGenBase.desertHills)
-                    {
-                        ComponentScatteredFeaturePieces.DesertPyramid desertpyramid = new ComponentScatteredFeaturePieces.DesertPyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
-                        this.components.add(desertpyramid);
-                    }
-                }
-                else
-                {
-                    ComponentScatteredFeaturePieces.JunglePyramid junglepyramid = new ComponentScatteredFeaturePieces.JunglePyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
-                    this.components.add(junglepyramid);
-                }
+        public Start(World worldIn, Random p_i2060_2_, int p_i2060_3_, int p_i2060_4_) {
+            super(p_i2060_3_, p_i2060_4_);
+            BiomeGenBase biomegenbase = worldIn.getBiomeGenForCoords(new BlockPos(p_i2060_3_ * 16 + 8, 0, p_i2060_4_ * 16 + 8));
 
-                this.updateBoundingBox();
+            if (biomegenbase != BiomeGenBase.jungle && biomegenbase != BiomeGenBase.jungleHills) {
+                if (biomegenbase == BiomeGenBase.swampland) {
+                    ComponentScatteredFeaturePieces.SwampHut swamphut = new ComponentScatteredFeaturePieces.SwampHut(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
+                    this.components.add(swamphut);
+                } else if (biomegenbase == BiomeGenBase.desert || biomegenbase == BiomeGenBase.desertHills) {
+                    ComponentScatteredFeaturePieces.DesertPyramid desertpyramid = new ComponentScatteredFeaturePieces.DesertPyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
+                    this.components.add(desertpyramid);
+                }
+            } else {
+                ComponentScatteredFeaturePieces.JunglePyramid junglepyramid = new ComponentScatteredFeaturePieces.JunglePyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
+                this.components.add(junglepyramid);
             }
+
+            this.updateBoundingBox();
         }
+    }
 }
