--- decompiled\net\minecraft\world\gen\layer\GenLayer.java
+++ src\main\java\net\minecraft\world\gen\layer\GenLayer.java
@@ -1,25 +1,25 @@
 package net.minecraft.world.gen.layer;
 
 import java.util.concurrent.Callable;
+
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.util.ReportedException;
 import net.minecraft.world.WorldType;
 import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.gen.ChunkProviderSettings;
 
-public abstract class GenLayer
-{
+public abstract class GenLayer {
+
     private long worldGenSeed;
     protected GenLayer parent;
     private long chunkSeed;
     protected long baseSeed;
     private static final String __OBFID = "CL_00000559";
 
-    public static GenLayer[] initializeAllBiomeGenerators(long p_180781_0_, WorldType p_180781_2_, String p_180781_3_)
-    {
+    public static GenLayer[] initializeAllBiomeGenerators(long p_180781_0_, WorldType p_180781_2_, String p_180781_3_) {
         GenLayerIsland genlayerisland = new GenLayerIsland(1L);
         GenLayerFuzzyZoom genlayerfuzzyzoom = new GenLayerFuzzyZoom(2000L, genlayerisland);
         GenLayerAddIsland genlayeraddisland = new GenLayerAddIsland(1L, genlayerfuzzyzoom);
         GenLayerZoom genlayerzoom = new GenLayerZoom(2001L, genlayeraddisland);
         genlayeraddisland = new GenLayerAddIsland(2L, genlayerzoom);
@@ -39,19 +39,17 @@
         GenLayer genlayer2 = GenLayerZoom.magnify(1000L, genlayerdeepocean, 0);
         ChunkProviderSettings chunkprovidersettings = null;
         int j = 4;
         int k = j;
 
-        if (p_180781_2_ == WorldType.CUSTOMIZED && p_180781_3_.length() > 0)
-        {
+        if (p_180781_2_ == WorldType.CUSTOMIZED && p_180781_3_.length() > 0) {
             chunkprovidersettings = ChunkProviderSettings.Factory.func_177865_a(p_180781_3_).func_177864_b();
             j = chunkprovidersettings.biomeSize;
             k = chunkprovidersettings.riverSize;
         }
 
-        if (p_180781_2_ == WorldType.LARGE_BIOMES)
-        {
+        if (p_180781_2_ == WorldType.LARGE_BIOMES) {
             j = 6;
         }
 
         GenLayer genlayer = GenLayerZoom.magnify(1000L, genlayer2, 0);
         GenLayerRiverInit genlayerriverinit = new GenLayerRiverInit(100L, genlayer);
@@ -64,50 +62,44 @@
         genlayer = GenLayerZoom.magnify(1000L, genlayer, k);
         GenLayerRiver genlayerriver = new GenLayerRiver(1L, genlayer);
         GenLayerSmooth genlayersmooth = new GenLayerSmooth(1000L, genlayerriver);
         Object object = new GenLayerRareBiome(1001L, genlayerhills);
 
-        for (int l = 0; l < j; ++l)
-        {
-            object = new GenLayerZoom((long)(1000 + l), (GenLayer)object);
+        for (int l = 0; l < j; ++l) {
+            object = new GenLayerZoom((long) (1000 + l), (GenLayer) object);
 
-            if (l == 0)
-            {
-                object = new GenLayerAddIsland(3L, (GenLayer)object);
+            if (l == 0) {
+                object = new GenLayerAddIsland(3L, (GenLayer) object);
             }
 
-            if (l == 1 || j == 1)
-            {
-                object = new GenLayerShore(1000L, (GenLayer)object);
+            if (l == 1 || j == 1) {
+                object = new GenLayerShore(1000L, (GenLayer) object);
             }
         }
 
-        GenLayerSmooth genlayersmooth1 = new GenLayerSmooth(1000L, (GenLayer)object);
+        GenLayerSmooth genlayersmooth1 = new GenLayerSmooth(1000L, (GenLayer) object);
         GenLayerRiverMix genlayerrivermix = new GenLayerRiverMix(100L, genlayersmooth1, genlayersmooth);
         GenLayerVoronoiZoom genlayervoronoizoom = new GenLayerVoronoiZoom(10L, genlayerrivermix);
         genlayerrivermix.initWorldGenSeed(p_180781_0_);
         genlayervoronoizoom.initWorldGenSeed(p_180781_0_);
-        return new GenLayer[] {genlayerrivermix, genlayervoronoizoom, genlayerrivermix};
+        return new GenLayer[]{genlayerrivermix, genlayervoronoizoom, genlayerrivermix};
     }
 
-    public GenLayer(long p_i2125_1_)
-    {
+    public GenLayer(long p_i2125_1_) {
         this.baseSeed = p_i2125_1_;
         this.baseSeed *= this.baseSeed * 6364136223846793005L + 1442695040888963407L;
         this.baseSeed += p_i2125_1_;
         this.baseSeed *= this.baseSeed * 6364136223846793005L + 1442695040888963407L;
         this.baseSeed += p_i2125_1_;
         this.baseSeed *= this.baseSeed * 6364136223846793005L + 1442695040888963407L;
         this.baseSeed += p_i2125_1_;
     }
 
-    public void initWorldGenSeed(long p_75905_1_)
-    {
+    public void initWorldGenSeed(long p_75905_1_) {
         this.worldGenSeed = p_75905_1_;
 
-        if (this.parent != null)
-        {
+        if (this.parent != null) {
             this.parent.initWorldGenSeed(p_75905_1_);
         }
 
         this.worldGenSeed *= this.worldGenSeed * 6364136223846793005L + 1442695040888963407L;
         this.worldGenSeed += this.baseSeed;
@@ -115,12 +107,11 @@
         this.worldGenSeed += this.baseSeed;
         this.worldGenSeed *= this.worldGenSeed * 6364136223846793005L + 1442695040888963407L;
         this.worldGenSeed += this.baseSeed;
     }
 
-    public void initChunkSeed(long p_75903_1_, long p_75903_3_)
-    {
+    public void initChunkSeed(long p_75903_1_, long p_75903_3_) {
         this.chunkSeed = this.worldGenSeed;
         this.chunkSeed *= this.chunkSeed * 6364136223846793005L + 1442695040888963407L;
         this.chunkSeed += p_75903_1_;
         this.chunkSeed *= this.chunkSeed * 6364136223846793005L + 1442695040888963407L;
         this.chunkSeed += p_75903_3_;
@@ -128,82 +119,69 @@
         this.chunkSeed += p_75903_1_;
         this.chunkSeed *= this.chunkSeed * 6364136223846793005L + 1442695040888963407L;
         this.chunkSeed += p_75903_3_;
     }
 
-    protected int nextInt(int p_75902_1_)
-    {
-        int j = (int)((this.chunkSeed >> 24) % (long)p_75902_1_);
+    protected int nextInt(int p_75902_1_) {
+        int j = (int) ((this.chunkSeed >> 24) % (long) p_75902_1_);
 
-        if (j < 0)
-        {
+        if (j < 0) {
             j += p_75902_1_;
         }
 
         this.chunkSeed *= this.chunkSeed * 6364136223846793005L + 1442695040888963407L;
         this.chunkSeed += this.worldGenSeed;
         return j;
     }
 
     public abstract int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight);
 
-    protected static boolean biomesEqualOrMesaPlateau(int biomeIDA, int biomeIDB)
-    {
-        if (biomeIDA == biomeIDB)
-        {
+    protected static boolean biomesEqualOrMesaPlateau(int biomeIDA, int biomeIDB) {
+        if (biomeIDA == biomeIDB) {
             return true;
-        }
-        else if (biomeIDA != BiomeGenBase.mesaPlateau_F.biomeID && biomeIDA != BiomeGenBase.mesaPlateau.biomeID)
-        {
+        } else if (biomeIDA != BiomeGenBase.mesaPlateau_F.biomeID && biomeIDA != BiomeGenBase.mesaPlateau.biomeID) {
             final BiomeGenBase biomegenbase = BiomeGenBase.getBiome(biomeIDA);
             final BiomeGenBase biomegenbase1 = BiomeGenBase.getBiome(biomeIDB);
 
-            try
-            {
+            try {
                 return biomegenbase != null && biomegenbase1 != null ? biomegenbase.isEqualTo(biomegenbase1) : false;
-            }
-            catch (Throwable throwable)
-            {
+            } catch (Throwable throwable) {
                 CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Comparing biomes");
                 CrashReportCategory crashreportcategory = crashreport.makeCategory("Biomes being compared");
                 crashreportcategory.addCrashSection("Biome A ID", Integer.valueOf(biomeIDA));
                 crashreportcategory.addCrashSection("Biome B ID", Integer.valueOf(biomeIDB));
-                crashreportcategory.addCrashSectionCallable("Biome A", new Callable()
-                {
+                crashreportcategory.addCrashSectionCallable("Biome A", new Callable() {
+
                     private static final String __OBFID = "CL_00000560";
-                    public String call()
-                    {
+
+                    public String call() {
                         return String.valueOf(biomegenbase);
                     }
                 });
-                crashreportcategory.addCrashSectionCallable("Biome B", new Callable()
-                {
+                crashreportcategory.addCrashSectionCallable("Biome B", new Callable() {
+
                     private static final String __OBFID = "CL_00000561";
-                    public String call()
-                    {
+
+                    public String call() {
                         return String.valueOf(biomegenbase1);
                     }
                 });
                 throw new ReportedException(crashreport);
             }
-        }
-        else
-        {
+        } else {
             return biomeIDB == BiomeGenBase.mesaPlateau_F.biomeID || biomeIDB == BiomeGenBase.mesaPlateau.biomeID;
         }
     }
 
-    protected static boolean isBiomeOceanic(int p_151618_0_)
-    {
+    protected static boolean isBiomeOceanic(int p_151618_0_) {
         return p_151618_0_ == BiomeGenBase.ocean.biomeID || p_151618_0_ == BiomeGenBase.deepOcean.biomeID || p_151618_0_ == BiomeGenBase.frozenOcean.biomeID;
     }
 
-    protected int selectRandom(int ... p_151619_1_)
-    {
+    protected int selectRandom(int... p_151619_1_) {
         return p_151619_1_[this.nextInt(p_151619_1_.length)];
     }
 
-    protected int selectModeOrRandom(int p_151617_1_, int p_151617_2_, int p_151617_3_, int p_151617_4_)
-    {
-        return p_151617_2_ == p_151617_3_ && p_151617_3_ == p_151617_4_ ? p_151617_2_ : (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_3_ ? p_151617_1_ : (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_3_ && p_151617_1_ == p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_2_ && p_151617_3_ != p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_3_ && p_151617_2_ != p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_4_ && p_151617_2_ != p_151617_3_ ? p_151617_1_ : (p_151617_2_ == p_151617_3_ && p_151617_1_ != p_151617_4_ ? p_151617_2_ : (p_151617_2_ == p_151617_4_ && p_151617_1_ != p_151617_3_ ? p_151617_2_ : (p_151617_3_ == p_151617_4_ && p_151617_1_ != p_151617_2_ ? p_151617_3_ : this.selectRandom(new int[] {p_151617_1_, p_151617_2_, p_151617_3_, p_151617_4_}))))))))));
+    protected int selectModeOrRandom(int p_151617_1_, int p_151617_2_, int p_151617_3_, int p_151617_4_) {
+        return p_151617_2_ == p_151617_3_ && p_151617_3_ == p_151617_4_ ? p_151617_2_ : (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_3_ ? p_151617_1_ : (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_3_ && p_151617_1_ == p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_2_ && p_151617_3_ != p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_3_ && p_151617_2_ != p_151617_4_ ? p_151617_1_ : (p_151617_1_ == p_151617_4_ && p_151617_2_ != p_151617_3_ ? p_151617_1_ : (p_151617_2_ == p_151617_3_ && p_151617_1_ != p_151617_4_ ? p_151617_2_ : (p_151617_2_ == p_151617_4_ && p_151617_1_ != p_151617_3_ ? p_151617_2_ : (p_151617_3_ == p_151617_4_ && p_151617_1_ != p_151617_2_ ? p_151617_3_ : this
+                .selectRandom(new int[]{p_151617_1_, p_151617_2_, p_151617_3_, p_151617_4_}))))))))));
     }
 }
