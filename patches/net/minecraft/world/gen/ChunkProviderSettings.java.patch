--- decompiled\net\minecraft\world\gen\ChunkProviderSettings.java
+++ src\main\java\net\minecraft\world\gen\ChunkProviderSettings.java
@@ -1,21 +1,24 @@
 package net.minecraft.world.gen;
 
+import java.lang.reflect.Type;
+
+import net.minecraft.util.JsonUtils;
+import net.minecraft.world.biome.BiomeGenBase;
+
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
-import java.lang.reflect.Type;
-import net.minecraft.util.JsonUtils;
-import net.minecraft.world.biome.BiomeGenBase;
 
 public class ChunkProviderSettings
 {
+
     public final float coordinateScale;
     public final float heightScale;
     public final float upperLimitScale;
     public final float lowerLimitScale;
     public final float depthNoiseScaleX;
@@ -181,10 +184,11 @@
         this(p_i45640_1_);
     }
 
     public static class Factory
         {
+
             static final Gson JSON_ADAPTER = (new GsonBuilder()).registerTypeAdapter(ChunkProviderSettings.Factory.class, new ChunkProviderSettings.Serializer()).create();
             public float coordinateScale = 684.412F;
             public float heightScale = 684.412F;
             public float upperLimitScale = 512.0F;
             public float lowerLimitScale = 512.0F;
@@ -382,11 +386,18 @@
                     return true;
                 }
                 else if (p_equals_1_ != null && this.getClass() == p_equals_1_.getClass())
                 {
                     ChunkProviderSettings.Factory factory = (ChunkProviderSettings.Factory)p_equals_1_;
-                    return this.andesiteCount != factory.andesiteCount ? false : (this.andesiteMaxHeight != factory.andesiteMaxHeight ? false : (this.andesiteMinHeight != factory.andesiteMinHeight ? false : (this.andesiteSize != factory.andesiteSize ? false : (Float.compare(factory.baseSize, this.baseSize) != 0 ? false : (Float.compare(factory.biomeDepthOffset, this.biomeDepthOffset) != 0 ? false : (Float.compare(factory.biomeDepthWeight, this.biomeDepthWeight) != 0 ? false : (Float.compare(factory.biomeScaleOffset, this.biomeScaleOffset) != 0 ? false : (Float.compare(factory.biomeScaleWeight, this.biomeScaleWeight) != 0 ? false : (this.biomeSize != factory.biomeSize ? false : (this.coalCount != factory.coalCount ? false : (this.coalMaxHeight != factory.coalMaxHeight ? false : (this.coalMinHeight != factory.coalMinHeight ? false : (this.coalSize != factory.coalSize ? false : (Float.compare(factory.coordinateScale, this.coordinateScale) != 0 ? false : (Float.compare(factory.depthNoiseScaleExponent, this.depthNoiseScaleExponent) != 0 ? false : (Float.compare(factory.depthNoiseScaleX, this.depthNoiseScaleX) != 0 ? false : (Float.compare(factory.depthNoiseScaleZ, this.depthNoiseScaleZ) != 0 ? false : (this.diamondCount != factory.diamondCount ? false : (this.diamondMaxHeight != factory.diamondMaxHeight ? false : (this.diamondMinHeight != factory.diamondMinHeight ? false : (this.diamondSize != factory.diamondSize ? false : (this.dioriteCount != factory.dioriteCount ? false : (this.dioriteMaxHeight != factory.dioriteMaxHeight ? false : (this.dioriteMinHeight != factory.dioriteMinHeight ? false : (this.dioriteSize != factory.dioriteSize ? false : (this.dirtCount != factory.dirtCount ? false : (this.dirtMaxHeight != factory.dirtMaxHeight ? false : (this.dirtMinHeight != factory.dirtMinHeight ? false : (this.dirtSize != factory.dirtSize ? false : (this.dungeonChance != factory.dungeonChance ? false : (this.fixedBiome != factory.fixedBiome ? false : (this.goldCount != factory.goldCount ? false : (this.goldMaxHeight != factory.goldMaxHeight ? false : (this.goldMinHeight != factory.goldMinHeight ? false : (this.goldSize != factory.goldSize ? false : (this.graniteCount != factory.graniteCount ? false : (this.graniteMaxHeight != factory.graniteMaxHeight ? false : (this.graniteMinHeight != factory.graniteMinHeight ? false : (this.graniteSize != factory.graniteSize ? false : (this.gravelCount != factory.gravelCount ? false : (this.gravelMaxHeight != factory.gravelMaxHeight ? false : (this.gravelMinHeight != factory.gravelMinHeight ? false : (this.gravelSize != factory.gravelSize ? false : (Float.compare(factory.heightScale, this.heightScale) != 0 ? false : (this.ironCount != factory.ironCount ? false : (this.ironMaxHeight != factory.ironMaxHeight ? false : (this.ironMinHeight != factory.ironMinHeight ? false : (this.ironSize != factory.ironSize ? false : (this.lapisCenterHeight != factory.lapisCenterHeight ? false : (this.lapisCount != factory.lapisCount ? false : (this.lapisSize != factory.lapisSize ? false : (this.lapisSpread != factory.lapisSpread ? false : (this.lavaLakeChance != factory.lavaLakeChance ? false : (Float.compare(factory.lowerLimitScale, this.lowerLimitScale) != 0 ? false : (Float.compare(factory.mainNoiseScaleX, this.mainNoiseScaleX) != 0 ? false : (Float.compare(factory.mainNoiseScaleY, this.mainNoiseScaleY) != 0 ? false : (Float.compare(factory.mainNoiseScaleZ, this.mainNoiseScaleZ) != 0 ? false : (this.redstoneCount != factory.redstoneCount ? false : (this.redstoneMaxHeight != factory.redstoneMaxHeight ? false : (this.redstoneMinHeight != factory.redstoneMinHeight ? false : (this.redstoneSize != factory.redstoneSize ? false : (this.riverSize != factory.riverSize ? false : (this.seaLevel != factory.seaLevel ? false : (Float.compare(factory.stretchY, this.stretchY) != 0 ? false : (Float.compare(factory.upperLimitScale, this.upperLimitScale) != 0 ? false : (this.useCaves != factory.useCaves ? false : (this.useDungeons != factory.useDungeons ? false : (this.useLavaLakes != factory.useLavaLakes ? false : (this.useLavaOceans != factory.useLavaOceans ? false : (this.useMineShafts != factory.useMineShafts ? false : (this.useRavines != factory.useRavines ? false : (this.useStrongholds != factory.useStrongholds ? false : (this.useTemples != factory.useTemples ? false : (this.useMonuments != factory.useMonuments ? false : (this.useVillages != factory.useVillages ? false : (this.useWaterLakes != factory.useWaterLakes ? false : this.waterLakeChance == factory.waterLakeChance))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
+                    return this.andesiteCount != factory.andesiteCount ? false : (this.andesiteMaxHeight != factory.andesiteMaxHeight ? false : (this.andesiteMinHeight != factory.andesiteMinHeight ? false : (this.andesiteSize != factory.andesiteSize ? false : (Float.compare(factory.baseSize, this.baseSize) != 0 ? false : (Float.compare(factory.biomeDepthOffset, this.biomeDepthOffset) != 0 ? false : (Float.compare(factory.biomeDepthWeight, this.biomeDepthWeight) != 0 ? false : (Float
+                            .compare(factory.biomeScaleOffset, this.biomeScaleOffset) != 0 ? false : (Float.compare(factory.biomeScaleWeight, this.biomeScaleWeight) != 0 ? false : (this.biomeSize != factory.biomeSize ? false : (this.coalCount != factory.coalCount ? false : (this.coalMaxHeight != factory.coalMaxHeight ? false : (this.coalMinHeight != factory.coalMinHeight ? false : (this.coalSize != factory.coalSize ? false : (Float
+                                    .compare(factory.coordinateScale, this.coordinateScale) != 0 ? false : (Float.compare(factory.depthNoiseScaleExponent, this.depthNoiseScaleExponent) != 0 ? false : (Float.compare(factory.depthNoiseScaleX, this.depthNoiseScaleX) != 0 ? false : (Float
+                                            .compare(factory.depthNoiseScaleZ, this.depthNoiseScaleZ) != 0 ? false : (this.diamondCount != factory.diamondCount ? false : (this.diamondMaxHeight != factory.diamondMaxHeight ? false : (this.diamondMinHeight != factory.diamondMinHeight ? false : (this.diamondSize != factory.diamondSize ? false : (this.dioriteCount != factory.dioriteCount ? false : (this.dioriteMaxHeight != factory.dioriteMaxHeight ? false : (this.dioriteMinHeight != factory.dioriteMinHeight ? false : (this.dioriteSize != factory.dioriteSize ? false : (this.dirtCount != factory.dirtCount ? false : (this.dirtMaxHeight != factory.dirtMaxHeight ? false : (this.dirtMinHeight != factory.dirtMinHeight ? false : (this.dirtSize != factory.dirtSize ? false : (this.dungeonChance != factory.dungeonChance ? false : (this.fixedBiome != factory.fixedBiome ? false : (this.goldCount != factory.goldCount ? false : (this.goldMaxHeight != factory.goldMaxHeight ? false : (this.goldMinHeight != factory.goldMinHeight ? false : (this.goldSize != factory.goldSize ? false : (this.graniteCount != factory.graniteCount ? false : (this.graniteMaxHeight != factory.graniteMaxHeight ? false : (this.graniteMinHeight != factory.graniteMinHeight ? false : (this.graniteSize != factory.graniteSize ? false : (this.gravelCount != factory.gravelCount ? false : (this.gravelMaxHeight != factory.gravelMaxHeight ? false : (this.gravelMinHeight != factory.gravelMinHeight ? false : (this.gravelSize != factory.gravelSize ? false : (Float
+                                                    .compare(factory.heightScale, this.heightScale) != 0 ? false : (this.ironCount != factory.ironCount ? false : (this.ironMaxHeight != factory.ironMaxHeight ? false : (this.ironMinHeight != factory.ironMinHeight ? false : (this.ironSize != factory.ironSize ? false : (this.lapisCenterHeight != factory.lapisCenterHeight ? false : (this.lapisCount != factory.lapisCount ? false : (this.lapisSize != factory.lapisSize ? false : (this.lapisSpread != factory.lapisSpread ? false : (this.lavaLakeChance != factory.lavaLakeChance ? false : (Float
+                                                            .compare(factory.lowerLimitScale, this.lowerLimitScale) != 0 ? false : (Float.compare(factory.mainNoiseScaleX, this.mainNoiseScaleX) != 0 ? false : (Float.compare(factory.mainNoiseScaleY, this.mainNoiseScaleY) != 0 ? false : (Float
+                                                                    .compare(factory.mainNoiseScaleZ, this.mainNoiseScaleZ) != 0 ? false : (this.redstoneCount != factory.redstoneCount ? false : (this.redstoneMaxHeight != factory.redstoneMaxHeight ? false : (this.redstoneMinHeight != factory.redstoneMinHeight ? false : (this.redstoneSize != factory.redstoneSize ? false : (this.riverSize != factory.riverSize ? false : (this.seaLevel != factory.seaLevel ? false : (Float.compare(factory.stretchY, this.stretchY) != 0 ? false : (Float
+                                                                            .compare(factory.upperLimitScale, this.upperLimitScale) != 0 ? false : (this.useCaves != factory.useCaves ? false : (this.useDungeons != factory.useDungeons ? false : (this.useLavaLakes != factory.useLavaLakes ? false : (this.useLavaOceans != factory.useLavaOceans ? false : (this.useMineShafts != factory.useMineShafts ? false : (this.useRavines != factory.useRavines ? false : (this.useStrongholds != factory.useStrongholds ? false : (this.useTemples != factory.useTemples ? false : (this.useMonuments != factory.useMonuments ? false : (this.useVillages != factory.useVillages ? false : (this.useWaterLakes != factory.useWaterLakes ? false : this.waterLakeChance == factory.waterLakeChance))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
                 }
                 else
                 {
                     return false;
                 }
@@ -481,10 +492,11 @@
             }
         }
 
     public static class Serializer implements JsonDeserializer, JsonSerializer
         {
+
             private static final String __OBFID = "CL_00002003";
 
             public ChunkProviderSettings.Factory func_177861_a(JsonElement p_177861_1_, Type p_177861_2_, JsonDeserializationContext p_177861_3_)
             {
                 JsonObject jsonobject = p_177861_1_.getAsJsonObject();
