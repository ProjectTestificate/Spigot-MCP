---a/net/minecraft/world/gen/feature/WorldGenDungeons.java
+++b/net/minecraft/world/gen/feature/WorldGenDungeons.java
@@ -1,10 +1,8 @@
 package net.minecraft.world.gen.feature;
 
-import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
+
 import net.minecraft.block.material.Material;
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
@@ -14,16 +14,36 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.WeightedRandomChestContent;
 import net.minecraft.world.World;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class WorldGenDungeons extends WorldGenerator
-{
+import com.google.common.collect.Lists;
+
+public class WorldGenDungeons extends WorldGenerator {
+
     private static final Logger field_175918_a = LogManager.getLogger();
-    private static final String[] SPAWNERTYPES = new String[] {"Skeleton", "Zombie", "Zombie", "Spider"};
-    private static final List CHESTCONTENT = Lists.newArrayList(new WeightedRandomChestContent[] {new WeightedRandomChestContent(Items.saddle, 0, 1, 1, 10), new WeightedRandomChestContent(Items.iron_ingot, 0, 1, 4, 10), new WeightedRandomChestContent(Items.bread, 0, 1, 1, 10), new WeightedRandomChestContent(Items.wheat, 0, 1, 4, 10), new WeightedRandomChestContent(Items.gunpowder, 0, 1, 4, 10), new WeightedRandomChestContent(Items.string, 0, 1, 4, 10), new WeightedRandomChestContent(Items.bucket, 0, 1, 1, 10), new WeightedRandomChestContent(Items.golden_apple, 0, 1, 1, 1), new WeightedRandomChestContent(Items.redstone, 0, 1, 4, 10), new WeightedRandomChestContent(Items.record_13, 0, 1, 1, 4), new WeightedRandomChestContent(Items.record_cat, 0, 1, 1, 4), new WeightedRandomChestContent(Items.name_tag, 0, 1, 1, 10), new WeightedRandomChestContent(Items.golden_horse_armor, 0, 1, 1, 2), new WeightedRandomChestContent(Items.iron_horse_armor, 0, 1, 1, 5), new WeightedRandomChestContent(Items.diamond_horse_armor, 0, 1, 1, 1)});
+    private static final String[] SPAWNERTYPES = new String[]{"Skeleton", "Zombie", "Zombie", "Spider"};
+    private static final List CHESTCONTENT = Lists.newArrayList(new WeightedRandomChestContent[]{
+            new WeightedRandomChestContent(Items.saddle, 0, 1, 1, 10),
+            new WeightedRandomChestContent(Items.iron_ingot, 0, 1, 4, 10),
+            new WeightedRandomChestContent(Items.bread, 0, 1, 1, 10),
+            new WeightedRandomChestContent(Items.wheat, 0, 1, 4, 10),
+            new WeightedRandomChestContent(Items.gunpowder, 0, 1, 4, 10),
+            new WeightedRandomChestContent(Items.string, 0, 1, 4, 10),
+            new WeightedRandomChestContent(Items.bucket, 0, 1, 1, 10),
+            new WeightedRandomChestContent(Items.golden_apple, 0, 1, 1, 1),
+            new WeightedRandomChestContent(Items.redstone, 0, 1, 4, 10),
+            new WeightedRandomChestContent(Items.record_13, 0, 1, 1, 4),
+            new WeightedRandomChestContent(Items.record_cat, 0, 1, 1, 4),
+            new WeightedRandomChestContent(Items.name_tag, 0, 1, 1, 10),
+            new WeightedRandomChestContent(Items.golden_horse_armor, 0, 1, 1, 2),
+            new WeightedRandomChestContent(Items.iron_horse_armor, 0, 1, 1, 5),
+            new WeightedRandomChestContent(Items.diamond_horse_armor, 0, 1, 1, 1)
+    });
     private static final String __OBFID = "CL_00000425";
 
-    public boolean generate(World worldIn, Random p_180709_2_, BlockPos p_180709_3_)
-    {
+    public boolean generate(World worldIn, Random p_180709_2_, BlockPos p_180709_3_) {
         boolean flag = true;
         int i = p_180709_2_.nextInt(2) + 2;
         int j = -i - 1;
@@ -41,66 +41,46 @@
         int j2;
         BlockPos blockpos1;
 
-        for (l1 = j; l1 <= k; ++l1)
-        {
-            for (i2 = -1; i2 <= 4; ++i2)
-            {
-                for (j2 = i1; j2 <= j1; ++j2)
-                {
+        for (l1 = j; l1 <= k; ++l1) {
+            for (i2 = -1; i2 <= 4; ++i2) {
+                for (j2 = i1; j2 <= j1; ++j2) {
                     blockpos1 = p_180709_3_.add(l1, i2, j2);
                     Material material = worldIn.getBlockState(blockpos1).getBlock().getMaterial();
                     boolean flag3 = material.isSolid();
 
-                    if (i2 == -1 && !flag3)
-                    {
+                    if (i2 == -1 && !flag3) {
                         return false;
                     }
 
-                    if (i2 == 4 && !flag3)
-                    {
+                    if (i2 == 4 && !flag3) {
                         return false;
                     }
 
-                    if ((l1 == j || l1 == k || j2 == i1 || j2 == j1) && i2 == 0 && worldIn.isAirBlock(blockpos1) && worldIn.isAirBlock(blockpos1.up()))
-                    {
+                    if ((l1 == j || l1 == k || j2 == i1 || j2 == j1) && i2 == 0 && worldIn.isAirBlock(blockpos1) && worldIn.isAirBlock(blockpos1.up())) {
                         ++k1;
                     }
                 }
             }
         }
 
-        if (k1 >= 1 && k1 <= 5)
-        {
-            for (l1 = j; l1 <= k; ++l1)
-            {
-                for (i2 = 3; i2 >= -1; --i2)
-                {
-                    for (j2 = i1; j2 <= j1; ++j2)
-                    {
+        if (k1 >= 1 && k1 <= 5) {
+            for (l1 = j; l1 <= k; ++l1) {
+                for (i2 = 3; i2 >= -1; --i2) {
+                    for (j2 = i1; j2 <= j1; ++j2) {
                         blockpos1 = p_180709_3_.add(l1, i2, j2);
 
-                        if (l1 != j && i2 != -1 && j2 != i1 && l1 != k && i2 != 4 && j2 != j1)
-                        {
-                            if (worldIn.getBlockState(blockpos1).getBlock() != Blocks.chest)
-                            {
+                        if (l1 != j && i2 != -1 && j2 != i1 && l1 != k && i2 != 4 && j2 != j1) {
+                            if (worldIn.getBlockState(blockpos1).getBlock() != Blocks.chest) {
                                 worldIn.setBlockToAir(blockpos1);
                             }
-                        }
-                        else if (blockpos1.getY() >= 0 && !worldIn.getBlockState(blockpos1.down()).getBlock().getMaterial().isSolid())
-                        {
+                        } else if (blockpos1.getY() >= 0 && !worldIn.getBlockState(blockpos1.down()).getBlock().getMaterial().isSolid()) {
                             worldIn.setBlockToAir(blockpos1);
-                        }
-                        else if (worldIn.getBlockState(blockpos1).getBlock().getMaterial().isSolid() && worldIn.getBlockState(blockpos1).getBlock() != Blocks.chest)
-                        {
-                            if (i2 == -1 && p_180709_2_.nextInt(4) != 0)
-                            {
+                        } else if (worldIn.getBlockState(blockpos1).getBlock().getMaterial().isSolid() && worldIn.getBlockState(blockpos1).getBlock() != Blocks.chest) {
+                            if (i2 == -1 && p_180709_2_.nextInt(4) != 0) {
                                 worldIn.setBlockState(blockpos1, Blocks.mossy_cobblestone.getDefaultState(), 2);
-                            }
-                            else
-                            {
+                            } else {
                                 worldIn.setBlockState(blockpos1, Blocks.cobblestone.getDefaultState(), 2);
                             }
                         }
@@ -107,12 +107,10 @@
 
             l1 = 0;
 
-            while (l1 < 2)
-            {
+            while (l1 < 2) {
                 i2 = 0;
 
-                while (true)
-                {
-                    if (i2 < 3)
-                    {
+                while (true) {
+                    if (i2 < 3) {
                         label197:
                         {
                             j2 = p_180709_3_.getX() + p_180709_2_.nextInt(i * 2 + 1) - i;
@@ -122,29 +122,24 @@
                             int i3 = p_180709_3_.getZ() + p_180709_2_.nextInt(l * 2 + 1) - l;
                             BlockPos blockpos2 = new BlockPos(j2, l2, i3);
 
-                            if (worldIn.isAirBlock(blockpos2))
-                            {
+                            if (worldIn.isAirBlock(blockpos2)) {
                                 int k2 = 0;
                                 Iterator iterator = EnumFacing.Plane.HORIZONTAL.iterator();
 
-                                while (iterator.hasNext())
-                                {
-                                    EnumFacing enumfacing = (EnumFacing)iterator.next();
+                                while (iterator.hasNext()) {
+                                    EnumFacing enumfacing = (EnumFacing) iterator.next();
 
-                                    if (worldIn.getBlockState(blockpos2.offset(enumfacing)).getBlock().getMaterial().isSolid())
-                                    {
+                                    if (worldIn.getBlockState(blockpos2.offset(enumfacing)).getBlock().getMaterial().isSolid()) {
                                         ++k2;
                                     }
                                 }
 
-                                if (k2 == 1)
-                                {
+                                if (k2 == 1) {
                                     worldIn.setBlockState(blockpos2, Blocks.chest.correctFacing(worldIn, blockpos2, Blocks.chest.getDefaultState()), 2);
-                                    List list = WeightedRandomChestContent.func_177629_a(CHESTCONTENT, new WeightedRandomChestContent[] {Items.enchanted_book.getRandom(p_180709_2_)});
+                                    List list = WeightedRandomChestContent.func_177629_a(CHESTCONTENT, new WeightedRandomChestContent[]{Items.enchanted_book.getRandom(p_180709_2_)});
                                     TileEntity tileentity1 = worldIn.getTileEntity(blockpos2);
 
-                                    if (tileentity1 instanceof TileEntityChest)
-                                    {
-                                        WeightedRandomChestContent.generateChestContents(p_180709_2_, list, (TileEntityChest)tileentity1, 8);
+                                    if (tileentity1 instanceof TileEntityChest) {
+                                        WeightedRandomChestContent.generateChestContents(p_180709_2_, list, (TileEntityChest) tileentity1, 8);
                                     }
 
                                     break label197;
@@ -165,30 +165,21 @@
             worldIn.setBlockState(p_180709_3_, Blocks.mob_spawner.getDefaultState(), 2);
             TileEntity tileentity = worldIn.getTileEntity(p_180709_3_);
 
-            if (tileentity instanceof TileEntityMobSpawner)
-            {
-                ((TileEntityMobSpawner)tileentity).getSpawnerBaseLogic().setEntityName(this.pickMobSpawner(p_180709_2_));
-            }
-            else
-            {
+            if (tileentity instanceof TileEntityMobSpawner) {
+                ((TileEntityMobSpawner) tileentity).getSpawnerBaseLogic().setEntityName(this.pickMobSpawner(p_180709_2_));
+            } else {
                 field_175918_a.error("Failed to fetch mob spawner entity at (" + p_180709_3_.getX() + ", " + p_180709_3_.getY() + ", " + p_180709_3_.getZ() + ")");
             }
 
             return true;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
-    private String pickMobSpawner(Random p_76543_1_)
-    {
+    private String pickMobSpawner(Random p_76543_1_) {
         return SPAWNERTYPES[p_76543_1_.nextInt(SPAWNERTYPES.length)];
     }
-}
+}
