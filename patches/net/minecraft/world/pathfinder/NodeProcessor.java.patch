---a/net/minecraft/world/pathfinder/NodeProcessor.java
+++b/net/minecraft/world/pathfinder/NodeProcessor.java
@@ -6,8 +6,8 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.IBlockAccess;
 
-public abstract class NodeProcessor
-{
+public abstract class NodeProcessor {
+
     protected IBlockAccess field_176169_a;
     protected IntHashMap field_176167_b = new IntHashMap();
     protected int field_176168_c;
@@ -15,8 +15,7 @@
     protected int field_176166_e;
     private static final String __OBFID = "CL_00001967";
 
-    public void func_176162_a(IBlockAccess p_176162_1_, Entity p_176162_2_)
-    {
+    public void func_176162_a(IBlockAccess p_176162_1_, Entity p_176162_2_) {
         this.field_176169_a = p_176162_1_;
         this.field_176167_b.clearMap();
         this.field_176168_c = MathHelper.floor_float(p_176162_2_.width + 1.0F);
@@ -24,14 +24,15 @@
         this.field_176166_e = MathHelper.floor_float(p_176162_2_.width + 1.0F);
     }
 
-    public void func_176163_a() {}
+    public void func_176163_a() {
+    }
 
-    protected PathPoint func_176159_a(int p_176159_1_, int p_176159_2_, int p_176159_3_)
-    {
+    protected PathPoint func_176159_a(int p_176159_1_, int p_176159_2_, int p_176159_3_) {
         int l = PathPoint.makeHash(p_176159_1_, p_176159_2_, p_176159_3_);
-        PathPoint pathpoint = (PathPoint)this.field_176167_b.lookup(l);
+        PathPoint pathpoint = (PathPoint) this.field_176167_b.lookup(l);
 
-        if (pathpoint == null)
-        {
+        if (pathpoint == null) {
             pathpoint = new PathPoint(p_176159_1_, p_176159_2_, p_176159_3_);
             this.field_176167_b.addKey(l, pathpoint);
         }
@@ -45,4 +45,4 @@
     public abstract PathPoint func_176160_a(Entity p_176160_1_, double p_176160_2_, double p_176160_4_, double p_176160_6_);
 
     public abstract int func_176164_a(PathPoint[] p_176164_1_, Entity p_176164_2_, PathPoint p_176164_3_, PathPoint p_176164_4_, float p_176164_5_);
-}
+}
