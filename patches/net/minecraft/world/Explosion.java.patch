---a/net/minecraft/world/Explosion.java
+++b/net/minecraft/world/Explosion.java
@@ -1,22 +1,17 @@
 package net.minecraft.world;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.EnchantmentProtection;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.item.EntityFallingBlock;
 import net.minecraft.entity.item.EntityTNTPrimed;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
@@ -23,11 +23,7 @@
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.Vec3;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class Explosion
-{
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityExplodeEvent;
+
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Sets;
+
+public class Explosion {
+
     private final boolean isFlaming;
     private final boolean isSmoking;
     private final Random explosionRNG;
@@ -35,33 +35,20 @@
     private final double explosionX;
     private final double explosionY;
     private final double explosionZ;
-    private final Entity exploder;
+    public final Entity exploder; // SpigotMCP -- Apply access transformation
     private final float explosionSize;
     private final List affectedBlockPositions;
     private final Map field_77288_k;
     private static final String __OBFID = "CL_00000134";
+    public boolean wasCanceled = false; // CraftBukkit - add field
 
-    @SideOnly(Side.CLIENT)
-    public Explosion(World worldIn, Entity p_i45752_2_, double p_i45752_3_, double p_i45752_5_, double p_i45752_7_, float p_i45752_9_, List p_i45752_10_)
-    {
-        this(worldIn, p_i45752_2_, p_i45752_3_, p_i45752_5_, p_i45752_7_, p_i45752_9_, false, true, p_i45752_10_);
-    }
-
-    @SideOnly(Side.CLIENT)
-    public Explosion(World worldIn, Entity p_i45753_2_, double p_i45753_3_, double p_i45753_5_, double p_i45753_7_, float p_i45753_9_, boolean p_i45753_10_, boolean p_i45753_11_, List p_i45753_12_)
-    {
-        this(worldIn, p_i45753_2_, p_i45753_3_, p_i45753_5_, p_i45753_7_, p_i45753_9_, p_i45753_10_, p_i45753_11_);
-        this.affectedBlockPositions.addAll(p_i45753_12_);
-    }
-
-    public Explosion(World worldIn, Entity p_i45754_2_, double p_i45754_3_, double p_i45754_5_, double p_i45754_7_, float p_i45754_9_, boolean p_i45754_10_, boolean p_i45754_11_)
-    {
+    public Explosion(World worldIn, Entity p_i45754_2_, double p_i45754_3_, double p_i45754_5_, double p_i45754_7_, float p_i45754_9_, boolean p_i45754_10_, boolean p_i45754_11_) {
         this.explosionRNG = new Random();
         this.affectedBlockPositions = Lists.newArrayList();
         this.field_77288_k = Maps.newHashMap();
         this.worldObj = worldIn;
         this.exploder = p_i45754_2_;
-        this.explosionSize = p_i45754_9_;
+        this.explosionSize = (float) Math.max(p_i45754_9_, 0.0); // CraftBukkit - clamp bad values
         this.explosionX = p_i45754_3_;
         this.explosionY = p_i45754_5_;
         this.explosionZ = p_i45754_7_;
@@ -69,15 +69,25 @@
         this.isSmoking = p_i45754_11_;
     }
 
-    public void doExplosionA()
-    {
+    public void doExplosionA() {
+        // CraftBukkit start
+        if (this.explosionSize < 0.1F) {
+            return;
+        }
+        // CraftBukkit end
+
         HashSet hashset = Sets.newHashSet();
         boolean flag = true;
         int j;
         int k;
 
-        for (int i = 0; i < 16; ++i)
-        {
-            for (j = 0; j < 16; ++j)
-            {
-                for (k = 0; k < 16; ++k)
-                {
-                    if (i == 0 || i == 15 || j == 0 || j == 15 || k == 0 || k == 15)
-                    {
-                        double d0 = (double)((float)i / 15.0F * 2.0F - 1.0F);
-                        double d1 = (double)((float)j / 15.0F * 2.0F - 1.0F);
-                        double d2 = (double)((float)k / 15.0F * 2.0F - 1.0F);
+        for (int i = 0; i < 16; ++i) {
+            for (j = 0; j < 16; ++j) {
+                for (k = 0; k < 16; ++k) {
+                    if (i == 0 || i == 15 || j == 0 || j == 15 || k == 0 || k == 15) {
+                        double d0 = (double) ((float) i / 15.0F * 2.0F - 1.0F);
+                        double d1 = (double) ((float) j / 15.0F * 2.0F - 1.0F);
+                        double d2 = (double) ((float) k / 15.0F * 2.0F - 1.0F);
                         double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
                         d0 /= d3;
                         d1 /= d3;
@@ -96,19 +96,16 @@
                         double d6 = this.explosionY;
                         double d8 = this.explosionZ;
 
-                        for (float f1 = 0.3F; f > 0.0F; f -= 0.22500001F)
-                        {
+                        for (float f1 = 0.3F; f > 0.0F; f -= 0.22500001F) {
                             BlockPos blockpos = new BlockPos(d4, d6, d8);
                             IBlockState iblockstate = this.worldObj.getBlockState(blockpos);
 
-                            if (iblockstate.getBlock().getMaterial() != Material.air)
-                            {
-                                float f2 = this.exploder != null ? this.exploder.getExplosionResistance(this, this.worldObj, blockpos, iblockstate) : iblockstate.getBlock().getExplosionResistance((Entity)null);
+                            if (iblockstate.getBlock().getMaterial() != Material.air) {
+                                float f2 = this.exploder != null ? this.exploder.getExplosionResistance(this, this.worldObj, blockpos, iblockstate) : iblockstate.getBlock().getExplosionResistance((Entity) null);
                                 f -= (f2 + 0.3F) * 0.3F;
                             }
 
-                            if (f > 0.0F && (this.exploder == null || this.exploder.func_174816_a(this, this.worldObj, blockpos, iblockstate, f)))
-                            {
+                            if (f > 0.0F && (this.exploder == null || this.exploder.func_174816_a(this, this.worldObj, blockpos, iblockstate, f)) && blockpos.getY() < 256 && blockpos.getY() >= 0) { // CraftBukkit - don't wrap explosions
                                 hashset.add(blockpos);
                             }
 
@@ -123,50 +123,56 @@
 
         this.affectedBlockPositions.addAll(hashset);
         float f3 = this.explosionSize * 2.0F;
-        j = MathHelper.floor_double(this.explosionX - (double)f3 - 1.0D);
-        k = MathHelper.floor_double(this.explosionX + (double)f3 + 1.0D);
-        int j1 = MathHelper.floor_double(this.explosionY - (double)f3 - 1.0D);
-        int l = MathHelper.floor_double(this.explosionY + (double)f3 + 1.0D);
-        int k1 = MathHelper.floor_double(this.explosionZ - (double)f3 - 1.0D);
-        int i1 = MathHelper.floor_double(this.explosionZ + (double)f3 + 1.0D);
-        List list = this.worldObj.getEntitiesWithinAABBExcludingEntity(this.exploder, new AxisAlignedBB((double)j, (double)j1, (double)k1, (double)k, (double)l, (double)i1));
+        j = MathHelper.floor_double(this.explosionX - (double) f3 - 1.0D);
+        k = MathHelper.floor_double(this.explosionX + (double) f3 + 1.0D);
+        int j1 = MathHelper.floor_double(this.explosionY - (double) f3 - 1.0D);
+        int l = MathHelper.floor_double(this.explosionY + (double) f3 + 1.0D);
+        int k1 = MathHelper.floor_double(this.explosionZ - (double) f3 - 1.0D);
+        int i1 = MathHelper.floor_double(this.explosionZ + (double) f3 + 1.0D);
+        List list = this.worldObj.getEntitiesWithinAABBExcludingEntity(this.exploder, new AxisAlignedBB((double) j, (double) j1, (double) k1, (double) k, (double) l, (double) i1));
         Vec3 vec3 = new Vec3(this.explosionX, this.explosionY, this.explosionZ);
 
-        for (int l1 = 0; l1 < list.size(); ++l1)
-        {
-            Entity entity = (Entity)list.get(l1);
+        for (int l1 = 0; l1 < list.size(); ++l1) {
+            Entity entity = (Entity) list.get(l1);
 
-            if (!entity.func_180427_aV())
-            {
-                double d12 = entity.getDistance(this.explosionX, this.explosionY, this.explosionZ) / (double)f3;
+            if (!entity.func_180427_aV()) {
+                double d12 = entity.getDistance(this.explosionX, this.explosionY, this.explosionZ) / (double) f3;
 
-                if (d12 <= 1.0D)
-                {
+                if (d12 <= 1.0D) {
                     double d5 = entity.posX - this.explosionX;
-                    double d7 = entity.posY + (double)entity.getEyeHeight() - this.explosionY;
+                    double d7 = entity.posY + (double) entity.getEyeHeight() - this.explosionY;
                     double d9 = entity.posZ - this.explosionZ;
-                    double d13 = (double)MathHelper.sqrt_double(d5 * d5 + d7 * d7 + d9 * d9);
+                    double d13 = (double) MathHelper.sqrt_double(d5 * d5 + d7 * d7 + d9 * d9);
 
-                    if (d13 != 0.0D)
-                    {
+                    if (d13 != 0.0D) {
                         d5 /= d13;
                         d7 /= d13;
                         d9 /= d13;
-                        double d14 = (double)this.worldObj.getBlockDensity(vec3, entity.getEntityBoundingBox());
+                        double d14 = (double) this.worldObj.getBlockDensity(vec3, entity.getEntityBoundingBox());
                         double d10 = (1.0D - d12) * d14;
-                        entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float)((int)((d10 * d10 + d10) / 2.0D * 8.0D * (double)f3 + 1.0D)));
+                        // entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float) ((int) ((d10 * d10 + d10) / 2.0D * 8.0D * (double) f3 + 1.0D)));
+
+                        // CraftBukkit start
+                        CraftEventFactory.entityDamage = exploder;
+                        boolean wasDamaged = entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float) ((int) ((d13 * d13 + d13) / 2.0D * 8.0D * (double) f3 + 1.0D)));
+                        CraftEventFactory.entityDamage = null;
+                        if (!wasDamaged && !(entity instanceof EntityTNTPrimed || entity instanceof EntityFallingBlock)) {
+                            continue;
+                        }
+                        // CraftBukkit end
+
                         double d11 = EnchantmentProtection.func_92092_a(entity, d10);
                         entity.motionX += d5 * d11;
                         entity.motionY += d7 * d11;
                         entity.motionZ += d9 * d11;
 
-                        if (entity instanceof EntityPlayer)
-                        {
-                            this.field_77288_k.put((EntityPlayer)entity, new Vec3(d5 * d10, d7 * d10, d9 * d10));
+                        if (entity instanceof EntityPlayer) {
+                            this.field_77288_k.put((EntityPlayer) entity, new Vec3(d5 * d10, d7 * d10, d9 * d10));
                         }
                     }
                 }
@@ -170,45 +170,67 @@
         }
     }
 
-    public void doExplosionB(boolean p_77279_1_)
-    {
+    public void doExplosionB(boolean p_77279_1_) {
         this.worldObj.playSoundEffect(this.explosionX, this.explosionY, this.explosionZ, "random.explode", 4.0F, (1.0F + (this.worldObj.rand.nextFloat() - this.worldObj.rand.nextFloat()) * 0.2F) * 0.7F);
 
-        if (this.explosionSize >= 2.0F && this.isSmoking)
-        {
+        if (this.explosionSize >= 2.0F && this.isSmoking) {
             this.worldObj.spawnParticle(EnumParticleTypes.EXPLOSION_HUGE, this.explosionX, this.explosionY, this.explosionZ, 1.0D, 0.0D, 0.0D, new int[0]);
-        }
-        else
-        {
+        } else {
             this.worldObj.spawnParticle(EnumParticleTypes.EXPLOSION_LARGE, this.explosionX, this.explosionY, this.explosionZ, 1.0D, 0.0D, 0.0D, new int[0]);
         }
 
         Iterator iterator;
         BlockPos blockpos;
 
-        if (this.isSmoking)
-        {
+        if (this.isSmoking) {
+            // CraftBukkit start
+            org.bukkit.World bworld = this.worldObj.getWorld();
+            org.bukkit.entity.Entity explode = this.exploder == null ? null : this.exploder.getBukkitEntity();
+            Location location = new Location(bworld, this.explosionX, this.explosionY, this.explosionZ);
+
+            List<org.bukkit.block.Block> blockList = Lists.newArrayList();
+            for (int i1 = this.affectedBlockPositions.size() - 1; i1 >= 0; i1--) {
+                BlockPos cpos = (BlockPos) this.affectedBlockPositions.get(i1);
+                org.bukkit.block.Block bblock = bworld.getBlockAt(cpos.getX(), cpos.getY(), cpos.getZ());
+                if (bblock.getType() != org.bukkit.Material.AIR) {
+                    blockList.add(bblock);
+                }
+            }
+
+            EntityExplodeEvent event = new EntityExplodeEvent(explode, location, blockList, 0.3F);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            this.affectedBlockPositions.clear();
+
+            for (org.bukkit.block.Block bblock : event.blockList()) {
+                BlockPos coords = new BlockPos(bblock.getX(), bblock.getY(), bblock.getZ());
+                affectedBlockPositions.add(coords);
+            }
+
+            if (event.isCancelled()) {
+                this.wasCanceled = true;
+                return;
+            }
+            // CraftBukkit end
             iterator = this.affectedBlockPositions.iterator();
 
-            while (iterator.hasNext())
-            {
-                blockpos = (BlockPos)iterator.next();
+            while (iterator.hasNext()) {
+                blockpos = (BlockPos) iterator.next();
                 Block block = this.worldObj.getBlockState(blockpos).getBlock();
 
-                if (p_77279_1_)
-                {
-                    double d0 = (double)((float)blockpos.getX() + this.worldObj.rand.nextFloat());
-                    double d1 = (double)((float)blockpos.getY() + this.worldObj.rand.nextFloat());
-                    double d2 = (double)((float)blockpos.getZ() + this.worldObj.rand.nextFloat());
+                worldObj.spigotConfig.antiXrayInstance.updateNearbyBlocks(worldObj, blockpos); // Spigot
+                if (p_77279_1_) {
+                    double d0 = (double) ((float) blockpos.getX() + this.worldObj.rand.nextFloat());
+                    double d1 = (double) ((float) blockpos.getY() + this.worldObj.rand.nextFloat());
+                    double d2 = (double) ((float) blockpos.getZ() + this.worldObj.rand.nextFloat());
                     double d3 = d0 - this.explosionX;
                     double d4 = d1 - this.explosionY;
                     double d5 = d2 - this.explosionZ;
-                    double d6 = (double)MathHelper.sqrt_double(d3 * d3 + d4 * d4 + d5 * d5);
+                    double d6 = (double) MathHelper.sqrt_double(d3 * d3 + d4 * d4 + d5 * d5);
                     d3 /= d6;
                     d4 /= d6;
                     d5 /= d6;
-                    double d7 = 0.5D / (d6 / (double)this.explosionSize + 0.1D);
-                    d7 *= (double)(this.worldObj.rand.nextFloat() * this.worldObj.rand.nextFloat() + 0.3F);
+                    double d7 = 0.5D / (d6 / (double) this.explosionSize + 0.1D);
+                    d7 *= (double) (this.worldObj.rand.nextFloat() * this.worldObj.rand.nextFloat() + 0.3F);
                     d3 *= d7;
                     d4 *= d7;
                     d5 *= d7;
@@ -216,11 +216,10 @@
                     this.worldObj.spawnParticle(EnumParticleTypes.SMOKE_NORMAL, d0, d1, d2, d3, d4, d5, new int[0]);
                 }
 
-                if (block.getMaterial() != Material.air)
-                {
-                    if (block.canDropFromExplosion(this))
-                    {
-                        block.dropBlockAsItemWithChance(this.worldObj, blockpos, this.worldObj.getBlockState(blockpos), 1.0F / this.explosionSize, 0);
+                if (block.getMaterial() != Material.air) {
+                    if (block.canDropFromExplosion(this)) {
+                        // CraftBukkit - add yield
+                        block.dropBlockAsItemWithChance(this.worldObj, blockpos, this.worldObj.getBlockState(blockpos), event.getYield(), 0);
                     }
 
                     this.worldObj.setBlockState(blockpos, Blocks.air.getDefaultState(), 3);
@@ -229,40 +229,36 @@
             }
         }
 
-        if (this.isFlaming)
-        {
+        if (this.isFlaming) {
             iterator = this.affectedBlockPositions.iterator();
 
-            while (iterator.hasNext())
-            {
-                blockpos = (BlockPos)iterator.next();
+            while (iterator.hasNext()) {
+                blockpos = (BlockPos) iterator.next();
 
-                if (this.worldObj.getBlockState(blockpos).getBlock().getMaterial() == Material.air && this.worldObj.getBlockState(blockpos.down()).getBlock().isFullBlock() && this.explosionRNG.nextInt(3) == 0)
-                {
-                    this.worldObj.setBlockState(blockpos, Blocks.fire.getDefaultState());
+                if (this.worldObj.getBlockState(blockpos).getBlock().getMaterial() == Material.air && this.worldObj.getBlockState(blockpos.down()).getBlock().isFullBlock() && this.explosionRNG.nextInt(3) == 0) {
+                    // CraftBukkit start - Ignition by explosion
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBlockIgniteEvent(this.worldObj, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this).isCancelled()) {
+                        this.worldObj.setBlockState(blockpos, Blocks.fire.getDefaultState());
+                    }
+                    // CraftBukkit end
                 }
             }
         }
     }
 
-    public Map func_77277_b()
-    {
+    public Map func_77277_b() {
         return this.field_77288_k;
     }
 
-    public EntityLivingBase getExplosivePlacedBy()
-    {
-        return this.exploder == null ? null : (this.exploder instanceof EntityTNTPrimed ? ((EntityTNTPrimed)this.exploder).getTntPlacedBy() : (this.exploder instanceof EntityLivingBase ? (EntityLivingBase)this.exploder : null));
+    public EntityLivingBase getExplosivePlacedBy() {
+        return this.exploder == null ? null : (this.exploder instanceof EntityTNTPrimed ? ((EntityTNTPrimed) this.exploder).getTntPlacedBy() : (this.exploder instanceof EntityLivingBase ? (EntityLivingBase) this.exploder : null));
     }
 
-    public void func_180342_d()
-    {
+    public void func_180342_d() {
         this.affectedBlockPositions.clear();
     }
 
-    public List func_180343_e()
-    {
+    public List func_180343_e() {
         return this.affectedBlockPositions;
     }
-}
+}
