--- decompiled\net\minecraft\world\Explosion.java
+++ src\main\java\net\minecraft\world\Explosion.java
@@ -1,78 +1,79 @@
 package net.minecraft.world;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.EnchantmentProtection;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.item.EntityFallingBlock;
 import net.minecraft.entity.item.EntityTNTPrimed;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.Vec3;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityExplodeEvent;
+
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Sets;
+
 public class Explosion
 {
+
     private final boolean isFlaming;
     private final boolean isSmoking;
     private final Random explosionRNG;
     private final World worldObj;
     private final double explosionX;
     private final double explosionY;
     private final double explosionZ;
-    private final Entity exploder;
+    public final Entity exploder; // SpigotMCP -- Apply access transformation
     private final float explosionSize;
     private final List affectedBlockPositions;
     private final Map field_77288_k;
     private static final String __OBFID = "CL_00000134";
+    public boolean wasCanceled = false; // CraftBukkit - add field
 
-    @SideOnly(Side.CLIENT)
-    public Explosion(World worldIn, Entity p_i45752_2_, double p_i45752_3_, double p_i45752_5_, double p_i45752_7_, float p_i45752_9_, List p_i45752_10_)
-    {
-        this(worldIn, p_i45752_2_, p_i45752_3_, p_i45752_5_, p_i45752_7_, p_i45752_9_, false, true, p_i45752_10_);
-    }
-
-    @SideOnly(Side.CLIENT)
-    public Explosion(World worldIn, Entity p_i45753_2_, double p_i45753_3_, double p_i45753_5_, double p_i45753_7_, float p_i45753_9_, boolean p_i45753_10_, boolean p_i45753_11_, List p_i45753_12_)
-    {
-        this(worldIn, p_i45753_2_, p_i45753_3_, p_i45753_5_, p_i45753_7_, p_i45753_9_, p_i45753_10_, p_i45753_11_);
-        this.affectedBlockPositions.addAll(p_i45753_12_);
-    }
-
     public Explosion(World worldIn, Entity p_i45754_2_, double p_i45754_3_, double p_i45754_5_, double p_i45754_7_, float p_i45754_9_, boolean p_i45754_10_, boolean p_i45754_11_)
     {
         this.explosionRNG = new Random();
         this.affectedBlockPositions = Lists.newArrayList();
         this.field_77288_k = Maps.newHashMap();
         this.worldObj = worldIn;
         this.exploder = p_i45754_2_;
-        this.explosionSize = p_i45754_9_;
+        this.explosionSize = (float)Math.max(p_i45754_9_, 0.0); // CraftBukkit - clamp bad values
         this.explosionX = p_i45754_3_;
         this.explosionY = p_i45754_5_;
         this.explosionZ = p_i45754_7_;
         this.isFlaming = p_i45754_10_;
         this.isSmoking = p_i45754_11_;
     }
 
     public void doExplosionA()
     {
+        // CraftBukkit start
+        if (this.explosionSize < 0.1F)
+        {
+            return;
+        }
+
+        // CraftBukkit end
         HashSet hashset = Sets.newHashSet();
         boolean flag = true;
         int j;
         int k;
 
@@ -105,11 +106,11 @@
                             {
                                 float f2 = this.exploder != null ? this.exploder.getExplosionResistance(this, this.worldObj, blockpos, iblockstate) : iblockstate.getBlock().getExplosionResistance((Entity)null);
                                 f -= (f2 + 0.3F) * 0.3F;
                             }
 
-                            if (f > 0.0F && (this.exploder == null || this.exploder.func_174816_a(this, this.worldObj, blockpos, iblockstate, f)))
+                            if (f > 0.0F && (this.exploder == null || this.exploder.func_174816_a(this, this.worldObj, blockpos, iblockstate, f)) && blockpos.getY() < 256 && blockpos.getY() >= 0)   // CraftBukkit - don't wrap explosions
                             {
                                 hashset.add(blockpos);
                             }
 
                             d4 += d0 * 0.30000001192092896D;
@@ -152,11 +153,22 @@
                         d5 /= d13;
                         d7 /= d13;
                         d9 /= d13;
                         double d14 = (double)this.worldObj.getBlockDensity(vec3, entity.getEntityBoundingBox());
                         double d10 = (1.0D - d12) * d14;
-                        entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float)((int)((d10 * d10 + d10) / 2.0D * 8.0D * (double)f3 + 1.0D)));
+                        // entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float) ((int) ((d10 * d10 + d10) / 2.0D * 8.0D * (double) f3 + 1.0D)));
+                        // CraftBukkit start
+                        CraftEventFactory.entityDamage = exploder;
+                        boolean wasDamaged = entity.attackEntityFrom(DamageSource.setExplosionSource(this), (float)((int)((d13 * d13 + d13) / 2.0D * 8.0D * (double)f3 + 1.0D)));
+                        CraftEventFactory.entityDamage = null;
+
+                        if (!wasDamaged && !(entity instanceof EntityTNTPrimed || entity instanceof EntityFallingBlock))
+                        {
+                            continue;
+                        }
+
+                        // CraftBukkit end
                         double d11 = EnchantmentProtection.func_92092_a(entity, d10);
                         entity.motionX += d5 * d11;
                         entity.motionY += d7 * d11;
                         entity.motionZ += d9 * d11;
 
@@ -186,16 +198,51 @@
         Iterator iterator;
         BlockPos blockpos;
 
         if (this.isSmoking)
         {
+            // CraftBukkit start
+            org.bukkit.World bworld = this.worldObj.getWorld();
+            org.bukkit.entity.Entity explode = this.exploder == null ? null : this.exploder.getBukkitEntity();
+            Location location = new Location(bworld, this.explosionX, this.explosionY, this.explosionZ);
+            List<org.bukkit.block.Block> blockList = Lists.newArrayList();
+
+            for (int i1 = this.affectedBlockPositions.size() - 1; i1 >= 0; i1--)
+            {
+                BlockPos cpos = (BlockPos)this.affectedBlockPositions.get(i1);
+                org.bukkit.block.Block bblock = bworld.getBlockAt(cpos.getX(), cpos.getY(), cpos.getZ());
+
+                if (bblock.getType() != org.bukkit.Material.AIR)
+                {
+                    blockList.add(bblock);
+                }
+            }
+
+            EntityExplodeEvent event = new EntityExplodeEvent(explode, location, blockList, 0.3F);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+            this.affectedBlockPositions.clear();
+
+            for (org.bukkit.block.Block bblock : event.blockList())
+            {
+                BlockPos coords = new BlockPos(bblock.getX(), bblock.getY(), bblock.getZ());
+                affectedBlockPositions.add(coords);
+            }
+
+            if (event.isCancelled())
+            {
+                this.wasCanceled = true;
+                return;
+            }
+
+            // CraftBukkit end
             iterator = this.affectedBlockPositions.iterator();
 
             while (iterator.hasNext())
             {
                 blockpos = (BlockPos)iterator.next();
                 Block block = this.worldObj.getBlockState(blockpos).getBlock();
+                worldObj.spigotConfig.antiXrayInstance.updateNearbyBlocks(worldObj, blockpos); // Spigot
 
                 if (p_77279_1_)
                 {
                     double d0 = (double)((float)blockpos.getX() + this.worldObj.rand.nextFloat());
                     double d1 = (double)((float)blockpos.getY() + this.worldObj.rand.nextFloat());
@@ -218,11 +265,12 @@
 
                 if (block.getMaterial() != Material.air)
                 {
                     if (block.canDropFromExplosion(this))
                     {
-                        block.dropBlockAsItemWithChance(this.worldObj, blockpos, this.worldObj.getBlockState(blockpos), 1.0F / this.explosionSize, 0);
+                        // CraftBukkit - add yield
+                        block.dropBlockAsItemWithChance(this.worldObj, blockpos, this.worldObj.getBlockState(blockpos), event.getYield(), 0);
                     }
 
                     this.worldObj.setBlockState(blockpos, Blocks.air.getDefaultState(), 3);
                     block.onBlockDestroyedByExplosion(this.worldObj, blockpos, this);
                 }
@@ -237,11 +285,17 @@
             {
                 blockpos = (BlockPos)iterator.next();
 
                 if (this.worldObj.getBlockState(blockpos).getBlock().getMaterial() == Material.air && this.worldObj.getBlockState(blockpos.down()).getBlock().isFullBlock() && this.explosionRNG.nextInt(3) == 0)
                 {
-                    this.worldObj.setBlockState(blockpos, Blocks.fire.getDefaultState());
+                    // CraftBukkit start - Ignition by explosion
+                    if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBlockIgniteEvent(this.worldObj, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this).isCancelled())
+                    {
+                        this.worldObj.setBlockState(blockpos, Blocks.fire.getDefaultState());
+                    }
+
+                    // CraftBukkit end
                 }
             }
         }
     }
 
