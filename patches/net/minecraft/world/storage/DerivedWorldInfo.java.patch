--- decompiled\net\minecraft\world\storage\DerivedWorldInfo.java
+++ src\main\java\net\minecraft\world\storage\DerivedWorldInfo.java
@@ -4,15 +4,15 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class DerivedWorldInfo extends WorldInfo
 {
+
     private final WorldInfo theWorldInfo;
     private static final String __OBFID = "CL_00000584";
 
     public DerivedWorldInfo(WorldInfo p_i2145_1_)
     {
@@ -57,16 +57,10 @@
     public long getWorldTime()
     {
         return this.theWorldInfo.getWorldTime();
     }
 
-    @SideOnly(Side.CLIENT)
-    public long getSizeOnDisk()
-    {
-        return this.theWorldInfo.getSizeOnDisk();
-    }
-
     public NBTTagCompound getPlayerNBTTagCompound()
     {
         return this.theWorldInfo.getPlayerNBTTagCompound();
     }
 
@@ -78,16 +72,10 @@
     public int getSaveVersion()
     {
         return this.theWorldInfo.getSaveVersion();
     }
 
-    @SideOnly(Side.CLIENT)
-    public long getLastTimePlayed()
-    {
-        return this.theWorldInfo.getLastTimePlayed();
-    }
-
     public boolean isThundering()
     {
         return this.theWorldInfo.isThundering();
     }
 
@@ -109,37 +97,46 @@
     public WorldSettings.GameType getGameType()
     {
         return this.theWorldInfo.getGameType();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void setSpawnX(int x) {}
+    public void incrementTotalWorldTime(long time)
+    {
+    }
 
-    @SideOnly(Side.CLIENT)
-    public void setSpawnY(int y) {}
+    public void setWorldTime(long time)
+    {
+    }
 
-    public void incrementTotalWorldTime(long time) {}
+    public void setSpawn(BlockPos spawnPoint)
+    {
+    }
 
-    @SideOnly(Side.CLIENT)
-    public void setSpawnZ(int z) {}
+    public void setWorldName(String worldName)
+    {
+    }
 
-    public void setWorldTime(long time) {}
+    public void setSaveVersion(int version)
+    {
+    }
 
-    public void setSpawn(BlockPos spawnPoint) {}
+    public void setThundering(boolean thunderingIn)
+    {
+    }
 
-    public void setWorldName(String worldName) {}
+    public void setThunderTime(int time)
+    {
+    }
 
-    public void setSaveVersion(int version) {}
+    public void setRaining(boolean isRaining)
+    {
+    }
 
-    public void setThundering(boolean thunderingIn) {}
+    public void setRainTime(int time)
+    {
+    }
 
-    public void setThunderTime(int time) {}
-
-    public void setRaining(boolean isRaining) {}
-
-    public void setRainTime(int time) {}
-
     public boolean isMapFeaturesEnabled()
     {
         return this.theWorldInfo.isMapFeaturesEnabled();
     }
 
@@ -151,25 +148,31 @@
     public WorldType getTerrainType()
     {
         return this.theWorldInfo.getTerrainType();
     }
 
-    public void setTerrainType(WorldType type) {}
+    public void setTerrainType(WorldType type)
+    {
+    }
 
     public boolean areCommandsAllowed()
     {
         return this.theWorldInfo.areCommandsAllowed();
     }
 
-    public void setAllowCommands(boolean allow) {}
+    public void setAllowCommands(boolean allow)
+    {
+    }
 
     public boolean isInitialized()
     {
         return this.theWorldInfo.isInitialized();
     }
 
-    public void setServerInitialized(boolean initializedIn) {}
+    public void setServerInitialized(boolean initializedIn)
+    {
+    }
 
     public GameRules getGameRulesInstance()
     {
         return this.theWorldInfo.getGameRulesInstance();
     }
@@ -177,14 +180,18 @@
     public EnumDifficulty getDifficulty()
     {
         return this.theWorldInfo.getDifficulty();
     }
 
-    public void setDifficulty(EnumDifficulty newDifficulty) {}
+    public void setDifficulty(EnumDifficulty newDifficulty)
+    {
+    }
 
     public boolean isDifficultyLocked()
     {
         return this.theWorldInfo.isDifficultyLocked();
     }
 
-    public void setDifficultyLocked(boolean locked) {}
+    public void setDifficultyLocked(boolean locked)
+    {
+    }
 }
