--- decompiled\net\minecraft\world\biome\BiomeGenBase.java
+++ src\main\java\net\minecraft\world\biome\BiomeGenBase.java
@@ -1,16 +1,13 @@
 package net.minecraft.world.biome;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
-import java.awt.Color;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
 import java.util.Set;
+
 import net.minecraft.block.BlockFlower;
 import net.minecraft.block.BlockSand;
 import net.minecraft.block.BlockTallGrass;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -29,31 +26,32 @@
 import net.minecraft.entity.passive.EntityRabbit;
 import net.minecraft.entity.passive.EntitySheep;
 import net.minecraft.entity.passive.EntitySquid;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.MathHelper;
 import net.minecraft.util.WeightedRandom;
-import net.minecraft.world.ColorizerFoliage;
-import net.minecraft.world.ColorizerGrass;
 import net.minecraft.world.World;
 import net.minecraft.world.chunk.ChunkPrimer;
 import net.minecraft.world.gen.NoiseGeneratorPerlin;
 import net.minecraft.world.gen.feature.WorldGenAbstractTree;
 import net.minecraft.world.gen.feature.WorldGenBigTree;
 import net.minecraft.world.gen.feature.WorldGenDoublePlant;
 import net.minecraft.world.gen.feature.WorldGenSwamp;
 import net.minecraft.world.gen.feature.WorldGenTallGrass;
 import net.minecraft.world.gen.feature.WorldGenTrees;
 import net.minecraft.world.gen.feature.WorldGenerator;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Sets;
+
 public abstract class BiomeGenBase
 {
+
     private static final Logger logger = LogManager.getLogger();
     protected static final BiomeGenBase.Height height_Default = new BiomeGenBase.Height(0.1F, 0.2F);
     protected static final BiomeGenBase.Height height_ShallowWaters = new BiomeGenBase.Height(-0.5F, 0.0F);
     protected static final BiomeGenBase.Height height_Oceans = new BiomeGenBase.Height(-1.0F, 0.1F);
     protected static final BiomeGenBase.Height height_DeepOceans = new BiomeGenBase.Height(-1.8F, 0.1F);
@@ -135,11 +133,11 @@
     protected WorldGenTrees worldGeneratorTrees;
     protected WorldGenBigTree worldGeneratorBigTree;
     protected WorldGenSwamp worldGeneratorSwamp;
     private static final String __OBFID = "CL_00000158";
 
-    protected BiomeGenBase(int p_i1971_1_)
+    public BiomeGenBase(int p_i1971_1_)
     {
         this.topBlock = Blocks.grass.getDefaultState();
         this.fillerBlock = Blocks.dirt.getDefaultState();
         this.fillerBlockMetadata = 5169201;
         this.minHeight = height_Default.rootHeight;
@@ -172,16 +170,16 @@
         this.spawnableMonsterList.add(new BiomeGenBase.SpawnListEntry(EntityWitch.class, 5, 1, 1));
         this.spawnableWaterCreatureList.add(new BiomeGenBase.SpawnListEntry(EntitySquid.class, 10, 4, 4));
         this.spawnableCaveCreatureList.add(new BiomeGenBase.SpawnListEntry(EntityBat.class, 10, 8, 8));
     }
 
-    protected BiomeDecorator createBiomeDecorator()
+    public BiomeDecorator createBiomeDecorator()
     {
         return new BiomeDecorator();
     }
 
-    protected BiomeGenBase setTemperatureRainfall(float p_76732_1_, float p_76732_2_)
+    public BiomeGenBase setTemperatureRainfall(float p_76732_1_, float p_76732_2_)
     {
         if (p_76732_1_ > 0.1F && p_76732_1_ < 0.2F)
         {
             throw new IllegalArgumentException("Please avoid temperatures in the range 0.1 - 0.2 because of snow");
         }
@@ -191,18 +189,18 @@
             this.rainfall = p_76732_2_;
             return this;
         }
     }
 
-    protected final BiomeGenBase setHeight(BiomeGenBase.Height p_150570_1_)
+    public final BiomeGenBase setHeight(BiomeGenBase.Height p_150570_1_)
     {
         this.minHeight = p_150570_1_.rootHeight;
         this.maxHeight = p_150570_1_.variation;
         return this;
     }
 
-    protected BiomeGenBase setDisableRain()
+    public BiomeGenBase setDisableRain()
     {
         this.enableRain = false;
         return this;
     }
 
@@ -219,41 +217,41 @@
     public BlockFlower.EnumFlowerType pickRandomFlower(Random p_180623_1_, BlockPos p_180623_2_)
     {
         return p_180623_1_.nextInt(3) > 0 ? BlockFlower.EnumFlowerType.DANDELION : BlockFlower.EnumFlowerType.POPPY;
     }
 
-    protected BiomeGenBase setEnableSnow()
+    public BiomeGenBase setEnableSnow()
     {
         this.enableSnow = true;
         return this;
     }
 
-    protected BiomeGenBase setBiomeName(String p_76735_1_)
+    public BiomeGenBase setBiomeName(String p_76735_1_)
     {
         this.biomeName = p_76735_1_;
         return this;
     }
 
-    protected BiomeGenBase setFillerBlockMetadata(int p_76733_1_)
+    public BiomeGenBase setFillerBlockMetadata(int p_76733_1_)
     {
         this.fillerBlockMetadata = p_76733_1_;
         return this;
     }
 
-    protected BiomeGenBase setColor(int p_76739_1_)
+    public BiomeGenBase setColor(int p_76739_1_)
     {
         this.func_150557_a(p_76739_1_, false);
         return this;
     }
 
-    protected BiomeGenBase func_150563_c(int p_150563_1_)
+    public BiomeGenBase func_150563_c(int p_150563_1_)
     {
         this.field_150609_ah = p_150563_1_;
         return this;
     }
 
-    protected BiomeGenBase func_150557_a(int p_150557_1_, boolean p_150557_2_)
+    public BiomeGenBase func_150557_a(int p_150557_1_, boolean p_150557_2_)
     {
         this.color = p_150557_1_;
 
         if (p_150557_2_)
         {
@@ -265,18 +263,10 @@
         }
 
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getSkyColorByTemp(float p_76731_1_)
-    {
-        p_76731_1_ /= 3.0F;
-        p_76731_1_ = MathHelper.clamp_float(p_76731_1_, -1.0F, 1.0F);
-        return Color.getHSBColor(0.62222224F - p_76731_1_ * 0.05F, 0.5F + p_76731_1_ * 0.1F, 1.0F).getRGB();
-    }
-
     public List getSpawnableList(EnumCreatureType p_76747_1_)
     {
         switch (BiomeGenBase.SwitchEnumCreatureType.field_180275_a[p_76747_1_.ordinal()])
         {
             case 1:
@@ -315,16 +305,10 @@
     public final int getIntRainfall()
     {
         return (int)(this.rainfall * 65536.0F);
     }
 
-    @SideOnly(Side.CLIENT)
-    public final float getFloatRainfall()
-    {
-        return this.rainfall;
-    }
-
     public final float getFloatTemperature(BlockPos pos)
     {
         if (pos.getY() > 64)
         {
             float f = (float)(temperatureNoise.func_151601_a((double)pos.getX() * 1.0D / 8.0D, (double)pos.getZ() * 1.0D / 8.0D) * 4.0D);
@@ -339,26 +323,10 @@
     public void decorate(World worldIn, Random p_180624_2_, BlockPos p_180624_3_)
     {
         this.theBiomeDecorator.decorate(worldIn, p_180624_2_, this, p_180624_3_);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getGrassColorAtPos(BlockPos p_180627_1_)
-    {
-        double d0 = (double)MathHelper.clamp_float(this.getFloatTemperature(p_180627_1_), 0.0F, 1.0F);
-        double d1 = (double)MathHelper.clamp_float(this.getFloatRainfall(), 0.0F, 1.0F);
-        return ColorizerGrass.getGrassColor(d0, d1);
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getFoliageColorAtPos(BlockPos p_180625_1_)
-    {
-        double d0 = (double)MathHelper.clamp_float(this.getFloatTemperature(p_180625_1_), 0.0F, 1.0F);
-        double d1 = (double)MathHelper.clamp_float(this.getFloatRainfall(), 0.0F, 1.0F);
-        return ColorizerFoliage.getFoliageColor(d0, d1);
-    }
-
     public boolean isSnowyBiome()
     {
         return this.enableSnow;
     }
 
@@ -449,16 +417,16 @@
                 }
             }
         }
     }
 
-    protected BiomeGenBase createMutation()
+    public BiomeGenBase createMutation()
     {
         return this.createMutatedBiome(this.biomeID + 128);
     }
 
-    protected BiomeGenBase createMutatedBiome(int p_180277_1_)
+    public BiomeGenBase createMutatedBiome(int p_180277_1_)
     {
         return new BiomeGenMutated(p_180277_1_, this);
     }
 
     public Class getBiomeClass()
@@ -555,10 +523,11 @@
         DOUBLE_PLANT_GENERATOR = new WorldGenDoublePlant();
     }
 
     public static class Height
         {
+
             public float rootHeight;
             public float variation;
             private static final String __OBFID = "CL_00000159";
 
             public Height(float p_i45371_1_, float p_i45371_2_)
@@ -573,10 +542,11 @@
             }
         }
 
     public static class SpawnListEntry extends WeightedRandom.Item
         {
+
             public Class entityClass;
             public int minGroupCount;
             public int maxGroupCount;
             private static final String __OBFID = "CL_00000161";
 
@@ -594,10 +564,11 @@
             }
         }
 
     static final class SwitchEnumCreatureType
         {
+
             static final int[] field_180275_a = new int[EnumCreatureType.values().length];
             private static final String __OBFID = "CL_00002150";
 
             static
             {
