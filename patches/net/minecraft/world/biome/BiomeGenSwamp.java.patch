--- decompiled\net\minecraft\world\biome\BiomeGenSwamp.java
+++ src\main\java\net\minecraft\world\biome\BiomeGenSwamp.java
@@ -1,25 +1,24 @@
 package net.minecraft.world.biome;
 
 import java.util.Random;
+
 import net.minecraft.block.BlockFlower;
 import net.minecraft.block.material.Material;
 import net.minecraft.entity.monster.EntitySlime;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 import net.minecraft.world.chunk.ChunkPrimer;
 import net.minecraft.world.gen.feature.WorldGenAbstractTree;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class BiomeGenSwamp extends BiomeGenBase
-{
+
+public class BiomeGenSwamp extends BiomeGenBase {
+
     private static final String __OBFID = "CL_00000185";
 
-    protected BiomeGenSwamp(int p_i1988_1_)
-    {
+    protected BiomeGenSwamp(int p_i1988_1_) {
         super(p_i1988_1_);
         this.theBiomeDecorator.treesPerChunk = 2;
         this.theBiomeDecorator.flowersPerChunk = 1;
         this.theBiomeDecorator.deadBushPerChunk = 1;
         this.theBiomeDecorator.mushroomsPerChunk = 8;
@@ -31,39 +30,31 @@
         this.theBiomeDecorator.grassPerChunk = 5;
         this.waterColorMultiplier = 14745518;
         this.spawnableMonsterList.add(new BiomeGenBase.SpawnListEntry(EntitySlime.class, 1, 1, 1));
     }
 
-    public WorldGenAbstractTree genBigTreeChance(Random p_150567_1_)
-    {
+    public WorldGenAbstractTree genBigTreeChance(Random p_150567_1_) {
         return this.worldGeneratorSwamp;
     }
 
-    public BlockFlower.EnumFlowerType pickRandomFlower(Random p_180623_1_, BlockPos p_180623_2_)
-    {
+    public BlockFlower.EnumFlowerType pickRandomFlower(Random p_180623_1_, BlockPos p_180623_2_) {
         return BlockFlower.EnumFlowerType.BLUE_ORCHID;
     }
 
-    public void genTerrainBlocks(World worldIn, Random p_180622_2_, ChunkPrimer p_180622_3_, int p_180622_4_, int p_180622_5_, double p_180622_6_)
-    {
-        double d1 = field_180281_af.func_151601_a((double)p_180622_4_ * 0.25D, (double)p_180622_5_ * 0.25D);
+    public void genTerrainBlocks(World worldIn, Random p_180622_2_, ChunkPrimer p_180622_3_, int p_180622_4_, int p_180622_5_, double p_180622_6_) {
+        double d1 = field_180281_af.func_151601_a((double) p_180622_4_ * 0.25D, (double) p_180622_5_ * 0.25D);
 
-        if (d1 > 0.0D)
-        {
+        if (d1 > 0.0D) {
             int k = p_180622_4_ & 15;
             int l = p_180622_5_ & 15;
 
-            for (int i1 = 255; i1 >= 0; --i1)
-            {
-                if (p_180622_3_.getBlockState(l, i1, k).getBlock().getMaterial() != Material.air)
-                {
-                    if (i1 == 62 && p_180622_3_.getBlockState(l, i1, k).getBlock() != Blocks.water)
-                    {
+            for (int i1 = 255; i1 >= 0; --i1) {
+                if (p_180622_3_.getBlockState(l, i1, k).getBlock().getMaterial() != Material.air) {
+                    if (i1 == 62 && p_180622_3_.getBlockState(l, i1, k).getBlock() != Blocks.water) {
                         p_180622_3_.setBlockState(l, i1, k, Blocks.water.getDefaultState());
 
-                        if (d1 < 0.12D)
-                        {
+                        if (d1 < 0.12D) {
                             p_180622_3_.setBlockState(l, i1 + 1, k, Blocks.waterlily.getDefaultState());
                         }
                     }
 
                     break;
@@ -71,19 +62,6 @@
             }
         }
 
         this.generateBiomeTerrain(worldIn, p_180622_2_, p_180622_3_, p_180622_4_, p_180622_5_, p_180622_6_);
     }
-
-    @SideOnly(Side.CLIENT)
-    public int getGrassColorAtPos(BlockPos p_180627_1_)
-    {
-        double d0 = field_180281_af.func_151601_a((double)p_180627_1_.getX() * 0.0225D, (double)p_180627_1_.getZ() * 0.0225D);
-        return d0 < -0.1D ? 5011004 : 6975545;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getFoliageColorAtPos(BlockPos p_180625_1_)
-    {
-        return 6975545;
-    }
 }
