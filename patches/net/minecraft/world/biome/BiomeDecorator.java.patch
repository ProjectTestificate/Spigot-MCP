---a/net/minecraft/world/biome/BiomeDecorator.java
+++b/net/minecraft/world/biome/BiomeDecorator.java
@@ -1,6 +1,7 @@
 package net.minecraft.world.biome;
 
 import java.util.Random;
+
 import net.minecraft.block.BlockFlower;
 import net.minecraft.block.BlockStone;
 import net.minecraft.block.material.Material;
@@ -23,87 +23,87 @@
 import net.minecraft.world.gen.feature.WorldGenWaterlily;
 import net.minecraft.world.gen.feature.WorldGenerator;
 
-public class BiomeDecorator
-{
-    protected World currentWorld;
-    protected Random randomGenerator;
-    protected BlockPos field_180294_c;
-    protected ChunkProviderSettings chunkProviderSettings;
-    protected WorldGenerator clayGen = new WorldGenClay(4);
-    protected WorldGenerator sandGen;
-    protected WorldGenerator gravelAsSandGen;
-    protected WorldGenerator dirtGen;
-    protected WorldGenerator gravelGen;
-    protected WorldGenerator graniteGen;
-    protected WorldGenerator dioriteGen;
-    protected WorldGenerator andesiteGen;
-    protected WorldGenerator coalGen;
-    protected WorldGenerator ironGen;
-    protected WorldGenerator goldGen;
-    protected WorldGenerator redstoneGen;
-    protected WorldGenerator diamondGen;
-    protected WorldGenerator lapisGen;
-    protected WorldGenFlowers yellowFlowerGen;
-    protected WorldGenerator mushroomBrownGen;
-    protected WorldGenerator mushroomRedGen;
-    protected WorldGenerator bigMushroomGen;
-    protected WorldGenerator reedGen;
-    protected WorldGenerator cactusGen;
-    protected WorldGenerator waterlilyGen;
-    protected int waterlilyPerChunk;
-    protected int treesPerChunk;
-    protected int flowersPerChunk;
-    protected int grassPerChunk;
-    protected int deadBushPerChunk;
-    protected int mushroomsPerChunk;
-    protected int reedsPerChunk;
-    protected int cactiPerChunk;
-    protected int sandPerChunk;
-    protected int sandPerChunk2;
-    protected int clayPerChunk;
-    protected int bigMushroomsPerChunk;
+public class BiomeDecorator {
+
+    public World currentWorld;
+    public Random randomGenerator;
+    public BlockPos field_180294_c;
+    public ChunkProviderSettings chunkProviderSettings;
+    public WorldGenerator clayGen = new WorldGenClay(4);
+    public WorldGenerator sandGen;
+    public WorldGenerator gravelAsSandGen;
+    public WorldGenerator dirtGen;
+    public WorldGenerator gravelGen;
+    public WorldGenerator graniteGen;
+    public WorldGenerator dioriteGen;
+    public WorldGenerator andesiteGen;
+    public WorldGenerator coalGen;
+    public WorldGenerator ironGen;
+    public WorldGenerator goldGen;
+    public WorldGenerator redstoneGen;
+    public WorldGenerator diamondGen;
+    public WorldGenerator lapisGen;
+    public WorldGenFlowers yellowFlowerGen;
+    public WorldGenerator mushroomBrownGen;
+    public WorldGenerator mushroomRedGen;
+    public WorldGenerator bigMushroomGen;
+    public WorldGenerator reedGen;
+    public WorldGenerator cactusGen;
+    public WorldGenerator waterlilyGen;
+    public int waterlilyPerChunk;
+    public int treesPerChunk;
+    public int flowersPerChunk;
+    public int grassPerChunk;
+    public int deadBushPerChunk;
+    public int mushroomsPerChunk;
+    public int reedsPerChunk;
+    public int cactiPerChunk;
+    public int sandPerChunk;
+    public int sandPerChunk2;
+    public int clayPerChunk;
+    public int bigMushroomsPerChunk;
     public boolean generateLakes;
     private static final String __OBFID = "CL_00000164";
 
-    public BiomeDecorator()
-    {
+    public BiomeDecorator() {
         this.sandGen = new WorldGenSand(Blocks.sand, 7);
         this.gravelAsSandGen = new WorldGenSand(Blocks.gravel, 6);
         this.yellowFlowerGen = new WorldGenFlowers(Blocks.yellow_flower, BlockFlower.EnumFlowerType.DANDELION);
@@ -84,24 +84,17 @@
         this.generateLakes = true;
     }
 
-    public void decorate(World worldIn, Random p_180292_2_, BiomeGenBase p_180292_3_, BlockPos p_180292_4_)
-    {
-        if (this.currentWorld != null)
-        {
+    public void decorate(World worldIn, Random p_180292_2_, BiomeGenBase p_180292_3_, BlockPos p_180292_4_) {
+        if (this.currentWorld != null) {
             throw new RuntimeException("Already decorating");
-        }
-        else
-        {
+        } else {
             this.currentWorld = worldIn;
             String s = worldIn.getWorldInfo().getGeneratorOptions();
 
-            if (s != null)
-            {
+            if (s != null) {
                 this.chunkProviderSettings = ChunkProviderSettings.Factory.func_177865_a(s).func_177864_b();
-            }
-            else
-            {
+            } else {
                 this.chunkProviderSettings = ChunkProviderSettings.Factory.func_177865_a("").func_177864_b();
             }
 
@@ -123,29 +123,25 @@
         }
     }
 
-    protected void genDecorations(BiomeGenBase p_150513_1_)
-    {
+    protected void genDecorations(BiomeGenBase p_150513_1_) {
         this.generateOres();
         int i;
         int j;
         int k;
 
-        for (i = 0; i < this.sandPerChunk2; ++i)
-        {
+        for (i = 0; i < this.sandPerChunk2; ++i) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
             this.sandGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getTopSolidOrLiquidBlock(this.field_180294_c.add(j, 0, k)));
         }
 
-        for (i = 0; i < this.clayPerChunk; ++i)
-        {
+        for (i = 0; i < this.clayPerChunk; ++i) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
             this.clayGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getTopSolidOrLiquidBlock(this.field_180294_c.add(j, 0, k)));
         }
 
-        for (i = 0; i < this.sandPerChunk; ++i)
-        {
+        for (i = 0; i < this.sandPerChunk; ++i) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
             this.gravelAsSandGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getTopSolidOrLiquidBlock(this.field_180294_c.add(j, 0, k)));
@@ -153,86 +153,74 @@
 
         i = this.treesPerChunk;
 
-        if (this.randomGenerator.nextInt(10) == 0)
-        {
+        if (this.randomGenerator.nextInt(10) == 0) {
             ++i;
         }
 
         int l;
         BlockPos blockpos;
 
-        for (j = 0; j < i; ++j)
-        {
+        for (j = 0; j < i; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
             WorldGenAbstractTree worldgenabstracttree = p_150513_1_.genBigTreeChance(this.randomGenerator);
             worldgenabstracttree.func_175904_e();
-            blockpos = this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l));
+            blockpos = this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)); // CraftBukkit - Prevent crash
 
-            if (worldgenabstracttree.generate(this.currentWorld, this.randomGenerator, blockpos))
-            {
+            if (worldgenabstracttree.generate(this.currentWorld, this.randomGenerator, blockpos)) {
                 worldgenabstracttree.func_180711_a(this.currentWorld, this.randomGenerator, blockpos);
             }
         }
 
-        for (j = 0; j < this.bigMushroomsPerChunk; ++j)
-        {
+        for (j = 0; j < this.bigMushroomsPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            this.bigMushroomGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)));
+            this.bigMushroomGen.generate(this.currentWorld, this.randomGenerator, this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)));  // CraftBukkit - Prevent crash
         }
 
         int i1;
 
-        for (j = 0; j < this.flowersPerChunk; ++j)
-        {
+        for (j = 0; j < this.flowersPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() + 32);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() + 32); // CraftBukkit - Prevent crash
             blockpos = this.field_180294_c.add(k, i1, l);
             BlockFlower.EnumFlowerType enumflowertype = p_150513_1_.pickRandomFlower(this.randomGenerator, blockpos);
             BlockFlower blockflower = enumflowertype.getBlockType().getBlock();
 
-            if (blockflower.getMaterial() != Material.air)
-            {
+            if (blockflower.getMaterial() != Material.air) {
                 this.yellowFlowerGen.setGeneratedBlock(blockflower, enumflowertype);
                 this.yellowFlowerGen.generate(this.currentWorld, this.randomGenerator, blockpos);
             }
         }
 
-        for (j = 0; j < this.grassPerChunk; ++j)
-        {
+        for (j = 0; j < this.grassPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             p_150513_1_.getRandomWorldGenForGrass(this.randomGenerator).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        for (j = 0; j < this.deadBushPerChunk; ++j)
-        {
+        for (j = 0; j < this.deadBushPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             (new WorldGenDeadBush()).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
         j = 0;
 
-        while (j < this.waterlilyPerChunk)
-        {
+        while (j < this.waterlilyPerChunk) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             blockpos = this.field_180294_c.add(k, i1, l);
 
-            while (true)
-            {
-                if (blockpos.getY() > 0)
-                {
+            while (true) {
+                if (blockpos.getY() > 0) {
                     BlockPos blockpos3 = blockpos.down();
 
-                    if (this.currentWorld.isAirBlock(blockpos3))
-                    {
+                    if (this.currentWorld.isAirBlock(blockpos3)) {
                         blockpos = blockpos3;
                         continue;
                     }
@@ -244,134 +244,121 @@
             }
         }
 
-        for (j = 0; j < this.mushroomsPerChunk; ++j)
-        {
-            if (this.randomGenerator.nextInt(4) == 0)
-            {
+        for (j = 0; j < this.mushroomsPerChunk; ++j) {
+            if (this.randomGenerator.nextInt(4) == 0) {
                 k = this.randomGenerator.nextInt(16) + 8;
                 l = this.randomGenerator.nextInt(16) + 8;
-                BlockPos blockpos2 = this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l));
+                BlockPos blockpos2 = this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)); // CraftBukkit - Prevent crash
                 this.mushroomBrownGen.generate(this.currentWorld, this.randomGenerator, blockpos2);
             }
 
-            if (this.randomGenerator.nextInt(8) == 0)
-            {
+            if (this.randomGenerator.nextInt(8) == 0) {
                 k = this.randomGenerator.nextInt(16) + 8;
                 l = this.randomGenerator.nextInt(16) + 8;
-                i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+                i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2);  // CraftBukkit - Prevent crash
                 blockpos = this.field_180294_c.add(k, i1, l);
                 this.mushroomRedGen.generate(this.currentWorld, this.randomGenerator, blockpos);
             }
         }
 
-        if (this.randomGenerator.nextInt(4) == 0)
-        {
+        if (this.randomGenerator.nextInt(4) == 0) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(j, 0, k)).getY() * 2); // CraftBukkit - Prevent crash
             this.mushroomBrownGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        if (this.randomGenerator.nextInt(8) == 0)
-        {
+        if (this.randomGenerator.nextInt(8) == 0) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(j, 0, k)).getY() * 2); // CraftBukkit - Prevent crash
             this.mushroomRedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        for (j = 0; j < this.reedsPerChunk; ++j)
-        {
+        for (j = 0; j < this.reedsPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             this.reedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        for (j = 0; j < 10; ++j)
-        {
+        for (j = 0; j < 10; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             this.reedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        if (this.randomGenerator.nextInt(32) == 0)
-        {
+        if (this.randomGenerator.nextInt(32) == 0) {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(j, 0, k)).getY() * 2); // CraftBukkit - Prevent crash
             (new WorldGenPumpkin()).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        for (j = 0; j < this.cactiPerChunk; ++j)
-        {
+        for (j = 0; j < this.cactiPerChunk; ++j) {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = this.randomGenerator.nextInt(this.getHighestBlockYAt(this.field_180294_c.add(k, 0, l)).getY() * 2); // CraftBukkit - Prevent crash
             this.cactusGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        if (this.generateLakes)
-        {
+        if (this.generateLakes) {
             BlockPos blockpos1;
 
-            for (j = 0; j < 50; ++j)
-            {
+            for (j = 0; j < 50; ++j) {
                 blockpos1 = this.field_180294_c.add(this.randomGenerator.nextInt(16) + 8, this.randomGenerator.nextInt(this.randomGenerator.nextInt(248) + 8), this.randomGenerator.nextInt(16) + 8);
                 (new WorldGenLiquids(Blocks.flowing_water)).generate(this.currentWorld, this.randomGenerator, blockpos1);
             }
 
-            for (j = 0; j < 20; ++j)
-            {
+            for (j = 0; j < 20; ++j) {
                 blockpos1 = this.field_180294_c.add(this.randomGenerator.nextInt(16) + 8, this.randomGenerator.nextInt(this.randomGenerator.nextInt(this.randomGenerator.nextInt(240) + 8) + 8), this.randomGenerator.nextInt(16) + 8);
                 (new WorldGenLiquids(Blocks.flowing_lava)).generate(this.currentWorld, this.randomGenerator, blockpos1);
             }
         }
     }
 
-    protected void genStandardOre1(int p_76795_1_, WorldGenerator p_76795_2_, int p_76795_3_, int p_76795_4_)
-    {
+
+    // CraftBukkit start - The heightMap can be wrong calculated and return Y = 0 which will crash the Server
+    private BlockPos getHighestBlockYAt(BlockPos blockPosition) {
+        BlockPos returnBlockPosition = this.currentWorld.getHorizon(blockPosition);
+        if (returnBlockPosition.getY() == 0) {
+            returnBlockPosition = returnBlockPosition.up(1);
+        }
+        return returnBlockPosition;
+    }
+    // CraftBukkit end
+
+    protected void genStandardOre1(int p_76795_1_, WorldGenerator p_76795_2_, int p_76795_3_, int p_76795_4_) {
         int l;
 
-        if (p_76795_4_ < p_76795_3_)
-        {
+        if (p_76795_4_ < p_76795_3_) {
             l = p_76795_3_;
             p_76795_3_ = p_76795_4_;
             p_76795_4_ = l;
-        }
-        else if (p_76795_4_ == p_76795_3_)
-        {
-            if (p_76795_3_ < 255)
-            {
+        } else if (p_76795_4_ == p_76795_3_) {
+            if (p_76795_3_ < 255) {
                 ++p_76795_4_;
-            }
-            else
-            {
+            } else {
                 --p_76795_3_;
             }
         }
 
-        for (l = 0; l < p_76795_1_; ++l)
-        {
+        for (l = 0; l < p_76795_1_; ++l) {
             BlockPos blockpos = this.field_180294_c.add(this.randomGenerator.nextInt(16), this.randomGenerator.nextInt(p_76795_4_ - p_76795_3_) + p_76795_3_, this.randomGenerator.nextInt(16));
             p_76795_2_.generate(this.currentWorld, this.randomGenerator, blockpos);
         }
     }
 
-    protected void genStandardOre2(int p_76793_1_, WorldGenerator p_76793_2_, int p_76793_3_, int p_76793_4_)
-    {
-        for (int l = 0; l < p_76793_1_; ++l)
-        {
+    protected void genStandardOre2(int p_76793_1_, WorldGenerator p_76793_2_, int p_76793_3_, int p_76793_4_) {
+        for (int l = 0; l < p_76793_1_; ++l) {
             BlockPos blockpos = this.field_180294_c.add(this.randomGenerator.nextInt(16), this.randomGenerator.nextInt(p_76793_4_) + this.randomGenerator.nextInt(p_76793_4_) + p_76793_3_ - p_76793_4_, this.randomGenerator.nextInt(16));
             p_76793_2_.generate(this.currentWorld, this.randomGenerator, blockpos);
         }
     }
 
-    protected void generateOres()
-    {
+    protected void generateOres() {
         this.genStandardOre1(this.chunkProviderSettings.dirtCount, this.dirtGen, this.chunkProviderSettings.dirtMinHeight, this.chunkProviderSettings.dirtMaxHeight);
         this.genStandardOre1(this.chunkProviderSettings.gravelCount, this.gravelGen, this.chunkProviderSettings.gravelMinHeight, this.chunkProviderSettings.gravelMaxHeight);
         this.genStandardOre1(this.chunkProviderSettings.dioriteCount, this.dioriteGen, this.chunkProviderSettings.dioriteMinHeight, this.chunkProviderSettings.dioriteMaxHeight);
@@ -382,4 +382,4 @@
         this.genStandardOre1(this.chunkProviderSettings.diamondCount, this.diamondGen, this.chunkProviderSettings.diamondMinHeight, this.chunkProviderSettings.diamondMaxHeight);
         this.genStandardOre2(this.chunkProviderSettings.lapisCount, this.lapisGen, this.chunkProviderSettings.lapisCenterHeight, this.chunkProviderSettings.lapisSpread);
     }
-}
+}
