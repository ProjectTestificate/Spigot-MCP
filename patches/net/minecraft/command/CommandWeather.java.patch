---a/net/minecraft/command/CommandWeather.java
+++b/net/minecraft/command/CommandWeather.java
@@ -2,61 +2,54 @@
 
 import java.util.List;
 import java.util.Random;
+
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.storage.WorldInfo;
 
-public class CommandWeather extends CommandBase
-{
+public class CommandWeather extends CommandBase {
+
     private static final String __OBFID = "CL_00001185";
 
-    public String getName()
-    {
+    public String getName() {
         return "weather";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.weather.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length >= 1 && args.length <= 2)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length >= 1 && args.length <= 2) {
             int i = (300 + (new Random()).nextInt(600)) * 20;
 
-            if (args.length >= 2)
-            {
+            if (args.length >= 2) {
                 i = parseInt(args[1], 1, 1000000) * 20;
             }
 
             WorldServer worldserver = MinecraftServer.getServer().worldServers[0];
             WorldInfo worldinfo = worldserver.getWorldInfo();
 
-            if ("clear".equalsIgnoreCase(args[0]))
-            {
+            if ("clear".equalsIgnoreCase(args[0])) {
                 worldinfo.setCleanWeatherTime(i);
                 worldinfo.setRainTime(0);
                 worldinfo.setThunderTime(0);
                 worldinfo.setRaining(false);
                 worldinfo.setThundering(false);
                 notifyOperators(sender, this, "commands.weather.clear", new Object[0]);
-            }
-            else if ("rain".equalsIgnoreCase(args[0]))
-            {
+            } else if ("rain".equalsIgnoreCase(args[0])) {
                 worldinfo.setCleanWeatherTime(0);
                 worldinfo.setRainTime(i);
                 worldinfo.setThunderTime(i);
                 worldinfo.setRaining(true);
                 worldinfo.setThundering(false);
                 notifyOperators(sender, this, "commands.weather.rain", new Object[0]);
-            }
-            else
-            {
-                if (!"thunder".equalsIgnoreCase(args[0]))
-                {
+            } else {
+                if (!"thunder".equalsIgnoreCase(args[0])) {
                     throw new WrongUsageException("commands.weather.usage", new Object[0]);
                 }
 
@@ -72,17 +72,12 @@
                 worldinfo.setThundering(true);
                 notifyOperators(sender, this, "commands.weather.thunder", new Object[0]);
             }
-        }
-        else
-        {
+        } else {
             throw new WrongUsageException("commands.weather.usage", new Object[0]);
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
-        return args.length == 1 ? getListOfStringsMatchingLastWord(args, new String[] {"clear", "rain", "thunder"}): null;
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
+        return args.length == 1 ? getListOfStringsMatchingLastWord(args, new String[]{"clear", "rain", "thunder"}) : null;
     }
-}
+}
