--- decompiled\net\minecraft\command\CommandExecuteAt.java
+++ src\main\java\net\minecraft\command\CommandExecuteAt.java
@@ -1,19 +1,27 @@
 package net.minecraft.command;
 
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.command.server.CommandBlockLogic;
 import net.minecraft.entity.Entity;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.dedicated.DedicatedServer;
+import net.minecraft.tileentity.TileEntityCommandBlock.TileEntityCommandListener;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.IChatComponent;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.command.ProxiedNativeCommandSender;
+import org.bukkit.craftbukkit.command.VanillaCommandWrapper;
+
 public class CommandExecuteAt extends CommandBase
 {
+
     private static final String __OBFID = "CL_00002344";
 
     public String getName()
     {
         return "execute";
@@ -27,11 +35,11 @@
     public String getCommandUsage(ICommandSender sender)
     {
         return "commands.execute.usage";
     }
 
-    public void execute(final ICommandSender sender, String[] args) throws CommandException
+    public void execute(final ICommandSender sender, String[] args) throws CommandException, WrongUsageException  // CraftBukkit - added throws // SpigotMCP NOTE -- MCP already added commandexception
     {
         if (args.length < 5)
         {
             throw new WrongUsageException("commands.execute.usage", new Object[0]);
         }
@@ -111,19 +119,52 @@
             };
             ICommandManager icommandmanager = MinecraftServer.getServer().getCommandManager();
 
             try
             {
-                int i = icommandmanager.executeCommand(icommandsender, s);
+                // SpigotMCP start -- Fix conflicting local variable names and incorrect mappings
+                // CraftBukkit start
+                org.bukkit.command.CommandSender bukkitSender = null;
 
-                if (i < 1)
+                if (sender instanceof DedicatedServer)
                 {
+                    bukkitSender = MinecraftServer.getServer().server.getConsoleSender();
+                }
+                else if (sender instanceof TileEntityCommandListener)
+                {
+                    bukkitSender = ((TileEntityCommandListener)sender).sender; // SpigotMCP
+                }
+                else if (VanillaCommandWrapper.lastSender != null)
+                {
+                    bukkitSender = VanillaCommandWrapper.lastSender;
+                }
+                else if (sender.getCommandSenderEntity() != null)
+                {
+                    bukkitSender = sender.getCommandSenderEntity().getBukkitEntity();
+                }
+                else
+                {
+                    throw new CommandException("Unhandled executor " + icommandsender.getClass().getSimpleName(), new Object[0]);
+                }
+
+                int j = CommandBlockLogic.executeCommand(icommandsender, new ProxiedNativeCommandSender(icommandsender, bukkitSender, entity.getBukkitEntity()), s); // icommandhandler.a(commandlistenerentity, s);
+                // CraftBukkit end
+                if (j < 1)
+                {
+                    //SpigotMCP end
                     throw new CommandException("commands.execute.allInvocationsFailed", new Object[] {s});
                 }
             }
             catch (Throwable throwable)
             {
+                // CraftBukkit start
+                if (throwable instanceof CommandException)
+                {
+                    throw(CommandException)throwable;
+                }
+
+                // CraftBukkit end
                 throw new CommandException("commands.execute.failed", new Object[] {s, entity.getName()});
             }
         }
     }
 
@@ -134,6 +175,14 @@
 
     public boolean isUsernameIndex(String[] args, int index)
     {
         return index == 0;
     }
+
+    // CraftBukkit start - fix decompiler error
+    @Override
+    public int compareTo(Object o)
+    {
+        return compareTo((ICommand)o);
+    }
+    // CraftBukkit end
 }
