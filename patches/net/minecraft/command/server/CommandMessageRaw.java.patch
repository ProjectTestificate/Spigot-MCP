---a/net/minecraft/command/server/CommandMessageRaw.java
+++b/net/minecraft/command/server/CommandMessageRaw.java
@@ -1,8 +1,6 @@
 package net.minecraft.command.server;
 
-import com.google.gson.JsonParseException;
 import java.util.List;
+
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.ICommandSender;
@@ -12,57 +12,49 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.ChatComponentProcessor;
 import net.minecraft.util.IChatComponent;
+
 import org.apache.commons.lang3.exception.ExceptionUtils;
 
-public class CommandMessageRaw extends CommandBase
-{
+import com.google.gson.JsonParseException;
+
+public class CommandMessageRaw extends CommandBase {
+
     private static final String __OBFID = "CL_00000667";
 
-    public String getName()
-    {
+    public String getName() {
         return "tellraw";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.tellraw.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length < 2)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length < 2) {
             throw new WrongUsageException("commands.tellraw.usage", new Object[0]);
-        }
-        else
-        {
+        } else {
             EntityPlayerMP entityplayermp = getPlayer(sender, args[0]);
             String s = func_180529_a(args, 1);
 
-            try
-            {
+            try {
                 IChatComponent ichatcomponent = IChatComponent.Serializer.jsonToComponent(s);
                 entityplayermp.addChatMessage(ChatComponentProcessor.func_179985_a(sender, ichatcomponent, entityplayermp));
-            }
-            catch (JsonParseException jsonparseexception)
-            {
+            } catch (JsonParseException jsonparseexception) {
                 Throwable throwable = ExceptionUtils.getRootCause(jsonparseexception);
-                throw new SyntaxErrorException("commands.tellraw.jsonException", new Object[] {throwable == null ? "" : throwable.getMessage()});
+                throw new SyntaxErrorException("commands.tellraw.jsonException", new Object[]{throwable == null ? "" : throwable.getMessage()});
             }
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, MinecraftServer.getServer().getAllUsernames()) : null;
     }
 
-    public boolean isUsernameIndex(String[] args, int index)
-    {
+    public boolean isUsernameIndex(String[] args, int index) {
         return index == 0;
     }
-}
+}
