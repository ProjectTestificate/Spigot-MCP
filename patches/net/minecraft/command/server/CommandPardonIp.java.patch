---a/net/minecraft/command/server/CommandPardonIp.java
+++b/net/minecraft/command/server/CommandPardonIp.java
@@ -2,6 +2,7 @@
 
 import java.util.List;
 import java.util.regex.Matcher;
+
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.ICommandSender;
@@ -10,55 +10,43 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 
-public class CommandPardonIp extends CommandBase
-{
+public class CommandPardonIp extends CommandBase {
+
     private static final String __OBFID = "CL_00000720";
 
-    public String getName()
-    {
+    public String getName() {
         return "pardon-ip";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 3;
     }
 
-    public boolean canCommandSenderUse(ICommandSender sender)
-    {
+    public boolean canCommandSenderUse(ICommandSender sender) {
         return MinecraftServer.getServer().getConfigurationManager().getBannedIPs().isLanServer() && super.canCommandSenderUse(sender);
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.unbanip.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length == 1 && args[0].length() > 1)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length == 1 && args[0].length() > 1) {
             Matcher matcher = CommandBanIp.field_147211_a.matcher(args[0]);
 
-            if (matcher.matches())
-            {
+            if (matcher.matches()) {
                 MinecraftServer.getServer().getConfigurationManager().getBannedIPs().removeEntry(args[0]);
-                notifyOperators(sender, this, "commands.unbanip.success", new Object[] {args[0]});
-            }
-            else
-            {
+                notifyOperators(sender, this, "commands.unbanip.success", new Object[]{args[0]});
+            } else {
                 throw new SyntaxErrorException("commands.unbanip.invalid", new Object[0]);
             }
-        }
-        else
-        {
+        } else {
             throw new WrongUsageException("commands.unbanip.usage", new Object[0]);
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, MinecraftServer.getServer().getConfigurationManager().getBannedIPs().getKeys()) : null;
     }
-}
+}
