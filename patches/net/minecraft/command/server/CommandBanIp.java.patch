---a/net/minecraft/command/server/CommandBanIp.java
+++b/net/minecraft/command/server/CommandBanIp.java
@@ -5,6 +5,7 @@
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.ICommandSender;
@@ -16,88 +16,70 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.IChatComponent;
 
-public class CommandBanIp extends CommandBase
-{
+public class CommandBanIp extends CommandBase {
+
     public static final Pattern field_147211_a = Pattern.compile("^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])$");
     private static final String __OBFID = "CL_00000139";
 
-    public String getName()
-    {
+    public String getName() {
         return "ban-ip";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 3;
     }
 
-    public boolean canCommandSenderUse(ICommandSender sender)
-    {
+    public boolean canCommandSenderUse(ICommandSender sender) {
         return MinecraftServer.getServer().getConfigurationManager().getBannedIPs().isLanServer() && super.canCommandSenderUse(sender);
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.banip.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length >= 1 && args[0].length() > 1)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length >= 1 && args[0].length() > 1) {
             IChatComponent ichatcomponent = args.length >= 2 ? getChatComponentFromNthArg(sender, args, 1) : null;
             Matcher matcher = field_147211_a.matcher(args[0]);
 
-            if (matcher.matches())
-            {
+            if (matcher.matches()) {
                 this.func_147210_a(sender, args[0], ichatcomponent == null ? null : ichatcomponent.getUnformattedText());
-            }
-            else
-            {
+            } else {
                 EntityPlayerMP entityplayermp = MinecraftServer.getServer().getConfigurationManager().getPlayerByUsername(args[0]);
 
-                if (entityplayermp == null)
-                {
+                if (entityplayermp == null) {
                     throw new PlayerNotFoundException("commands.banip.invalid", new Object[0]);
                 }
 
                 this.func_147210_a(sender, entityplayermp.getPlayerIP(), ichatcomponent == null ? null : ichatcomponent.getUnformattedText());
             }
-        }
-        else
-        {
+        } else {
             throw new WrongUsageException("commands.banip.usage", new Object[0]);
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, MinecraftServer.getServer().getAllUsernames()) : null;
     }
 
-    protected void func_147210_a(ICommandSender p_147210_1_, String p_147210_2_, String p_147210_3_)
-    {
-        IPBanEntry ipbanentry = new IPBanEntry(p_147210_2_, (Date)null, p_147210_1_.getName(), (Date)null, p_147210_3_);
+    protected void func_147210_a(ICommandSender p_147210_1_, String p_147210_2_, String p_147210_3_) {
+        IPBanEntry ipbanentry = new IPBanEntry(p_147210_2_, (Date) null, p_147210_1_.getName(), (Date) null, p_147210_3_);
         MinecraftServer.getServer().getConfigurationManager().getBannedIPs().addEntry(ipbanentry);
         List list = MinecraftServer.getServer().getConfigurationManager().getPlayersMatchingAddress(p_147210_2_);
         String[] astring = new String[list.size()];
         int i = 0;
         EntityPlayerMP entityplayermp;
 
-        for (Iterator iterator = list.iterator(); iterator.hasNext(); astring[i++] = entityplayermp.getName())
-        {
-            entityplayermp = (EntityPlayerMP)iterator.next();
+        for (Iterator iterator = list.iterator(); iterator.hasNext(); astring[i++] = entityplayermp.getName()) {
+            entityplayermp = (EntityPlayerMP) iterator.next();
             entityplayermp.playerNetServerHandler.kickPlayerFromServer("You have been IP banned.");
         }
 
-        if (list.isEmpty())
-        {
-            notifyOperators(p_147210_1_, this, "commands.banip.success", new Object[] {p_147210_2_});
+        if (list.isEmpty()) {
+            notifyOperators(p_147210_1_, this, "commands.banip.success", new Object[]{p_147210_2_});
+        } else {
+            notifyOperators(p_147210_1_, this, "commands.banip.success.players", new Object[]{p_147210_2_, joinNiceString(astring)});
         }
-        else
-        {
-            notifyOperators(p_147210_1_, this, "commands.banip.success.players", new Object[] {p_147210_2_, joinNiceString(astring)});
-        }
     }
-}
+}
