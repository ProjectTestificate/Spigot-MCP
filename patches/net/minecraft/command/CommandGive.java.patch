--- decompiled\net\minecraft\command\CommandGive.java
+++ src\main\java\net\minecraft\command\CommandGive.java
@@ -1,111 +1,92 @@
 package net.minecraft.command;
 
 import java.util.List;
+
 import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.JsonToNBT;
 import net.minecraft.nbt.NBTException;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 
-public class CommandGive extends CommandBase
-{
+public class CommandGive extends CommandBase {
+
     private static final String __OBFID = "CL_00000502";
 
-    public String getName()
-    {
+    public String getName() {
         return "give";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.give.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length < 2)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length < 2) {
             throw new WrongUsageException("commands.give.usage", new Object[0]);
-        }
-        else
-        {
+        } else {
             EntityPlayerMP entityplayermp = getPlayer(sender, args[0]);
             Item item = getItemByText(sender, args[1]);
             int i = args.length >= 3 ? parseInt(args[2], 1, 64) : 1;
             int j = args.length >= 4 ? parseInt(args[3]) : 0;
             ItemStack itemstack = new ItemStack(item, i, j);
 
-            if (args.length >= 5)
-            {
+            if (args.length >= 5) {
                 String s = getChatComponentFromNthArg(sender, args, 4).getUnformattedText();
 
-                try
-                {
+                try {
                     itemstack.setTagCompound(JsonToNBT.func_180713_a(s));
+                } catch (NBTException nbtexception) {
+                    throw new CommandException("commands.give.tagError", new Object[]{nbtexception.getMessage()});
                 }
-                catch (NBTException nbtexception)
-                {
-                    throw new CommandException("commands.give.tagError", new Object[] {nbtexception.getMessage()});
-                }
             }
 
             boolean flag = entityplayermp.inventory.addItemStackToInventory(itemstack);
 
-            if (flag)
-            {
+            if (flag) {
                 entityplayermp.worldObj.playSoundAtEntity(entityplayermp, "random.pop", 0.2F, ((entityplayermp.getRNG().nextFloat() - entityplayermp.getRNG().nextFloat()) * 0.7F + 1.0F) * 2.0F);
                 entityplayermp.inventoryContainer.detectAndSendChanges();
             }
 
             EntityItem entityitem;
 
-            if (flag && itemstack.stackSize <= 0)
-            {
+            if (flag && itemstack.stackSize <= 0) {
                 itemstack.stackSize = 1;
                 sender.setCommandStat(CommandResultStats.Type.AFFECTED_ITEMS, i);
                 entityitem = entityplayermp.dropPlayerItemWithRandomChoice(itemstack, false);
 
-                if (entityitem != null)
-                {
+                if (entityitem != null) {
                     entityitem.func_174870_v();
                 }
-            }
-            else
-            {
+            } else {
                 sender.setCommandStat(CommandResultStats.Type.AFFECTED_ITEMS, i - itemstack.stackSize);
                 entityitem = entityplayermp.dropPlayerItemWithRandomChoice(itemstack, false);
 
-                if (entityitem != null)
-                {
+                if (entityitem != null) {
                     entityitem.setNoPickupDelay();
                     entityitem.setOwner(entityplayermp.getName());
                 }
             }
 
-            notifyOperators(sender, this, "commands.give.success", new Object[] {itemstack.getChatComponent(), Integer.valueOf(i), entityplayermp.getName()});
+            notifyOperators(sender, this, "commands.give.success", new Object[]{itemstack.getChatComponent(), Integer.valueOf(i), entityplayermp.getName()});
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, this.getPlayers()) : (args.length == 2 ? func_175762_a(args, Item.itemRegistry.getKeys()) : null);
     }
 
-    protected String[] getPlayers()
-    {
+    protected String[] getPlayers() {
         return MinecraftServer.getServer().getAllUsernames();
     }
 
-    public boolean isUsernameIndex(String[] args, int index)
-    {
+    public boolean isUsernameIndex(String[] args, int index) {
         return index == 0;
     }
 }
