--- decompiled\net\minecraft\command\CommandGameRule.java
+++ src\main\java\net\minecraft\command\CommandGameRule.java
@@ -1,18 +1,20 @@
 package net.minecraft.command;
 
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.play.server.S19PacketEntityStatus;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.ChatComponentText;
 import net.minecraft.world.GameRules;
 
 public class CommandGameRule extends CommandBase
 {
+
     private static final String __OBFID = "CL_00000475";
 
     public String getName()
     {
         return "gamerule";
@@ -26,32 +28,34 @@
     public String getCommandUsage(ICommandSender sender)
     {
         return "commands.gamerule.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
+    public void execute(ICommandSender sender, String[] args) throws CommandException // CraftBukkit - added throws // SpigotMCP NOTE -- Added by mcp
     {
-        GameRules gamerules = this.getGameRules();
+        GameRules gamerules = sender.getEntityWorld().getGameRules(); // Use current world
         String s = args.length > 0 ? args[0] : "";
         String s1 = args.length > 1 ? func_180529_a(args, 1) : "";
 
         switch (args.length)
         {
             case 0:
                 sender.addChatMessage(new ChatComponentText(joinNiceString(gamerules.getRules())));
                 break;
             case 1:
+
                 if (!gamerules.hasRule(s))
                 {
                     throw new CommandException("commands.gamerule.norule", new Object[] {s});
                 }
 
                 String s2 = gamerules.getGameRuleStringValue(s);
                 sender.addChatMessage((new ChatComponentText(s)).appendText(" = ").appendText(s2));
                 sender.setCommandStat(CommandResultStats.Type.QUERY_RESULT, gamerules.getInt(s));
                 break;
             default:
+
                 if (gamerules.areSameType(s, GameRules.ValueType.BOOLEAN_VALUE) && !"true".equals(s1) && !"false".equals(s1))
                 {
                     throw new CommandException("commands.generic.boolean.invalid", new Object[] {s1});
                 }
 
@@ -100,6 +104,14 @@
 
     private GameRules getGameRules()
     {
         return MinecraftServer.getServer().worldServerForDimension(0).getGameRules();
     }
+
+    // CraftBukkit start - fix decompile error
+    @Override
+    public int compareTo(Object o)
+    {
+        return compareTo((ICommand)o);
+    }
+    // CraftBukkit end
 }
