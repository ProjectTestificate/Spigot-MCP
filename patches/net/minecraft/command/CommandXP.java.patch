--- decompiled\net\minecraft\command\CommandXP.java
+++ src\main\java\net\minecraft\command\CommandXP.java
@@ -1,97 +1,79 @@
 package net.minecraft.command;
 
 import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 
-public class CommandXP extends CommandBase
-{
+public class CommandXP extends CommandBase {
+
     private static final String __OBFID = "CL_00000398";
 
-    public String getName()
-    {
+    public String getName() {
         return "xp";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.xp.usage";
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length <= 0)
-        {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
+        if (args.length <= 0) {
             throw new WrongUsageException("commands.xp.usage", new Object[0]);
-        }
-        else
-        {
+        } else {
             String s = args[0];
             boolean flag = s.endsWith("l") || s.endsWith("L");
 
-            if (flag && s.length() > 1)
-            {
+            if (flag && s.length() > 1) {
                 s = s.substring(0, s.length() - 1);
             }
 
             int i = parseInt(s);
             boolean flag1 = i < 0;
 
-            if (flag1)
-            {
+            if (flag1) {
                 i *= -1;
             }
 
             EntityPlayerMP entityplayermp = args.length > 1 ? getPlayer(sender, args[1]) : getCommandSenderAsPlayer(sender);
 
-            if (flag)
-            {
+            if (flag) {
                 sender.setCommandStat(CommandResultStats.Type.QUERY_RESULT, entityplayermp.experienceLevel);
 
-                if (flag1)
-                {
+                if (flag1) {
                     entityplayermp.addExperienceLevel(-i);
-                    notifyOperators(sender, this, "commands.xp.success.negative.levels", new Object[] {Integer.valueOf(i), entityplayermp.getName()});
-                }
-                else
-                {
+                    notifyOperators(sender, this, "commands.xp.success.negative.levels", new Object[]{Integer.valueOf(i), entityplayermp.getName()});
+                } else {
                     entityplayermp.addExperienceLevel(i);
-                    notifyOperators(sender, this, "commands.xp.success.levels", new Object[] {Integer.valueOf(i), entityplayermp.getName()});
+                    notifyOperators(sender, this, "commands.xp.success.levels", new Object[]{Integer.valueOf(i), entityplayermp.getName()});
                 }
-            }
-            else
-            {
+            } else {
                 sender.setCommandStat(CommandResultStats.Type.QUERY_RESULT, entityplayermp.experienceTotal);
 
-                if (flag1)
-                {
+                if (flag1) {
                     throw new CommandException("commands.xp.failure.widthdrawXp", new Object[0]);
                 }
 
                 entityplayermp.addExperience(i);
-                notifyOperators(sender, this, "commands.xp.success", new Object[] {Integer.valueOf(i), entityplayermp.getName()});
+                notifyOperators(sender, this, "commands.xp.success", new Object[]{Integer.valueOf(i), entityplayermp.getName()});
             }
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 2 ? getListOfStringsMatchingLastWord(args, this.getAllUsernames()) : null;
     }
 
-    protected String[] getAllUsernames()
-    {
+    protected String[] getAllUsernames() {
         return MinecraftServer.getServer().getAllUsernames();
     }
 
-    public boolean isUsernameIndex(String[] args, int index)
-    {
+    public boolean isUsernameIndex(String[] args, int index) {
         return index == 1;
     }
 }
