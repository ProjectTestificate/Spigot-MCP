---a/net/minecraft/command/CommandClearInventory.java
+++b/net/minecraft/command/CommandClearInventory.java
@@ -1,6 +1,7 @@
 package net.minecraft.command;
 
 import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.item.Item;
 import net.minecraft.nbt.JsonToNBT;
@@ -10,92 +10,71 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.ChatComponentTranslation;
 
-public class CommandClearInventory extends CommandBase
-{
+public class CommandClearInventory extends CommandBase {
+
     private static final String __OBFID = "CL_00000218";
 
-    public String getName()
-    {
+    public String getName() {
         return "clear";
     }
 
-    public String getCommandUsage(ICommandSender sender)
-    {
+    public String getCommandUsage(ICommandSender sender) {
         return "commands.clear.usage";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public void execute(ICommandSender sender, String[] args) throws CommandException
-    {
+    public void execute(ICommandSender sender, String[] args) throws CommandException {
         EntityPlayerMP entityplayermp = args.length == 0 ? getCommandSenderAsPlayer(sender) : getPlayer(sender, args[0]);
         Item item = args.length >= 2 ? getItemByText(sender, args[1]) : null;
         int i = args.length >= 3 ? parseInt(args[2], -1) : -1;
         int j = args.length >= 4 ? parseInt(args[3], -1) : -1;
         NBTTagCompound nbttagcompound = null;
 
-        if (args.length >= 5)
-        {
-            try
-            {
+        if (args.length >= 5) {
+            try {
                 nbttagcompound = JsonToNBT.func_180713_a(func_180529_a(args, 4));
+            } catch (NBTException nbtexception) {
+                throw new CommandException("commands.clear.tagError", new Object[]{nbtexception.getMessage()});
             }
-            catch (NBTException nbtexception)
-            {
-                throw new CommandException("commands.clear.tagError", new Object[] {nbtexception.getMessage()});
-            }
         }
 
-        if (args.length >= 2 && item == null)
-        {
-            throw new CommandException("commands.clear.failure", new Object[] {entityplayermp.getName()});
-        }
-        else
-        {
+        if (args.length >= 2 && item == null) {
+            throw new CommandException("commands.clear.failure", new Object[]{entityplayermp.getName()});
+        } else {
             int k = entityplayermp.inventory.func_174925_a(item, i, j, nbttagcompound);
             entityplayermp.inventoryContainer.detectAndSendChanges();
 
-            if (!entityplayermp.capabilities.isCreativeMode)
-            {
+            if (!entityplayermp.capabilities.isCreativeMode) {
                 entityplayermp.updateHeldItem();
             }
 
             sender.setCommandStat(CommandResultStats.Type.AFFECTED_ITEMS, k);
 
-            if (k == 0)
-            {
-                throw new CommandException("commands.clear.failure", new Object[] {entityplayermp.getName()});
-            }
-            else
-            {
-                if (j == 0)
-                {
-                    sender.addChatMessage(new ChatComponentTranslation("commands.clear.testing", new Object[] {entityplayermp.getName(), Integer.valueOf(k)}));
+            if (k == 0) {
+                throw new CommandException("commands.clear.failure", new Object[]{entityplayermp.getName()});
+            } else {
+                if (j == 0) {
+                    sender.addChatMessage(new ChatComponentTranslation("commands.clear.testing", new Object[]{entityplayermp.getName(), Integer.valueOf(k)}));
+                } else {
+                    notifyOperators(sender, this, "commands.clear.success", new Object[]{entityplayermp.getName(), Integer.valueOf(k)});
                 }
-                else
-                {
-                    notifyOperators(sender, this, "commands.clear.success", new Object[] {entityplayermp.getName(), Integer.valueOf(k)});
-                }
             }
         }
     }
 
-    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos)
-    {
+    public List addTabCompletionOptions(ICommandSender sender, String[] args, BlockPos pos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, this.func_147209_d()) : (args.length == 2 ? func_175762_a(args, Item.itemRegistry.getKeys()) : null);
     }
 
-    protected String[] func_147209_d()
-    {
+    protected String[] func_147209_d() {
         return MinecraftServer.getServer().getAllUsernames();
     }
 
-    public boolean isUsernameIndex(String[] args, int index)
-    {
+    public boolean isUsernameIndex(String[] args, int index) {
         return index == 0;
     }
-}
+}
