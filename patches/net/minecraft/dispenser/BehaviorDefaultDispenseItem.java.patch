---a/net/minecraft/dispenser/BehaviorDefaultDispenseItem.java
+++b/net/minecraft/dispenser/BehaviorDefaultDispenseItem.java
@@ -6,66 +6,105 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
-public class BehaviorDefaultDispenseItem implements IBehaviorDispenseItem
-{
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
+
+public class BehaviorDefaultDispenseItem implements IBehaviorDispenseItem {
+
     private static final String __OBFID = "CL_00001195";
 
-    public final ItemStack dispense(IBlockSource source, ItemStack stack)
-    {
+    public final ItemStack dispense(IBlockSource source, ItemStack stack) {
         ItemStack itemstack1 = this.dispenseStack(source, stack);
         this.playDispenseSound(source);
         this.spawnDispenseParticles(source, BlockDispenser.getFacing(source.getBlockMetadata()));
         return itemstack1;
     }
 
-    protected ItemStack dispenseStack(IBlockSource source, ItemStack stack)
-    {
+    protected ItemStack dispenseStack(IBlockSource source, ItemStack stack) {
         EnumFacing enumfacing = BlockDispenser.getFacing(source.getBlockMetadata());
         IPosition iposition = BlockDispenser.getDispensePosition(source);
         ItemStack itemstack1 = stack.splitStack(1);
-        doDispense(source.getWorld(), itemstack1, 6, enumfacing, iposition);
+        // CraftBukkit start
+        if (!doDispense(source.getWorld(), itemstack1, 6, enumfacing, source)) {
+            stack.stackSize++;
+        }
+        // CraftBukkit end
         return stack;
     }
 
-    public static void doDispense(World worldIn, ItemStack stack, int speed, EnumFacing facing, IPosition position)
-    {
+    // CraftBukkit start - void -> boolean return, IPosition -> ISourceBlock last argument
+    public static boolean doDispense(World worldIn, ItemStack stack, int speed, EnumFacing facing, IBlockSource isourceblock) {
+        IPosition position = BlockDispenser.getDispensePosition(isourceblock);
+        // CraftBukkit end
         double d0 = position.getX();
         double d1 = position.getY();
         double d2 = position.getZ();
 
-        if (facing.getAxis() == EnumFacing.Axis.Y)
-        {
+        if (facing.getAxis() == EnumFacing.Axis.Y) {
             d1 -= 0.125D;
-        }
-        else
-        {
+        } else {
             d1 -= 0.15625D;
         }
 
         EntityItem entityitem = new EntityItem(worldIn, d0, d1, d2, stack);
         double d3 = worldIn.rand.nextDouble() * 0.1D + 0.2D;
-        entityitem.motionX = (double)facing.getFrontOffsetX() * d3;
+        entityitem.motionX = (double) facing.getFrontOffsetX() * d3;
         entityitem.motionY = 0.20000000298023224D;
-        entityitem.motionZ = (double)facing.getFrontOffsetZ() * d3;
-        entityitem.motionX += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
-        entityitem.motionY += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
-        entityitem.motionZ += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
+        entityitem.motionZ = (double) facing.getFrontOffsetZ() * d3;
+        entityitem.motionX += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double) speed;
+        entityitem.motionY += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double) speed;
+        entityitem.motionZ += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double) speed;
+        // CraftBukkit start
+        org.bukkit.block.Block block = worldIn.getWorld().getBlockAt(isourceblock.getBlockPos().getX(), isourceblock.getBlockPos().getY(), isourceblock.getBlockPos().getZ());
+        CraftItemStack craftItem = CraftItemStack.asCraftMirror(stack);
+
+        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new Vector(entityitem.motionX, entityitem.motionY, entityitem.motionZ));
+        if (!BlockDispenser.eventFired) {
+            worldIn.getServer().getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled()) {
+            return false;
+        }
+
+        entityitem.setEntityItemStack(CraftItemStack.asNMSCopy(event.getItem()));
+        entityitem.motionX = event.getVelocity().getX();
+        entityitem.motionY = event.getVelocity().getY();
+        entityitem.motionZ = event.getVelocity().getZ();
+
+        if (!event.getItem().getType().equals(craftItem.getType())) {
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            IBehaviorDispenseItem idispensebehavior = (IBehaviorDispenseItem) BlockDispenser.dispenseBehaviorRegistry.getObject(eventStack.getItem());
+            if (idispensebehavior != IBehaviorDispenseItem.itemDispenseBehaviorProvider && idispensebehavior.getClass() != net.minecraft.dispenser.BehaviorDefaultDispenseItem.class) {
+                idispensebehavior.dispense(isourceblock, eventStack);
+            } else {
+                worldIn.spawnEntityInWorld(entityitem);
+            }
+            return false;
+        }
+
         worldIn.spawnEntityInWorld(entityitem);
+
+        return true;
+        // CraftBukkit end
     }
 
-    protected void playDispenseSound(IBlockSource source)
-    {
+    protected void playDispenseSound(IBlockSource source) {
         source.getWorld().playAuxSFX(1000, source.getBlockPos(), 0);
     }
 
-    protected void spawnDispenseParticles(IBlockSource source, EnumFacing facingIn)
-    {
+    protected void spawnDispenseParticles(IBlockSource source, EnumFacing facingIn) {
         source.getWorld().playAuxSFX(2000, source.getBlockPos(), this.func_82488_a(facingIn));
     }
 
-    private int func_82488_a(EnumFacing facingIn)
-    {
+    private int func_82488_a(EnumFacing facingIn) {
         return facingIn.getFrontOffsetX() + 1 + (facingIn.getFrontOffsetZ() + 1) * 3;
     }
-}
+}
