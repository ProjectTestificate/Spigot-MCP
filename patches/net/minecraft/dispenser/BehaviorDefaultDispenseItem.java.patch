--- decompiled\net\minecraft\dispenser\BehaviorDefaultDispenseItem.java
+++ src\main\java\net\minecraft\dispenser\BehaviorDefaultDispenseItem.java
@@ -4,12 +4,17 @@
 import net.minecraft.entity.item.EntityItem;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
+
 public class BehaviorDefaultDispenseItem implements IBehaviorDispenseItem
 {
+
     private static final String __OBFID = "CL_00001195";
 
     public final ItemStack dispense(IBlockSource source, ItemStack stack)
     {
         ItemStack itemstack1 = this.dispenseStack(source, stack);
@@ -21,16 +26,26 @@
     protected ItemStack dispenseStack(IBlockSource source, ItemStack stack)
     {
         EnumFacing enumfacing = BlockDispenser.getFacing(source.getBlockMetadata());
         IPosition iposition = BlockDispenser.getDispensePosition(source);
         ItemStack itemstack1 = stack.splitStack(1);
-        doDispense(source.getWorld(), itemstack1, 6, enumfacing, iposition);
+
+        // CraftBukkit start
+        if (!doDispense(source.getWorld(), itemstack1, 6, enumfacing, source))
+        {
+            stack.stackSize++;
+        }
+
+        // CraftBukkit end
         return stack;
     }
 
-    public static void doDispense(World worldIn, ItemStack stack, int speed, EnumFacing facing, IPosition position)
+    // CraftBukkit start - void -> boolean return, IPosition -> ISourceBlock last argument
+    public static boolean doDispense(World worldIn, ItemStack stack, int speed, EnumFacing facing, IBlockSource isourceblock)
     {
+        IPosition position = BlockDispenser.getDispensePosition(isourceblock);
+        // CraftBukkit end
         double d0 = position.getX();
         double d1 = position.getY();
         double d2 = position.getZ();
 
         if (facing.getAxis() == EnumFacing.Axis.Y)
@@ -48,11 +63,51 @@
         entityitem.motionY = 0.20000000298023224D;
         entityitem.motionZ = (double)facing.getFrontOffsetZ() * d3;
         entityitem.motionX += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
         entityitem.motionY += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
         entityitem.motionZ += worldIn.rand.nextGaussian() * 0.007499999832361937D * (double)speed;
+        // CraftBukkit start
+        org.bukkit.block.Block block = worldIn.getWorld().getBlockAt(isourceblock.getBlockPos().getX(), isourceblock.getBlockPos().getY(), isourceblock.getBlockPos().getZ());
+        CraftItemStack craftItem = CraftItemStack.asCraftMirror(stack);
+        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new Vector(entityitem.motionX, entityitem.motionY, entityitem.motionZ));
+
+        if (!BlockDispenser.eventFired)
+        {
+            worldIn.getServer().getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled())
+        {
+            return false;
+        }
+
+        entityitem.setEntityItemStack(CraftItemStack.asNMSCopy(event.getItem()));
+        entityitem.motionX = event.getVelocity().getX();
+        entityitem.motionY = event.getVelocity().getY();
+        entityitem.motionZ = event.getVelocity().getZ();
+
+        if (!event.getItem().getType().equals(craftItem.getType()))
+        {
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            IBehaviorDispenseItem idispensebehavior = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.getObject(eventStack.getItem());
+
+            if (idispensebehavior != IBehaviorDispenseItem.itemDispenseBehaviorProvider && idispensebehavior.getClass() != net.minecraft.dispenser.BehaviorDefaultDispenseItem.class)
+            {
+                idispensebehavior.dispense(isourceblock, eventStack);
+            }
+            else
+            {
+                worldIn.spawnEntityInWorld(entityitem);
+            }
+
+            return false;
+        }
+
         worldIn.spawnEntityInWorld(entityitem);
+        return true;
+        // CraftBukkit end
     }
 
     protected void playDispenseSound(IBlockSource source)
     {
         source.getWorld().playAuxSFX(1000, source.getBlockPos(), 0);
