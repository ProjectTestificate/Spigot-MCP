--- decompiled\net\minecraft\item\ItemBlock.java
+++ src\main\java\net\minecraft\item\ItemBlock.java
@@ -1,26 +1,24 @@
 package net.minecraft.item;
 
-import java.util.List;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockSnow;
 import net.minecraft.block.state.IBlockState;
-import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class ItemBlock extends Item
 {
-    protected final Block block;
+
+    public final Block block;
     private static final String __OBFID = "CL_00001772";
 
     public ItemBlock(Block block)
     {
         this.block = block;
@@ -112,49 +110,20 @@
         }
 
         return false;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean canPlaceBlockOnSide(World worldIn, BlockPos pos, EnumFacing side, EntityPlayer player, ItemStack stack)
-    {
-        Block block = worldIn.getBlockState(pos).getBlock();
-
-        if (block == Blocks.snow_layer)
-        {
-            side = EnumFacing.UP;
-        }
-        else if (!block.isReplaceable(worldIn, pos))
-        {
-            pos = pos.offset(side);
-        }
-
-        return worldIn.canBlockBePlaced(this.block, pos, false, side, (Entity)null, stack);
-    }
-
     public String getUnlocalizedName(ItemStack stack)
     {
         return this.block.getUnlocalizedName();
     }
 
     public String getUnlocalizedName()
     {
         return this.block.getUnlocalizedName();
     }
 
-    @SideOnly(Side.CLIENT)
-    public CreativeTabs getCreativeTab()
-    {
-        return this.block.getCreativeTabToDisplayOn();
-    }
-
-    @SideOnly(Side.CLIENT)
-    public void getSubItems(Item itemIn, CreativeTabs tab, List subItems)
-    {
-        this.block.getSubBlocks(itemIn, tab, subItems);
-    }
-
     public Block getBlock()
     {
         return this.block;
     }
 }
