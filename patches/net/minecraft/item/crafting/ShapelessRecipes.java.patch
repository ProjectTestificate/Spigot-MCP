---a/net/minecraft/item/crafting/ShapelessRecipes.java
+++b/net/minecraft/item/crafting/ShapelessRecipes.java
@@ -1,39 +1,55 @@
 package net.minecraft.item.crafting;
 
-import com.google.common.collect.Lists;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.ItemStack;
 import net.minecraft.world.World;
 
-public class ShapelessRecipes implements IRecipe
-{
-    private final ItemStack recipeOutput;
-    private final List recipeItems;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapelessRecipe;
+import org.bukkit.inventory.ShapelessRecipe;
+
+import com.google.common.collect.Lists;
+
+public class ShapelessRecipes implements IRecipe {
+
+    public final ItemStack recipeOutput; // Spigot
+    public final List recipeItems;
     private static final String __OBFID = "CL_00000094";
 
-    public ShapelessRecipes(ItemStack output, List inputList)
-    {
+    public ShapelessRecipes(ItemStack output, List inputList) {
         this.recipeOutput = output;
         this.recipeItems = inputList;
     }
 
-    public ItemStack getRecipeOutput()
-    {
+    // CraftBukkit start
+    @SuppressWarnings("unchecked")
+    public ShapelessRecipe toBukkitRecipe() {
+        CraftItemStack result = CraftItemStack.asCraftMirror(this.recipeOutput);
+        CraftShapelessRecipe recipe = new CraftShapelessRecipe(result, this);
+        for (ItemStack stack : (List<ItemStack>) this.recipeItems) {
+            if (stack != null) {
+                recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getMetadata());
+            }
+        }
+        return recipe;
+    }
+    // CraftBukkit end
+
+    public ItemStack getRecipeOutput() {
         return this.recipeOutput;
     }
 
-    public ItemStack[] getRemainingItems(InventoryCrafting p_179532_1_)
-    {
+    public ItemStack[] getRemainingItems(InventoryCrafting p_179532_1_) {
         ItemStack[] aitemstack = new ItemStack[p_179532_1_.getSizeInventory()];
 
-        for (int i = 0; i < aitemstack.length; ++i)
-        {
+        for (int i = 0; i < aitemstack.length; ++i) {
             ItemStack itemstack = p_179532_1_.getStackInSlot(i);
 
-            if (itemstack != null && itemstack.getItem().hasContainerItem())
-            {
+            if (itemstack != null && itemstack.getItem().hasContainerItem()) {
                 aitemstack[i] = new ItemStack(itemstack.getItem().getContainerItem());
             }
         }
@@ -42,35 +42,28 @@
         return aitemstack;
     }
 
-    public boolean matches(InventoryCrafting p_77569_1_, World worldIn)
-    {
+    public boolean matches(InventoryCrafting p_77569_1_, World worldIn) {
         ArrayList arraylist = Lists.newArrayList(this.recipeItems);
 
-        for (int i = 0; i < p_77569_1_.getHeight(); ++i)
-        {
-            for (int j = 0; j < p_77569_1_.getWidth(); ++j)
-            {
+        for (int i = 0; i < p_77569_1_.getHeight(); ++i) {
+            for (int j = 0; j < p_77569_1_.getWidth(); ++j) {
                 ItemStack itemstack = p_77569_1_.getStackInRowAndColumn(j, i);
 
-                if (itemstack != null)
-                {
+                if (itemstack != null) {
                     boolean flag = false;
                     Iterator iterator = arraylist.iterator();
 
-                    while (iterator.hasNext())
-                    {
-                        ItemStack itemstack1 = (ItemStack)iterator.next();
+                    while (iterator.hasNext()) {
+                        ItemStack itemstack1 = (ItemStack) iterator.next();
 
-                        if (itemstack.getItem() == itemstack1.getItem() && (itemstack1.getMetadata() == 32767 || itemstack.getMetadata() == itemstack1.getMetadata()))
-                        {
+                        if (itemstack.getItem() == itemstack1.getItem() && (itemstack1.getMetadata() == 32767 || itemstack.getMetadata() == itemstack1.getMetadata())) {
                             flag = true;
                             arraylist.remove(itemstack1);
                             break;
                         }
                     }
 
-                    if (!flag)
-                    {
+                    if (!flag) {
                         return false;
                     }
                 }
@@ -80,14 +80,11 @@
         return arraylist.isEmpty();
     }
 
-    public ItemStack getCraftingResult(InventoryCrafting p_77572_1_)
-    {
+    public ItemStack getCraftingResult(InventoryCrafting p_77572_1_) {
         return this.recipeOutput.copy();
     }
 
-    public int getRecipeSize()
-    {
+    public int getRecipeSize() {
         return this.recipeItems.size();
     }
-}
+
+    // Spigot start
+    public List getIngredients() {
+        return Collections.unmodifiableList(recipeItems);
+    }
+    // Spigot end
+}
