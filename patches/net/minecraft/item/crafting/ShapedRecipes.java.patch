--- decompiled\net\minecraft\item\crafting\ShapedRecipes.java
+++ src\main\java\net\minecraft\item\crafting\ShapedRecipes.java
@@ -1,18 +1,26 @@
 package net.minecraft.item.crafting;
 
+import java.util.Arrays;
+import java.util.List;
+
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapedRecipe;
+import org.bukkit.inventory.ShapedRecipe;
+
 public class ShapedRecipes implements IRecipe
 {
-    private final int recipeWidth;
-    private final int recipeHeight;
-    private final ItemStack[] recipeItems;
-    private final ItemStack recipeOutput;
+
+    public final int recipeWidth;
+    public final int recipeHeight;
+    public final ItemStack[] recipeItems;
+    public ItemStack recipeOutput; // Spigot
     private boolean field_92101_f;
     private static final String __OBFID = "CL_00000093";
 
     public ShapedRecipes(int width, int height, ItemStack[] p_i1917_3_, ItemStack output)
     {
@@ -20,10 +28,84 @@
         this.recipeHeight = height;
         this.recipeItems = p_i1917_3_;
         this.recipeOutput = output;
     }
 
+    // CraftBukkit start
+    public ShapedRecipe toBukkitRecipe()
+    {
+        CraftItemStack result = CraftItemStack.asCraftMirror(this.recipeOutput);
+        CraftShapedRecipe recipe = new CraftShapedRecipe(result, this);
+
+        switch (this.recipeHeight)
+        {
+            case 1:
+
+                switch (this.recipeWidth)
+                {
+                    case 1:
+                        recipe.shape("a");
+                        break;
+                    case 2:
+                        recipe.shape("ab");
+                        break;
+                    case 3:
+                        recipe.shape("abc");
+                        break;
+                }
+
+                break;
+            case 2:
+
+                switch (this.recipeWidth)
+                {
+                    case 1:
+                        recipe.shape("a", "b");
+                        break;
+                    case 2:
+                        recipe.shape("ab", "cd");
+                        break;
+                    case 3:
+                        recipe.shape("abc", "def");
+                        break;
+                }
+
+                break;
+            case 3:
+
+                switch (this.recipeWidth)
+                {
+                    case 1:
+                        recipe.shape("a", "b", "c");
+                        break;
+                    case 2:
+                        recipe.shape("ab", "cd", "ef");
+                        break;
+                    case 3:
+                        recipe.shape("abc", "def", "ghi");
+                        break;
+                }
+
+                break;
+        }
+
+        char c = 'a';
+
+        for (ItemStack stack : this.recipeItems)
+        {
+            if (stack != null)
+            {
+                recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getMetadata());
+            }
+
+            c++;
+        }
+
+        return recipe;
+    }
+    // CraftBukkit end
+
     public ItemStack getRecipeOutput()
     {
         return this.recipeOutput;
     }
 
@@ -140,6 +222,13 @@
     public ShapedRecipes func_92100_c()
     {
         this.field_92101_f = true;
         return this;
     }
+
+    // Spigot start
+    public List getIngredients()
+    {
+        return Arrays.asList(recipeItems);
+    }
+    // Spigot end
 }
