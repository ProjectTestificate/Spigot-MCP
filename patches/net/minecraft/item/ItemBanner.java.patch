---a/net/minecraft/item/ItemBanner.java
+++b/net/minecraft/item/ItemBanner.java
@@ -1,13 +1,11 @@
 package net.minecraft.item;
 
-import java.util.List;
 import net.minecraft.block.BlockStandingSign;
 import net.minecraft.block.BlockWallSign;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Blocks;
 import net.minecraft.nbt.NBTTagCompound;
-import net.minecraft.nbt.NBTTagList;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityBanner;
 import net.minecraft.util.BlockPos;
@@ -15,15 +15,12 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.StatCollector;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemBanner extends ItemBlock
-{
+
+public class ItemBanner extends ItemBlock {
+
     private static final String __OBFID = "CL_00002181";
 
-    public ItemBanner()
-    {
+    public ItemBanner() {
         super(Blocks.standing_banner);
         this.maxStackSize = 16;
         this.setCreativeTab(CreativeTabs.tabDecorations);
@@ -31,51 +31,33 @@
         this.setMaxDamage(0);
     }
 
-    public boolean onItemUse(ItemStack stack, EntityPlayer playerIn, World worldIn, BlockPos pos, EnumFacing side, float hitX, float hitY, float hitZ)
-    {
-        if (side == EnumFacing.DOWN)
-        {
+    public boolean onItemUse(ItemStack stack, EntityPlayer playerIn, World worldIn, BlockPos pos, EnumFacing side, float hitX, float hitY, float hitZ) {
+        if (side == EnumFacing.DOWN) {
             return false;
-        }
-        else if (!worldIn.getBlockState(pos).getBlock().getMaterial().isSolid())
-        {
+        } else if (!worldIn.getBlockState(pos).getBlock().getMaterial().isSolid()) {
             return false;
-        }
-        else
-        {
+        } else {
             pos = pos.offset(side);
 
-            if (!playerIn.canPlayerEdit(pos, side, stack))
-            {
+            if (!playerIn.canPlayerEdit(pos, side, stack)) {
                 return false;
-            }
-            else if (!Blocks.standing_banner.canPlaceBlockAt(worldIn, pos))
-            {
+            } else if (!Blocks.standing_banner.canPlaceBlockAt(worldIn, pos)) {
                 return false;
-            }
-            else if (worldIn.isRemote)
-            {
+            } else if (worldIn.isRemote) {
                 return true;
-            }
-            else
-            {
-                if (side == EnumFacing.UP)
-                {
-                    int i = MathHelper.floor_double((double)((playerIn.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
+            } else {
+                if (side == EnumFacing.UP) {
+                    int i = MathHelper.floor_double((double) ((playerIn.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
                     worldIn.setBlockState(pos, Blocks.standing_banner.getDefaultState().withProperty(BlockStandingSign.ROTATION, Integer.valueOf(i)), 3);
-                }
-                else
-                {
+                } else {
                     worldIn.setBlockState(pos, Blocks.wall_banner.getDefaultState().withProperty(BlockWallSign.FACING, side), 3);
                 }
 
                 --stack.stackSize;
                 TileEntity tileentity = worldIn.getTileEntity(pos);
 
-                if (tileentity instanceof TileEntityBanner)
-                {
-                    ((TileEntityBanner)tileentity).setItemValues(stack);
+                if (tileentity instanceof TileEntityBanner) {
+                    ((TileEntityBanner) tileentity).setItemValues(stack);
                 }
 
                 return true;
@@ -82,85 +82,23 @@
         }
     }
 
-    public String getItemStackDisplayName(ItemStack stack)
-    {
+    public String getItemStackDisplayName(ItemStack stack) {
         String s = "item.banner.";
         EnumDyeColor enumdyecolor = this.getBaseColor(stack);
         s = s + enumdyecolor.getUnlocalizedName() + ".name";
         return StatCollector.translateToLocal(s);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void addInformation(ItemStack stack, EntityPlayer playerIn, List tooltip, boolean advanced)
-    {
+    private EnumDyeColor getBaseColor(ItemStack stack) {
         NBTTagCompound nbttagcompound = stack.getSubCompound("BlockEntityTag", false);
-
-        if (nbttagcompound != null && nbttagcompound.hasKey("Patterns"))
-        {
-            NBTTagList nbttaglist = nbttagcompound.getTagList("Patterns", 10);
-
-            for (int i = 0; i < nbttaglist.tagCount() && i < 6; ++i)
-            {
-                NBTTagCompound nbttagcompound1 = nbttaglist.getCompoundTagAt(i);
-                EnumDyeColor enumdyecolor = EnumDyeColor.byDyeDamage(nbttagcompound1.getInteger("Color"));
-                TileEntityBanner.EnumBannerPattern enumbannerpattern = TileEntityBanner.EnumBannerPattern.getPatternByID(nbttagcompound1.getString("Pattern"));
-
-                if (enumbannerpattern != null)
-                {
-                    tooltip.add(StatCollector.translateToLocal("item.banner." + enumbannerpattern.getPatternName() + "." + enumdyecolor.getUnlocalizedName()));
-                }
-            }
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public int getColorFromItemStack(ItemStack stack, int renderPass)
-    {
-        if (renderPass == 0)
-        {
-            return 16777215;
-        }
-        else
-        {
-            EnumDyeColor enumdyecolor = this.getBaseColor(stack);
-            return enumdyecolor.getMapColor().colorValue;
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public void getSubItems(Item itemIn, CreativeTabs tab, List subItems)
-    {
-        EnumDyeColor[] aenumdyecolor = EnumDyeColor.values();
-        int i = aenumdyecolor.length;
-
-        for (int j = 0; j < i; ++j)
-        {
-            EnumDyeColor enumdyecolor = aenumdyecolor[j];
-            subItems.add(new ItemStack(itemIn, 1, enumdyecolor.getDyeDamage()));
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public CreativeTabs getCreativeTab()
-    {
-        return CreativeTabs.tabDecorations;
-    }
-
-    private EnumDyeColor getBaseColor(ItemStack stack)
-    {
-        NBTTagCompound nbttagcompound = stack.getSubCompound("BlockEntityTag", false);
         EnumDyeColor enumdyecolor = null;
 
-        if (nbttagcompound != null && nbttagcompound.hasKey("Base"))
-        {
+        if (nbttagcompound != null && nbttagcompound.hasKey("Base")) {
             enumdyecolor = EnumDyeColor.byDyeDamage(nbttagcompound.getInteger("Base"));
-        }
-        else
-        {
+        } else {
             enumdyecolor = EnumDyeColor.byDyeDamage(stack.getMetadata());
         }
 
         return enumdyecolor;
     }
-}
+}
