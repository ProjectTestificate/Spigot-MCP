--- decompiled\net\minecraft\item\Item.java
+++ src\main\java\net\minecraft\item\Item.java
@@ -1,15 +1,11 @@
 package net.minecraft.item;
 
-import com.google.common.base.Function;
-import com.google.common.collect.HashMultimap;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Multimap;
-import java.util.List;
 import java.util.Map;
 import java.util.Random;
 import java.util.UUID;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockDirt;
 import net.minecraft.block.BlockDoublePlant;
 import net.minecraft.block.BlockFlower;
 import net.minecraft.block.BlockPlanks;
@@ -40,15 +36,19 @@
 import net.minecraft.util.RegistryNamespaced;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.StatCollector;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import com.google.common.base.Function;
+import com.google.common.collect.HashMultimap;
+import com.google.common.collect.Maps;
+import com.google.common.collect.Multimap;
+
 public class Item
 {
+
     public static final RegistryNamespaced itemRegistry = new RegistryNamespaced();
     private static final Map BLOCK_TO_ITEM = Maps.newHashMap();
     protected static final UUID itemModifierUUID = UUID.fromString("CB3F55D3-645C-4F38-A497-9C13A33DB5CF");
     private CreativeTabs tabToDisplayOn;
     protected static Random itemRand = new Random();
@@ -139,22 +139,22 @@
     public boolean getHasSubtypes()
     {
         return this.hasSubtypes;
     }
 
-    protected Item setHasSubtypes(boolean hasSubtypes)
+    public Item setHasSubtypes(boolean hasSubtypes)
     {
         this.hasSubtypes = hasSubtypes;
         return this;
     }
 
     public int getMaxDamage()
     {
         return this.maxDamage;
     }
 
-    protected Item setMaxDamage(int maxDamageIn)
+    public Item setMaxDamage(int maxDamageIn)
     {
         this.maxDamage = maxDamageIn;
         return this;
     }
 
@@ -187,22 +187,10 @@
     {
         this.bFull3D = true;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean isFull3D()
-    {
-        return this.bFull3D;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean shouldRotateAroundWhenRendering()
-    {
-        return false;
-    }
-
     public Item setUnlocalizedName(String unlocalizedName)
     {
         this.unlocalizedName = unlocalizedName;
         return this;
     }
@@ -242,20 +230,18 @@
     public boolean hasContainerItem()
     {
         return this.containerItem != null;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getColorFromItemStack(ItemStack stack, int renderPass)
+    public void onUpdate(ItemStack stack, World worldIn, Entity entityIn, int itemSlot, boolean isSelected)
     {
-        return 16777215;
     }
 
-    public void onUpdate(ItemStack stack, World worldIn, Entity entityIn, int itemSlot, boolean isSelected) {}
+    public void onCreated(ItemStack stack, World worldIn, EntityPlayer playerIn)
+    {
+    }
 
-    public void onCreated(ItemStack stack, World worldIn, EntityPlayer playerIn) {}
-
     public boolean isMap()
     {
         return false;
     }
 
@@ -267,13 +253,15 @@
     public int getMaxItemUseDuration(ItemStack stack)
     {
         return 0;
     }
 
-    public void onPlayerStoppedUsing(ItemStack stack, World worldIn, EntityPlayer playerIn, int timeLeft) {}
+    public void onPlayerStoppedUsing(ItemStack stack, World worldIn, EntityPlayer playerIn, int timeLeft)
+    {
+    }
 
-    protected Item setPotionEffect(String potionEffect)
+    public Item setPotionEffect(String potionEffect)
     {
         this.potionEffect = potionEffect;
         return this;
     }
 
@@ -285,24 +273,15 @@
     public boolean isPotionIngredient(ItemStack stack)
     {
         return this.getPotionEffect(stack) != null;
     }
 
-    @SideOnly(Side.CLIENT)
-    public void addInformation(ItemStack stack, EntityPlayer playerIn, List tooltip, boolean advanced) {}
-
     public String getItemStackDisplayName(ItemStack stack)
     {
         return ("" + StatCollector.translateToLocal(this.getUnlocalizedNameInefficiently(stack) + ".name")).trim();
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean hasEffect(ItemStack stack)
-    {
-        return stack.isItemEnchanted();
-    }
-
     public EnumRarity getRarity(ItemStack stack)
     {
         return stack.isItemEnchanted() ? EnumRarity.RARE : EnumRarity.COMMON;
     }
 
@@ -333,28 +312,16 @@
     public int getItemEnchantability()
     {
         return 0;
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubItems(Item itemIn, CreativeTabs tab, List subItems)
-    {
-        subItems.add(new ItemStack(itemIn, 1, 0));
-    }
-
     public Item setCreativeTab(CreativeTabs tab)
     {
         this.tabToDisplayOn = tab;
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
-    public CreativeTabs getCreativeTab()
-    {
-        return this.tabToDisplayOn;
-    }
-
     public boolean canItemEditBlocks()
     {
         return false;
     }
 
