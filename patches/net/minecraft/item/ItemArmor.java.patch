--- decompiled\net\minecraft\item\ItemArmor.java
+++ src\main\java\net\minecraft\item\ItemArmor.java
@@ -1,9 +1,9 @@
 package net.minecraft.item;
 
-import com.google.common.base.Predicates;
 import java.util.List;
+
 import net.minecraft.block.BlockDispenser;
 import net.minecraft.command.IEntitySelector;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.dispenser.BehaviorDefaultDispenseItem;
 import net.minecraft.dispenser.IBehaviorDispenseItem;
@@ -14,15 +14,20 @@
 import net.minecraft.init.Items;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
+
+import com.google.common.base.Predicates;
+
 public class ItemArmor extends Item
 {
+
     private static final int[] maxDamageArray = new int[] {11, 16, 15, 13};
     public static final String[] EMPTY_SLOT_NAMES = new String[] {"minecraft:items/empty_armor_slot_helmet", "minecraft:items/empty_armor_slot_chestplate", "minecraft:items/empty_armor_slot_leggings", "minecraft:items/empty_armor_slot_boots"};
     private static final IBehaviorDispenseItem dispenserBehavior = new BehaviorDefaultDispenseItem()
     {
         private static final String __OBFID = "CL_00001767";
@@ -38,20 +43,52 @@
             if (list.size() > 0)
             {
                 EntityLivingBase entitylivingbase = (EntityLivingBase)list.get(0);
                 int l = entitylivingbase instanceof EntityPlayer ? 1 : 0;
                 int i1 = EntityLiving.getArmorPosition(stack);
-                ItemStack itemstack1 = stack.copy();
+                // CraftBukkit start
+                ItemStack itemstack1 = stack.splitStack(1);
+                World world = source.getWorld();
+                org.bukkit.block.Block block = world.getWorld().getBlockAt(source.getBlockPos().getX(), source.getBlockPos().getY(), source.getBlockPos().getZ());
+                CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new Vector(0, 0, 0));
+
+                if (!BlockDispenser.eventFired)
+                {
+                    world.getServer().getPluginManager().callEvent(event);
+                }
+
+                if (event.isCancelled())
+                {
+                    stack.stackSize++;
+                    return stack;
+                }
+
+                if (!event.getItem().equals(craftItem))
+                {
+                    stack.stackSize++;
+                    // Chain to handler for new item
+                    ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                    IBehaviorDispenseItem idispensebehavior = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.getObject(eventStack.getItem());
+
+                    if (idispensebehavior != IBehaviorDispenseItem.itemDispenseBehaviorProvider && idispensebehavior != this)
+                    {
+                        idispensebehavior.dispense(source, eventStack);
+                        return stack;
+                    }
+                }
+
+                // CraftBukkit end
                 itemstack1.stackSize = 1;
                 entitylivingbase.setCurrentItemOrArmor(i1 - l, itemstack1);
 
                 if (entitylivingbase instanceof EntityLiving)
                 {
                     ((EntityLiving)entitylivingbase).setEquipmentDropChance(i1, 2.0F);
                 }
 
-                --stack.stackSize;
+                // --stack.stackSize; // CraftBukkit - handled above
                 return stack;
             }
             else
             {
                 return super.dispenseStack(source, stack);
@@ -74,30 +111,10 @@
         this.maxStackSize = 1;
         this.setCreativeTab(CreativeTabs.tabCombat);
         BlockDispenser.dispenseBehaviorRegistry.putObject(this, dispenserBehavior);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getColorFromItemStack(ItemStack stack, int renderPass)
-    {
-        if (renderPass > 0)
-        {
-            return 16777215;
-        }
-        else
-        {
-            int j = this.getColor(stack);
-
-            if (j < 0)
-            {
-                j = 16777215;
-            }
-
-            return j;
-        }
-    }
-
     public int getItemEnchantability()
     {
         return this.material.getEnchantability();
     }
 
@@ -199,15 +216,15 @@
         return itemStackIn;
     }
 
     public static enum ArmorMaterial
     {
-        LEATHER("leather", 5, new int[]{1, 3, 2, 1}, 15),
-        CHAIN("chainmail", 15, new int[]{2, 5, 4, 1}, 12),
-        IRON("iron", 15, new int[]{2, 6, 5, 2}, 9),
-        GOLD("gold", 7, new int[]{2, 5, 3, 1}, 25),
-        DIAMOND("diamond", 33, new int[]{3, 8, 6, 3}, 10);
+        LEATHER("leather", 5, new int[] {1, 3, 2, 1}, 15),
+        CHAIN("chainmail", 15, new int[] {2, 5, 4, 1}, 12),
+        IRON("iron", 15, new int[] {2, 6, 5, 2}, 9),
+        GOLD("gold", 7, new int[] {2, 5, 3, 1}, 25),
+        DIAMOND("diamond", 33, new int[] {3, 8, 6, 3}, 10);
         private final String name;
         private final int maxDamageFactor;
         private final int[] damageReductionAmountArray;
         private final int enchantability;
 
@@ -238,13 +255,7 @@
 
         public Item getRepairItem()
         {
             return this == LEATHER ? Items.leather : (this == CHAIN ? Items.iron_ingot : (this == GOLD ? Items.gold_ingot : (this == IRON ? Items.iron_ingot : (this == DIAMOND ? Items.diamond : null))));
         }
-
-        @SideOnly(Side.CLIENT)
-        public String getName()
-        {
-            return this.name;
-        }
     }
 }
