--- decompiled\net\minecraft\item\ItemMonsterPlacer.java
+++ src\main\java\net\minecraft\item\ItemMonsterPlacer.java
@@ -1,9 +1,7 @@
 package net.minecraft.item;
 
-import java.util.Iterator;
-import java.util.List;
 import net.minecraft.block.BlockFence;
 import net.minecraft.block.BlockLiquid;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.Entity;
@@ -21,15 +19,16 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.util.StatCollector;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+
 public class ItemMonsterPlacer extends Item
 {
+
     private static final String __OBFID = "CL_00000070";
 
     public ItemMonsterPlacer()
     {
         this.setHasSubtypes(true);
@@ -47,20 +46,14 @@
         }
 
         return s;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getColorFromItemStack(ItemStack stack, int renderPass)
-    {
-        EntityList.EntityEggInfo entityegginfo = (EntityList.EntityEggInfo)EntityList.entityEggs.get(Integer.valueOf(stack.getMetadata()));
-        return entityegginfo != null ? (renderPass == 0 ? entityegginfo.primaryColor : entityegginfo.secondaryColor) : 16777215;
-    }
-
     public boolean onItemUse(ItemStack stack, EntityPlayer playerIn, World worldIn, BlockPos pos, EnumFacing side, float hitX, float hitY, float hitZ)
     {
-        if (worldIn.isRemote)
+        // CraftBukkit - check ItemStack data
+        if (worldIn.isRemote || stack.getMetadata() == 48 || stack.getMetadata() == 49 || stack.getMetadata() == 63 || stack.getMetadata() == 64)
         {
             return true;
         }
         else if (!playerIn.canPlayerEdit(pos.offset(side), side, stack))
         {
@@ -171,12 +164,19 @@
                 return itemStackIn;
             }
         }
     }
 
-    public static Entity spawnCreature(World worldIn, int entityID, double x, double y, double z)
+    public static net.minecraft.entity.Entity spawnCreature(World world, int i, double d0, double d1, double d2)
     {
+        // CraftBukkit start - delegate to spawnCreature
+        return spawnCreature(world, i, d0, d1, d2, SpawnReason.SPAWNER_EGG);
+    }
+
+    public static net.minecraft.entity.Entity spawnCreature(World worldIn, int entityID, double x, double y, double z, SpawnReason spawnReason)
+    {
+        // CraftBukkit end
         if (!EntityList.entityEggs.containsKey(Integer.valueOf(entityID)))
         {
             return null;
         }
         else
@@ -192,26 +192,24 @@
                     EntityLiving entityliving = (EntityLiving)entity;
                     entity.setLocationAndAngles(x, y, z, MathHelper.wrapAngleTo180_float(worldIn.rand.nextFloat() * 360.0F), 0.0F);
                     entityliving.rotationYawHead = entityliving.rotationYaw;
                     entityliving.renderYawOffset = entityliving.rotationYaw;
                     entityliving.func_180482_a(worldIn.getDifficultyForLocation(new BlockPos(entityliving)), (IEntityLivingData)null);
-                    worldIn.spawnEntityInWorld(entity);
-                    entityliving.playLivingSound();
+
+                    // CraftBukkit start - don't return an entity when CreatureSpawnEvent is canceled
+                    if (!worldIn.addEntity(entity, spawnReason))
+                    {
+                        entity = null;
+                    }
+                    else
+                    {
+                        entityliving.playLivingSound();
+                    }
+
+                    // CraftBukkit end
                 }
             }
 
             return entity;
         }
     }
-
-    @SideOnly(Side.CLIENT)
-    public void getSubItems(Item itemIn, CreativeTabs tab, List subItems)
-    {
-        Iterator iterator = EntityList.entityEggs.values().iterator();
-
-        while (iterator.hasNext())
-        {
-            EntityList.EntityEggInfo entityegginfo = (EntityList.EntityEggInfo)iterator.next();
-            subItems.add(new ItemStack(itemIn, 1, entityegginfo.spawnedID));
-        }
-    }
 }
