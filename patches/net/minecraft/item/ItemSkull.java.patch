--- decompiled\net\minecraft\item\ItemSkull.java
+++ src\main\java\net\minecraft\item\ItemSkull.java
@@ -1,10 +1,9 @@
 package net.minecraft.item;
 
-import com.mojang.authlib.GameProfile;
-import java.util.List;
 import java.util.UUID;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockSkull;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.player.EntityPlayer;
@@ -16,15 +15,17 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.StatCollector;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import com.google.common.base.Predicate;
+import com.mojang.authlib.GameProfile;
+
 public class ItemSkull extends Item
 {
+
     private static final String[] skullTypes = new String[] {"skeleton", "wither", "zombie", "char", "creeper"};
     private static final String __OBFID = "CL_00000067";
 
     public ItemSkull()
     {
@@ -65,10 +66,17 @@
             }
             else
             {
                 if (!worldIn.isRemote)
                 {
+                    // Spigot Start
+                    if (!Blocks.skull.canPlaceBlockAt(worldIn, pos))
+                    {
+                        return false;
+                    }
+
+                    // Spigot End
                     worldIn.setBlockState(pos, Blocks.skull.getDefaultState().withProperty(BlockSkull.FACING, side), 3);
                     int i = 0;
 
                     if (side == EnumFacing.UP)
                     {
@@ -116,19 +124,10 @@
                 return true;
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getSubItems(Item itemIn, CreativeTabs tab, List subItems)
-    {
-        for (int i = 0; i < skullTypes.length; ++i)
-        {
-            subItems.add(new ItemStack(itemIn, 1, i));
-        }
-    }
-
     public int getMetadata(int damage)
     {
         return damage;
     }
 
@@ -165,18 +164,28 @@
         }
 
         return super.getItemStackDisplayName(stack);
     }
 
-    public boolean updateItemStackNBT(NBTTagCompound nbt)
+    public boolean updateItemStackNBT(final NBTTagCompound nbt)   // Spigot - make final
     {
         super.updateItemStackNBT(nbt);
 
         if (nbt.hasKey("SkullOwner", 8) && nbt.getString("SkullOwner").length() > 0)
         {
             GameProfile gameprofile = new GameProfile((UUID)null, nbt.getString("SkullOwner"));
-            gameprofile = TileEntitySkull.updateGameprofile(gameprofile);
+            // Spigot start
+            TileEntitySkull.updateGameprofile(gameprofile, new Predicate<GameProfile>()
+            {
+                @Override
+                public boolean apply(GameProfile gameprofile)
+                {
+                    nbt.setTag("SkullOwner", NBTUtil.writeGameProfile(new NBTTagCompound(), gameprofile));
+                    return false;
+                }
+            });
+            // Spigot end
             nbt.setTag("SkullOwner", NBTUtil.writeGameProfile(new NBTTagCompound(), gameprofile));
             return true;
         }
         else
         {
