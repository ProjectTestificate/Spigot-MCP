--- decompiled\net\minecraft\item\ItemEnchantedBook.java
+++ src\main\java\net\minecraft\item\ItemEnchantedBook.java
@@ -1,30 +1,22 @@
 package net.minecraft.item;
 
-import java.util.List;
 import java.util.Random;
-import net.minecraft.enchantment.Enchantment;
+
 import net.minecraft.enchantment.EnchantmentData;
 import net.minecraft.enchantment.EnchantmentHelper;
-import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Items;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.util.WeightedRandomChestContent;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class ItemEnchantedBook extends Item
 {
+
     private static final String __OBFID = "CL_00000025";
 
-    @SideOnly(Side.CLIENT)
-    public boolean hasEffect(ItemStack stack)
-    {
-        return true;
-    }
-
     public boolean isItemTool(ItemStack stack)
     {
         return false;
     }
 
@@ -37,31 +29,10 @@
     {
         NBTTagCompound nbttagcompound = stack.getTagCompound();
         return nbttagcompound != null && nbttagcompound.hasKey("StoredEnchantments", 9) ? (NBTTagList)nbttagcompound.getTag("StoredEnchantments") : new NBTTagList();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void addInformation(ItemStack stack, EntityPlayer playerIn, List tooltip, boolean advanced)
-    {
-        super.addInformation(stack, playerIn, tooltip, advanced);
-        NBTTagList nbttaglist = this.getEnchantments(stack);
-
-        if (nbttaglist != null)
-        {
-            for (int i = 0; i < nbttaglist.tagCount(); ++i)
-            {
-                short short1 = nbttaglist.getCompoundTagAt(i).getShort("id");
-                short short2 = nbttaglist.getCompoundTagAt(i).getShort("lvl");
-
-                if (Enchantment.getEnchantmentById(short1) != null)
-                {
-                    tooltip.add(Enchantment.getEnchantmentById(short1).getTranslatedName(short2));
-                }
-            }
-        }
-    }
-
     public void addEnchantment(ItemStack stack, EnchantmentData enchantment)
     {
         NBTTagList nbttaglist = this.getEnchantments(stack);
         boolean flag = true;
 
@@ -102,19 +73,10 @@
         ItemStack itemstack = new ItemStack(this);
         this.addEnchantment(itemstack, data);
         return itemstack;
     }
 
-    @SideOnly(Side.CLIENT)
-    public void getAll(Enchantment enchantment, List list)
-    {
-        for (int i = enchantment.getMinLevel(); i <= enchantment.getMaxLevel(); ++i)
-        {
-            list.add(this.getEnchantedItemStack(new EnchantmentData(enchantment, i)));
-        }
-    }
-
     public WeightedRandomChestContent getRandom(Random rand)
     {
         return this.getRandom(rand, 1, 1, 1);
     }
 
