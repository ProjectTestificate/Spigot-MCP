---a/net/minecraft/item/ItemLilyPad.java
+++b/net/minecraft/item/ItemLilyPad.java
@@ -10,50 +10,40 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemLilyPad extends ItemColored
-{
+
+public class ItemLilyPad extends ItemColored {
+
     private static final String __OBFID = "CL_00000074";
 
-    public ItemLilyPad(Block block)
-    {
+    public ItemLilyPad(Block block) {
         super(block, false);
     }
 
-    public ItemStack onItemRightClick(ItemStack itemStackIn, World worldIn, EntityPlayer playerIn)
-    {
+    public ItemStack onItemRightClick(ItemStack itemStackIn, World worldIn, EntityPlayer playerIn) {
         MovingObjectPosition movingobjectposition = this.getMovingObjectPositionFromPlayer(worldIn, playerIn, true);
 
-        if (movingobjectposition == null)
-        {
+        if (movingobjectposition == null) {
             return itemStackIn;
-        }
-        else
-        {
-            if (movingobjectposition.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK)
-            {
+        } else {
+            if (movingobjectposition.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK) {
                 BlockPos blockpos = movingobjectposition.getBlockPos();
 
-                if (!worldIn.isBlockModifiable(playerIn, blockpos))
-                {
+                if (!worldIn.isBlockModifiable(playerIn, blockpos)) {
                     return itemStackIn;
                 }
 
-                if (!playerIn.canPlayerEdit(blockpos.offset(movingobjectposition.sideHit), movingobjectposition.sideHit, itemStackIn))
-                {
+                if (!playerIn.canPlayerEdit(blockpos.offset(movingobjectposition.sideHit), movingobjectposition.sideHit, itemStackIn)) {
                     return itemStackIn;
                 }
 
                 BlockPos blockpos1 = blockpos.up();
                 IBlockState iblockstate = worldIn.getBlockState(blockpos);
 
-                if (iblockstate.getBlock().getMaterial() == Material.water && ((Integer)iblockstate.getValue(BlockLiquid.LEVEL)).intValue() == 0 && worldIn.isAirBlock(blockpos1))
-                {
+                if (iblockstate.getBlock().getMaterial() == Material.water && ((Integer) iblockstate.getValue(BlockLiquid.LEVEL)).intValue() == 0 && worldIn.isAirBlock(blockpos1)) {
+                    // CraftBukkit start - special case for handling block placement with water lilies
+                    org.bukkit.block.BlockState blockstate = org.bukkit.craftbukkit.block.CraftBlockState.getBlockState(worldIn, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
                     worldIn.setBlockState(blockpos1, Blocks.waterlily.getDefaultState());
-
-                    if (!playerIn.capabilities.isCreativeMode)
-                    {
+                    org.bukkit.event.block.BlockPlaceEvent placeEvent = org.bukkit.craftbukkit.event.CraftEventFactory.callBlockPlaceEvent(worldIn, playerIn, blockstate, blockpos.getX(), blockpos.getY(), blockpos.getZ());
+                    if (placeEvent != null && (placeEvent.isCancelled() || !placeEvent.canBuild())) {
+                        blockstate.update(true, false);
+                        return itemStackIn;
+                    }
+                    // CraftBukkit end
+                    if (!playerIn.capabilities.isCreativeMode) {
                         --itemStackIn.stackSize;
                     }
 
@@ -65,10 +65,4 @@
             return itemStackIn;
         }
     }
-
-    @SideOnly(Side.CLIENT)
-    public int getColorFromItemStack(ItemStack stack, int renderPass)
-    {
-        return Blocks.waterlily.getRenderColor(Blocks.waterlily.getStateFromMeta(stack.getMetadata()));
-    }
-}
+}
