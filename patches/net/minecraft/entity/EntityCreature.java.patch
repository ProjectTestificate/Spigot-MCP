--- decompiled\net\minecraft\entity\EntityCreature.java
+++ src\main\java\net\minecraft\entity\EntityCreature.java
@@ -1,150 +1,133 @@
 package net.minecraft.entity;
 
 import java.util.UUID;
+
 import net.minecraft.entity.ai.EntityAIBase;
 import net.minecraft.entity.ai.EntityAIMoveTowardsRestriction;
 import net.minecraft.entity.ai.attributes.AttributeModifier;
 import net.minecraft.entity.passive.EntityTameable;
 import net.minecraft.pathfinding.PathNavigateGround;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 
-public abstract class EntityCreature extends EntityLiving
-{
+import org.bukkit.event.entity.EntityUnleashEvent;
+
+public abstract class EntityCreature extends EntityLiving {
+
     public static final UUID field_110179_h = UUID.fromString("E199AD21-BA8A-4C53-8D13-6182D5C69D3A");
     public static final AttributeModifier field_110181_i = (new AttributeModifier(field_110179_h, "Fleeing speed bonus", 2.0D, 2)).setSaved(false);
     private BlockPos homePosition;
     private float maximumHomeDistance;
     private EntityAIBase aiBase;
     private boolean field_110180_bt;
     private static final String __OBFID = "CL_00001558";
 
-    public EntityCreature(World worldIn)
-    {
+    public EntityCreature(World worldIn) {
         super(worldIn);
         this.homePosition = BlockPos.ORIGIN;
         this.maximumHomeDistance = -1.0F;
         this.aiBase = new EntityAIMoveTowardsRestriction(this, 1.0D);
     }
 
-    public float func_180484_a(BlockPos p_180484_1_)
-    {
+    public float func_180484_a(BlockPos p_180484_1_) {
         return 0.0F;
     }
 
-    public boolean getCanSpawnHere()
-    {
+    public boolean getCanSpawnHere() {
         return super.getCanSpawnHere() && this.func_180484_a(new BlockPos(this.posX, this.getEntityBoundingBox().minY, this.posZ)) >= 0.0F;
     }
 
-    public boolean hasPath()
-    {
+    public boolean hasPath() {
         return !this.navigator.noPath();
     }
 
-    public boolean isWithinHomeDistanceCurrentPosition()
-    {
+    public boolean isWithinHomeDistanceCurrentPosition() {
         return this.func_180485_d(new BlockPos(this));
     }
 
-    public boolean func_180485_d(BlockPos p_180485_1_)
-    {
-        return this.maximumHomeDistance == -1.0F ? true : this.homePosition.distanceSq(p_180485_1_) < (double)(this.maximumHomeDistance * this.maximumHomeDistance);
+    public boolean func_180485_d(BlockPos p_180485_1_) {
+        return this.maximumHomeDistance == -1.0F ? true : this.homePosition.distanceSq(p_180485_1_) < (double) (this.maximumHomeDistance * this.maximumHomeDistance);
     }
 
-    public void func_175449_a(BlockPos p_175449_1_, int p_175449_2_)
-    {
+    public void func_175449_a(BlockPos p_175449_1_, int p_175449_2_) {
         this.homePosition = p_175449_1_;
-        this.maximumHomeDistance = (float)p_175449_2_;
+        this.maximumHomeDistance = (float) p_175449_2_;
     }
 
-    public BlockPos func_180486_cf()
-    {
+    public BlockPos func_180486_cf() {
         return this.homePosition;
     }
 
-    public float getMaximumHomeDistance()
-    {
+    public float getMaximumHomeDistance() {
         return this.maximumHomeDistance;
     }
 
-    public void detachHome()
-    {
+    public void detachHome() {
         this.maximumHomeDistance = -1.0F;
     }
 
-    public boolean hasHome()
-    {
+    public boolean hasHome() {
         return this.maximumHomeDistance != -1.0F;
     }
 
-    protected void updateLeashedState()
-    {
+    protected void updateLeashedState() {
         super.updateLeashedState();
 
-        if (this.getLeashed() && this.getLeashedToEntity() != null && this.getLeashedToEntity().worldObj == this.worldObj)
-        {
+        if (this.getLeashed() && this.getLeashedToEntity() != null && this.getLeashedToEntity().worldObj == this.worldObj) {
             Entity entity = this.getLeashedToEntity();
-            this.func_175449_a(new BlockPos((int)entity.posX, (int)entity.posY, (int)entity.posZ), 5);
+            this.func_175449_a(new BlockPos((int) entity.posX, (int) entity.posY, (int) entity.posZ), 5);
             float f = this.getDistanceToEntity(entity);
 
-            if (this instanceof EntityTameable && ((EntityTameable)this).isSitting())
-            {
-                if (f > 10.0F)
-                {
+            if (this instanceof EntityTameable && ((EntityTameable) this).isSitting()) {
+                if (f > 10.0F) {
+                    this.worldObj.getServer().getPluginManager().callEvent(new EntityUnleashEvent(this.getBukkitEntity(), EntityUnleashEvent.UnleashReason.DISTANCE)); // CraftBukkit
                     this.clearLeashed(true, true);
                 }
 
                 return;
             }
 
-            if (!this.field_110180_bt)
-            {
+            if (!this.field_110180_bt) {
                 this.tasks.addTask(2, this.aiBase);
 
-                if (this.getNavigator() instanceof PathNavigateGround)
-                {
-                    ((PathNavigateGround)this.getNavigator()).func_179690_a(false);
+                if (this.getNavigator() instanceof PathNavigateGround) {
+                    ((PathNavigateGround) this.getNavigator()).func_179690_a(false);
                 }
 
                 this.field_110180_bt = true;
             }
 
             this.func_142017_o(f);
 
-            if (f > 4.0F)
-            {
+            if (f > 4.0F) {
                 this.getNavigator().tryMoveToEntityLiving(entity, 1.0D);
             }
 
-            if (f > 6.0F)
-            {
-                double d0 = (entity.posX - this.posX) / (double)f;
-                double d1 = (entity.posY - this.posY) / (double)f;
-                double d2 = (entity.posZ - this.posZ) / (double)f;
+            if (f > 6.0F) {
+                double d0 = (entity.posX - this.posX) / (double) f;
+                double d1 = (entity.posY - this.posY) / (double) f;
+                double d2 = (entity.posZ - this.posZ) / (double) f;
                 this.motionX += d0 * Math.abs(d0) * 0.4D;
                 this.motionY += d1 * Math.abs(d1) * 0.4D;
                 this.motionZ += d2 * Math.abs(d2) * 0.4D;
             }
 
-            if (f > 10.0F)
-            {
+            if (f > 10.0F) {
+                this.worldObj.getServer().getPluginManager().callEvent(new EntityUnleashEvent(this.getBukkitEntity(), EntityUnleashEvent.UnleashReason.DISTANCE)); // CraftBukkit
                 this.clearLeashed(true, true);
             }
-        }
-        else if (!this.getLeashed() && this.field_110180_bt)
-        {
+        } else if (!this.getLeashed() && this.field_110180_bt) {
             this.field_110180_bt = false;
             this.tasks.removeTask(this.aiBase);
 
-            if (this.getNavigator() instanceof PathNavigateGround)
-            {
-                ((PathNavigateGround)this.getNavigator()).func_179690_a(true);
+            if (this.getNavigator() instanceof PathNavigateGround) {
+                ((PathNavigateGround) this.getNavigator()).func_179690_a(true);
             }
 
             this.detachHome();
         }
     }
 
-    protected void func_142017_o(float p_142017_1_) {}
+    protected void func_142017_o(float p_142017_1_) {
+    }
 }
