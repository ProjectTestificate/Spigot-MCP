--- decompiled\net\minecraft\entity\ai\attributes\ModifiableAttributeInstance.java
+++ src\main\java\net\minecraft\entity\ai\attributes\ModifiableAttributeInstance.java
@@ -1,22 +1,20 @@
 package net.minecraft.entity.ai.attributes;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
-import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
 import java.util.UUID;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import com.google.common.collect.Maps;
+import com.google.common.collect.Sets;
+
 public class ModifiableAttributeInstance implements IAttributeInstance
 {
+
     private final BaseAttributeMap attributeMap;
     private final IAttribute genericAttribute;
     private final Map mapByOperation = Maps.newHashMap();
     private final Map mapByName = Maps.newHashMap();
     private final Map mapByUUID = Maps.newHashMap();
@@ -56,11 +54,11 @@
         }
     }
 
     public Collection getModifiersByOperation(int p_111130_1_)
     {
-        return (Collection)this.mapByOperation.get(Integer.valueOf(p_111130_1_));
+        return (Collection) this.mapByOperation.get(Integer.valueOf(p_111130_1_));
     }
 
     public Collection func_111122_c()
     {
         HashSet hashset = Sets.newHashSet();
@@ -73,11 +71,11 @@
         return hashset;
     }
 
     public AttributeModifier getModifier(UUID p_111127_1_)
     {
-        return (AttributeModifier)this.mapByUUID.get(p_111127_1_);
+        return (AttributeModifier) this.mapByUUID.get(p_111127_1_);
     }
 
     public boolean func_180374_a(AttributeModifier p_180374_1_)
     {
         return this.mapByUUID.get(p_180374_1_.getID()) != null;
@@ -89,20 +87,20 @@
         {
             throw new IllegalArgumentException("Modifier is already applied on this attribute!");
         }
         else
         {
-            Object object = (Set)this.mapByName.get(p_111121_1_.getName());
+            Object object = (Set) this.mapByName.get(p_111121_1_.getName());
 
             if (object == null)
             {
                 object = Sets.newHashSet();
                 this.mapByName.put(p_111121_1_.getName(), object);
             }
 
-            ((Set)this.mapByOperation.get(Integer.valueOf(p_111121_1_.getOperation()))).add(p_111121_1_);
-            ((Set)object).add(p_111121_1_);
+            ((Set) this.mapByOperation.get(Integer.valueOf(p_111121_1_.getOperation()))).add(p_111121_1_);
+            ((Set) object).add(p_111121_1_);
             this.mapByUUID.put(p_111121_1_.getID(), p_111121_1_);
             this.flagForUpdate();
         }
     }
 
@@ -114,15 +112,15 @@
 
     public void removeModifier(AttributeModifier p_111124_1_)
     {
         for (int i = 0; i < 3; ++i)
         {
-            Set set = (Set)this.mapByOperation.get(Integer.valueOf(i));
+            Set set = (Set) this.mapByOperation.get(Integer.valueOf(i));
             set.remove(p_111124_1_);
         }
 
-        Set set1 = (Set)this.mapByName.get(p_111124_1_.getName());
+        Set set1 = (Set) this.mapByName.get(p_111124_1_.getName());
 
         if (set1 != null)
         {
             set1.remove(p_111124_1_);
 
@@ -134,28 +132,10 @@
 
         this.mapByUUID.remove(p_111124_1_.getID());
         this.flagForUpdate();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void removeAllModifiers()
-    {
-        Collection collection = this.func_111122_c();
-
-        if (collection != null)
-        {
-            ArrayList arraylist = Lists.newArrayList(collection);
-            Iterator iterator = arraylist.iterator();
-
-            while (iterator.hasNext())
-            {
-                AttributeModifier attributemodifier = (AttributeModifier)iterator.next();
-                this.removeModifier(attributemodifier);
-            }
-        }
-    }
-
     public double getAttributeValue()
     {
         if (this.needsUpdate)
         {
             this.cachedValue = this.computeValue();
@@ -170,25 +150,25 @@
         double d0 = this.getBaseValue();
         AttributeModifier attributemodifier;
 
         for (Iterator iterator = this.func_180375_b(0).iterator(); iterator.hasNext(); d0 += attributemodifier.getAmount())
         {
-            attributemodifier = (AttributeModifier)iterator.next();
+            attributemodifier = (AttributeModifier) iterator.next();
         }
 
         double d1 = d0;
         Iterator iterator1;
         AttributeModifier attributemodifier1;
 
         for (iterator1 = this.func_180375_b(1).iterator(); iterator1.hasNext(); d1 += d0 * attributemodifier1.getAmount())
         {
-            attributemodifier1 = (AttributeModifier)iterator1.next();
+            attributemodifier1 = (AttributeModifier) iterator1.next();
         }
 
         for (iterator1 = this.func_180375_b(2).iterator(); iterator1.hasNext(); d1 *= 1.0D + attributemodifier1.getAmount())
         {
-            attributemodifier1 = (AttributeModifier)iterator1.next();
+            attributemodifier1 = (AttributeModifier) iterator1.next();
         }
 
         return this.genericAttribute.clampValue(d1);
     }
 
