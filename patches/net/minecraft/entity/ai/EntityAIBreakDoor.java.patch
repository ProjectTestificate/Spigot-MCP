---a/net/minecraft/entity/ai/EntityAIBreakDoor.java
+++b/net/minecraft/entity/ai/EntityAIBreakDoor.java
@@ -5,51 +5,41 @@
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.world.EnumDifficulty;
 
-public class EntityAIBreakDoor extends EntityAIDoorInteract
-{
+public class EntityAIBreakDoor extends EntityAIDoorInteract {
+
     private int breakingTime;
     private int previousBreakProgress = -1;
     private static final String __OBFID = "CL_00001577";
 
-    public EntityAIBreakDoor(EntityLiving entityIn)
-    {
+    public EntityAIBreakDoor(EntityLiving entityIn) {
         super(entityIn);
     }
 
-    public boolean shouldExecute()
-    {
-        if (!super.shouldExecute())
-        {
+    public boolean shouldExecute() {
+        if (!super.shouldExecute()) {
             return false;
-        }
-        else if (!this.theEntity.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
-        {
+        } else if (!this.theEntity.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing")) {
             return false;
-        }
-        else
-        {
+        } else {
             BlockDoor blockdoor = this.doorBlock;
             return !BlockDoor.isOpen(this.theEntity.worldObj, this.doorPosition);
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         super.startExecuting();
         this.breakingTime = 0;
     }
 
-    public boolean continueExecuting()
-    {
+    public boolean continueExecuting() {
         double d0 = this.theEntity.getDistanceSq(this.doorPosition);
         boolean flag;
 
-        if (this.breakingTime <= 240)
-        {
+        if (this.breakingTime <= 240) {
             BlockDoor blockdoor = this.doorBlock;
 
-            if (!BlockDoor.isOpen(this.theEntity.worldObj, this.doorPosition) && d0 < 4.0D)
-            {
+            if (!BlockDoor.isOpen(this.theEntity.worldObj, this.doorPosition) && d0 < 4.0D) {
                 flag = true;
                 return flag;
             }
@@ -59,36 +59,36 @@
         return flag;
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         super.resetTask();
         this.theEntity.worldObj.sendBlockBreakProgress(this.theEntity.getEntityId(), this.doorPosition, -1);
     }
 
-    public void updateTask()
-    {
+    public void updateTask() {
         super.updateTask();
 
-        if (this.theEntity.getRNG().nextInt(20) == 0)
-        {
+        if (this.theEntity.getRNG().nextInt(20) == 0) {
             this.theEntity.worldObj.playAuxSFX(1010, this.doorPosition, 0);
         }
 
         ++this.breakingTime;
-        int i = (int)((float)this.breakingTime / 240.0F * 10.0F);
+        int i = (int) ((float) this.breakingTime / 240.0F * 10.0F);
 
-        if (i != this.previousBreakProgress)
-        {
+        if (i != this.previousBreakProgress) {
             this.theEntity.worldObj.sendBlockBreakProgress(this.theEntity.getEntityId(), this.doorPosition, i);
             this.previousBreakProgress = i;
         }
 
-        if (this.breakingTime == 240 && this.theEntity.worldObj.getDifficulty() == EnumDifficulty.HARD)
-        {
+        if (this.breakingTime == 240 && this.theEntity.worldObj.getDifficulty() == EnumDifficulty.HARD) {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityBreakDoorEvent(this.theEntity, this.doorPosition.getX(), this.doorPosition.getY(), this.doorPosition.getZ()).isCancelled()) {
+                this.startExecuting();
+                return;
+            }
+            // CraftBukkit end
             this.theEntity.worldObj.setBlockToAir(this.doorPosition);
             this.theEntity.worldObj.playAuxSFX(1012, this.doorPosition, 0);
             this.theEntity.worldObj.playAuxSFX(2001, this.doorPosition, Block.getIdFromBlock(this.doorBlock));
         }
     }
-}
+}
