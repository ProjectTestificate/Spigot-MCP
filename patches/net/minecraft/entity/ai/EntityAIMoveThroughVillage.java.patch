---a/net/minecraft/entity/ai/EntityAIMoveThroughVillage.java
+++b/net/minecraft/entity/ai/EntityAIMoveThroughVillage.java
@@ -1,9 +1,7 @@
 package net.minecraft.entity.ai;
 
-import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.pathfinding.PathEntity;
 import net.minecraft.pathfinding.PathNavigateGround;
@@ -12,8 +12,10 @@
 import net.minecraft.village.Village;
 import net.minecraft.village.VillageDoorInfo;
 
-public class EntityAIMoveThroughVillage extends EntityAIBase
-{
+import com.google.common.collect.Lists;
+
+public class EntityAIMoveThroughVillage extends EntityAIBase {
+
     private EntityCreature theEntity;
     private double movementSpeed;
     private PathEntity entityPathNavigate;
@@ -22,64 +22,47 @@
     private List doorList = Lists.newArrayList();
     private static final String __OBFID = "CL_00001597";
 
-    public EntityAIMoveThroughVillage(EntityCreature p_i1638_1_, double p_i1638_2_, boolean p_i1638_4_)
-    {
+    public EntityAIMoveThroughVillage(EntityCreature p_i1638_1_, double p_i1638_2_, boolean p_i1638_4_) {
         this.theEntity = p_i1638_1_;
         this.movementSpeed = p_i1638_2_;
         this.isNocturnal = p_i1638_4_;
         this.setMutexBits(1);
 
-        if (!(p_i1638_1_.getNavigator() instanceof PathNavigateGround))
-        {
+        if (!(p_i1638_1_.getNavigator() instanceof PathNavigateGround)) {
             throw new IllegalArgumentException("Unsupported mob for MoveThroughVillageGoal");
         }
     }
 
-    public boolean shouldExecute()
-    {
+    public boolean shouldExecute() {
         this.func_75414_f();
 
-        if (this.isNocturnal && this.theEntity.worldObj.isDaytime())
-        {
+        if (this.isNocturnal && this.theEntity.worldObj.isDaytime()) {
             return false;
-        }
-        else
-        {
+        } else {
             Village village = this.theEntity.worldObj.getVillageCollection().getNearestVillage(new BlockPos(this.theEntity), 0);
 
-            if (village == null)
-            {
+            if (village == null) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.doorInfo = this.func_75412_a(village);
 
-                if (this.doorInfo == null)
-                {
+                if (this.doorInfo == null) {
                     return false;
-                }
-                else
-                {
-                    PathNavigateGround pathnavigateground = (PathNavigateGround)this.theEntity.getNavigator();
+                } else {
+                    PathNavigateGround pathnavigateground = (PathNavigateGround) this.theEntity.getNavigator();
                     boolean flag = pathnavigateground.func_179686_g();
                     pathnavigateground.func_179688_b(false);
                     this.entityPathNavigate = pathnavigateground.func_179680_a(this.doorInfo.getDoorBlockPos());
                     pathnavigateground.func_179688_b(flag);
 
-                    if (this.entityPathNavigate != null)
-                    {
+                    if (this.entityPathNavigate != null) {
                         return true;
-                    }
-                    else
-                    {
-                        Vec3 vec3 = RandomPositionGenerator.findRandomTargetBlockTowards(this.theEntity, 10, 7, new Vec3((double)this.doorInfo.getDoorBlockPos().getX(), (double)this.doorInfo.getDoorBlockPos().getY(), (double)this.doorInfo.getDoorBlockPos().getZ()));
+                    } else {
+                        Vec3 vec3 = RandomPositionGenerator.findRandomTargetBlockTowards(this.theEntity, 10, 7, new Vec3((double) this.doorInfo.getDoorBlockPos().getX(), (double) this.doorInfo.getDoorBlockPos().getY(), (double) this.doorInfo.getDoorBlockPos().getZ()));
 
-                        if (vec3 == null)
-                        {
+                        if (vec3 == null) {
                             return false;
-                        }
-                        else
-                        {
+                        } else {
                             pathnavigateground.func_179688_b(false);
                             this.entityPathNavigate = this.theEntity.getNavigator().getPathToXYZ(vec3.xCoord, vec3.yCoord, vec3.zCoord);
                             pathnavigateground.func_179688_b(flag);
@@ -92,48 +92,37 @@
         }
     }
 
-    public boolean continueExecuting()
-    {
-        if (this.theEntity.getNavigator().noPath())
-        {
+    public boolean continueExecuting() {
+        if (this.theEntity.getNavigator().noPath()) {
             return false;
-        }
-        else
-        {
+        } else {
             float f = this.theEntity.width + 4.0F;
-            return this.theEntity.getDistanceSq(this.doorInfo.getDoorBlockPos()) > (double)(f * f);
+            return this.theEntity.getDistanceSq(this.doorInfo.getDoorBlockPos()) > (double) (f * f);
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.theEntity.getNavigator().setPath(this.entityPathNavigate, this.movementSpeed);
     }
 
-    public void resetTask()
-    {
-        if (this.theEntity.getNavigator().noPath() || this.theEntity.getDistanceSq(this.doorInfo.getDoorBlockPos()) < 16.0D)
-        {
+    public void resetTask() {
+        if (this.theEntity.getNavigator().noPath() || this.theEntity.getDistanceSq(this.doorInfo.getDoorBlockPos()) < 16.0D) {
             this.doorList.add(this.doorInfo);
         }
     }
 
-    private VillageDoorInfo func_75412_a(Village p_75412_1_)
-    {
+    private VillageDoorInfo func_75412_a(Village p_75412_1_) {
         VillageDoorInfo villagedoorinfo = null;
         int i = Integer.MAX_VALUE;
         List list = p_75412_1_.getVillageDoorInfoList();
         Iterator iterator = list.iterator();
 
-        while (iterator.hasNext())
-        {
-            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo)iterator.next();
+        while (iterator.hasNext()) {
+            VillageDoorInfo villagedoorinfo1 = (VillageDoorInfo) iterator.next();
             int j = villagedoorinfo1.getDistanceSquared(MathHelper.floor_double(this.theEntity.posX), MathHelper.floor_double(this.theEntity.posY), MathHelper.floor_double(this.theEntity.posZ));
 
-            if (j < i && !this.func_75413_a(villagedoorinfo1))
-            {
+            if (j < i && !this.func_75413_a(villagedoorinfo1)) {
                 villagedoorinfo = villagedoorinfo1;
                 i = j;
             }
@@ -140,31 +140,24 @@
         return villagedoorinfo;
     }
 
-    private boolean func_75413_a(VillageDoorInfo p_75413_1_)
-    {
+    private boolean func_75413_a(VillageDoorInfo p_75413_1_) {
         Iterator iterator = this.doorList.iterator();
         VillageDoorInfo villagedoorinfo1;
 
-        do
-        {
-            if (!iterator.hasNext())
-            {
+        do {
+            if (!iterator.hasNext()) {
                 return false;
             }
 
-            villagedoorinfo1 = (VillageDoorInfo)iterator.next();
-        }
-        while (!p_75413_1_.getDoorBlockPos().equals(villagedoorinfo1.getDoorBlockPos()));
+            villagedoorinfo1 = (VillageDoorInfo) iterator.next();
+        } while (!p_75413_1_.getDoorBlockPos().equals(villagedoorinfo1.getDoorBlockPos()));
 
         return true;
     }
 
-    private void func_75414_f()
-    {
-        if (this.doorList.size() > 15)
-        {
+    private void func_75414_f() {
+        if (this.doorList.size() > 15) {
             this.doorList.remove(0);
         }
     }
-}
+}
