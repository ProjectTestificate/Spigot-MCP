---a/net/minecraft/entity/ai/EntityAIEatGrass.java
+++b/net/minecraft/entity/ai/EntityAIEatGrass.java
@@ -1,7 +1,5 @@
 package net.minecraft.entity.ai;
 
-import com.google.common.base.Predicate;
-import com.google.common.base.Predicates;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockTallGrass;
 import net.minecraft.block.state.pattern.BlockStateHelper;
@@ -10,79 +10,76 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 
-public class EntityAIEatGrass extends EntityAIBase
-{
+import org.bukkit.Material;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
+import com.google.common.base.Predicate;
+import com.google.common.base.Predicates;
+
+public class EntityAIEatGrass extends EntityAIBase {
+
     private static final Predicate field_179505_b = BlockStateHelper.forBlock(Blocks.tallgrass).where(BlockTallGrass.TYPE, Predicates.equalTo(BlockTallGrass.EnumType.GRASS));
     private EntityLiving grassEaterEntity;
     private World entityWorld;
     int eatingGrassTimer;
     private static final String __OBFID = "CL_00001582";
 
-    public EntityAIEatGrass(EntityLiving p_i45314_1_)
-    {
+    public EntityAIEatGrass(EntityLiving p_i45314_1_) {
         this.grassEaterEntity = p_i45314_1_;
         this.entityWorld = p_i45314_1_.worldObj;
         this.setMutexBits(7);
     }
 
-    public boolean shouldExecute()
-    {
-        if (this.grassEaterEntity.getRNG().nextInt(this.grassEaterEntity.isChild() ? 50 : 1000) != 0)
-        {
+    public boolean shouldExecute() {
+        if (this.grassEaterEntity.getRNG().nextInt(this.grassEaterEntity.isChild() ? 50 : 1000) != 0) {
             return false;
-        }
-        else
-        {
+        } else {
             BlockPos blockpos = new BlockPos(this.grassEaterEntity.posX, this.grassEaterEntity.posY, this.grassEaterEntity.posZ);
             return field_179505_b.apply(this.entityWorld.getBlockState(blockpos)) ? true : this.entityWorld.getBlockState(blockpos.down()).getBlock() == Blocks.grass;
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.eatingGrassTimer = 40;
-        this.entityWorld.setEntityState(this.grassEaterEntity, (byte)10);
+        this.entityWorld.setEntityState(this.grassEaterEntity, (byte) 10);
         this.grassEaterEntity.getNavigator().clearPathEntity();
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.eatingGrassTimer = 0;
     }
 
-    public boolean continueExecuting()
-    {
+    public boolean continueExecuting() {
         return this.eatingGrassTimer > 0;
     }
 
-    public int getEatingGrassTimer()
-    {
+    public int getEatingGrassTimer() {
         return this.eatingGrassTimer;
     }
 
-    public void updateTask()
-    {
+    public void updateTask() {
         this.eatingGrassTimer = Math.max(0, this.eatingGrassTimer - 1);
 
-        if (this.eatingGrassTimer == 4)
-        {
+        if (this.eatingGrassTimer == 4) {
             BlockPos blockpos = new BlockPos(this.grassEaterEntity.posX, this.grassEaterEntity.posY, this.grassEaterEntity.posZ);
 
-            if (field_179505_b.apply(this.entityWorld.getBlockState(blockpos)))
-            {
-                if (this.entityWorld.getGameRules().getGameRuleBooleanValue("mobGriefing"))
-                {
+            if (field_179505_b.apply(this.entityWorld.getBlockState(blockpos))) {
+                if (!CraftEventFactory.callEntityChangeBlockEvent(this.grassEaterEntity, this.grassEaterEntity.worldObj.getWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ()), Material.AIR, !this.entityWorld.getGameRules().getGameRuleBooleanValue("mobGriefing")).isCancelled()) {
                     this.entityWorld.destroyBlock(blockpos, false);
                 }
 
                 this.grassEaterEntity.eatGrassBonus();
-            }
-            else
-            {
+            } else {
                 BlockPos blockpos1 = blockpos.down();
 
-                if (this.entityWorld.getBlockState(blockpos1).getBlock() == Blocks.grass)
-                {
-                    if (this.entityWorld.getGameRules().getGameRuleBooleanValue("mobGriefing"))
-                    {
+                if (this.entityWorld.getBlockState(blockpos1).getBlock() == Blocks.grass) {
+                    if (!CraftEventFactory.callEntityChangeBlockEvent(this.grassEaterEntity, this.grassEaterEntity.worldObj.getWorld().getBlockAt(blockpos1.getX(), blockpos1.getY(), blockpos1.getZ()), Material.DIRT, !this.entityWorld.getGameRules().getGameRuleBooleanValue("mobGriefing")).isCancelled()) {
                         this.entityWorld.playAuxSFX(2001, blockpos1, Block.getIdFromBlock(Blocks.grass));
                         this.entityWorld.setBlockState(blockpos1, Blocks.dirt.getDefaultState(), 2);
                     }
@@ -94,4 +94,4 @@
             }
         }
     }
-}
+}
