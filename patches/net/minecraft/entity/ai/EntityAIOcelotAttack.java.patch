--- decompiled\net\minecraft\entity\ai\EntityAIOcelotAttack.java
+++ src\main\java\net\minecraft\entity\ai\EntityAIOcelotAttack.java
@@ -2,74 +2,61 @@
 
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.world.World;
 
-public class EntityAIOcelotAttack extends EntityAIBase
-{
+public class EntityAIOcelotAttack extends EntityAIBase {
+
     World theWorld;
     EntityLiving theEntity;
     EntityLivingBase theVictim;
     int attackCountdown;
     private static final String __OBFID = "CL_00001600";
 
-    public EntityAIOcelotAttack(EntityLiving p_i1641_1_)
-    {
+    public EntityAIOcelotAttack(EntityLiving p_i1641_1_) {
         this.theEntity = p_i1641_1_;
         this.theWorld = p_i1641_1_.worldObj;
         this.setMutexBits(3);
     }
 
-    public boolean shouldExecute()
-    {
+    public boolean shouldExecute() {
         EntityLivingBase entitylivingbase = this.theEntity.getAttackTarget();
 
-        if (entitylivingbase == null)
-        {
+        if (entitylivingbase == null) {
             return false;
-        }
-        else
-        {
+        } else {
             this.theVictim = entitylivingbase;
             return true;
         }
     }
 
-    public boolean continueExecuting()
-    {
+    public boolean continueExecuting() {
         return !this.theVictim.isEntityAlive() ? false : (this.theEntity.getDistanceSqToEntity(this.theVictim) > 225.0D ? false : !this.theEntity.getNavigator().noPath() || this.shouldExecute());
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.theVictim = null;
         this.theEntity.getNavigator().clearPathEntity();
     }
 
-    public void updateTask()
-    {
+    public void updateTask() {
         this.theEntity.getLookHelper().setLookPositionWithEntity(this.theVictim, 30.0F, 30.0F);
-        double d0 = (double)(this.theEntity.width * 2.0F * this.theEntity.width * 2.0F);
+        double d0 = (double) (this.theEntity.width * 2.0F * this.theEntity.width * 2.0F);
         double d1 = this.theEntity.getDistanceSq(this.theVictim.posX, this.theVictim.getEntityBoundingBox().minY, this.theVictim.posZ);
         double d2 = 0.8D;
 
-        if (d1 > d0 && d1 < 16.0D)
-        {
+        if (d1 > d0 && d1 < 16.0D) {
             d2 = 1.33D;
-        }
-        else if (d1 < 225.0D)
-        {
+        } else if (d1 < 225.0D) {
             d2 = 0.6D;
         }
 
         this.theEntity.getNavigator().tryMoveToEntityLiving(this.theVictim, d2);
         this.attackCountdown = Math.max(this.attackCountdown - 1, 0);
 
-        if (d1 <= d0)
-        {
-            if (this.attackCountdown <= 0)
-            {
+        if (d1 <= d0) {
+            if (this.attackCountdown <= 0) {
                 this.attackCountdown = 20;
                 this.theEntity.attackEntityAsMob(this.theVictim);
             }
         }
     }
