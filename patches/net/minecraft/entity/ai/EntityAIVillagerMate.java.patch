--- decompiled\net\minecraft\entity\ai\EntityAIVillagerMate.java
+++ src\main\java\net\minecraft\entity\ai\EntityAIVillagerMate.java
@@ -4,124 +4,96 @@
 import net.minecraft.entity.passive.EntityVillager;
 import net.minecraft.util.BlockPos;
 import net.minecraft.village.Village;
 import net.minecraft.world.World;
 
-public class EntityAIVillagerMate extends EntityAIBase
-{
+public class EntityAIVillagerMate extends EntityAIBase {
+
     private EntityVillager villagerObj;
     private EntityVillager mate;
     private World worldObj;
     private int matingTimeout;
     Village villageObj;
     private static final String __OBFID = "CL_00001594";
 
-    public EntityAIVillagerMate(EntityVillager p_i1634_1_)
-    {
+    public EntityAIVillagerMate(EntityVillager p_i1634_1_) {
         this.villagerObj = p_i1634_1_;
         this.worldObj = p_i1634_1_.worldObj;
         this.setMutexBits(3);
     }
 
-    public boolean shouldExecute()
-    {
-        if (this.villagerObj.getGrowingAge() != 0)
-        {
+    public boolean shouldExecute() {
+        if (this.villagerObj.getGrowingAge() != 0) {
             return false;
-        }
-        else if (this.villagerObj.getRNG().nextInt(500) != 0)
-        {
+        } else if (this.villagerObj.getRNG().nextInt(500) != 0) {
             return false;
-        }
-        else
-        {
+        } else {
             this.villageObj = this.worldObj.getVillageCollection().getNearestVillage(new BlockPos(this.villagerObj), 0);
 
-            if (this.villageObj == null)
-            {
+            if (this.villageObj == null) {
                 return false;
-            }
-            else if (this.checkSufficientDoorsPresentForNewVillager() && this.villagerObj.func_175550_n(true))
-            {
+            } else if (this.checkSufficientDoorsPresentForNewVillager() && this.villagerObj.func_175550_n(true)) {
                 Entity entity = this.worldObj.findNearestEntityWithinAABB(EntityVillager.class, this.villagerObj.getEntityBoundingBox().expand(8.0D, 3.0D, 8.0D), this.villagerObj);
 
-                if (entity == null)
-                {
+                if (entity == null) {
                     return false;
-                }
-                else
-                {
-                    this.mate = (EntityVillager)entity;
+                } else {
+                    this.mate = (EntityVillager) entity;
                     return this.mate.getGrowingAge() == 0 && this.mate.func_175550_n(true);
                 }
-            }
-            else
-            {
+            } else {
                 return false;
             }
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.matingTimeout = 300;
         this.villagerObj.setMating(true);
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.villageObj = null;
         this.mate = null;
         this.villagerObj.setMating(false);
     }
 
-    public boolean continueExecuting()
-    {
+    public boolean continueExecuting() {
         return this.matingTimeout >= 0 && this.checkSufficientDoorsPresentForNewVillager() && this.villagerObj.getGrowingAge() == 0 && this.villagerObj.func_175550_n(false);
     }
 
-    public void updateTask()
-    {
+    public void updateTask() {
         --this.matingTimeout;
         this.villagerObj.getLookHelper().setLookPositionWithEntity(this.mate, 10.0F, 30.0F);
 
-        if (this.villagerObj.getDistanceSqToEntity(this.mate) > 2.25D)
-        {
+        if (this.villagerObj.getDistanceSqToEntity(this.mate) > 2.25D) {
             this.villagerObj.getNavigator().tryMoveToEntityLiving(this.mate, 0.25D);
-        }
-        else if (this.matingTimeout == 0 && this.mate.isMating())
-        {
+        } else if (this.matingTimeout == 0 && this.mate.isMating()) {
             this.giveBirth();
         }
 
-        if (this.villagerObj.getRNG().nextInt(35) == 0)
-        {
-            this.worldObj.setEntityState(this.villagerObj, (byte)12);
+        if (this.villagerObj.getRNG().nextInt(35) == 0) {
+            this.worldObj.setEntityState(this.villagerObj, (byte) 12);
         }
     }
 
-    private boolean checkSufficientDoorsPresentForNewVillager()
-    {
-        if (!this.villageObj.isMatingSeason())
-        {
+    private boolean checkSufficientDoorsPresentForNewVillager() {
+        if (!this.villageObj.isMatingSeason()) {
             return false;
-        }
-        else
-        {
-            int i = (int)((double)((float)this.villageObj.getNumVillageDoors()) * 0.35D);
+        } else {
+            int i = (int) ((double) ((float) this.villageObj.getNumVillageDoors()) * 0.35D);
             return this.villageObj.getNumVillagers() < i;
         }
     }
 
-    private void giveBirth()
-    {
+    private void giveBirth() {
         EntityVillager entityvillager = this.villagerObj.func_180488_b(this.mate);
         this.mate.setGrowingAge(6000);
         this.villagerObj.setGrowingAge(6000);
         this.mate.func_175549_o(false);
         this.villagerObj.func_175549_o(false);
         entityvillager.setGrowingAge(-24000);
         entityvillager.setLocationAndAngles(this.villagerObj.posX, this.villagerObj.posY, this.villagerObj.posZ, 0.0F, 0.0F);
-        this.worldObj.spawnEntityInWorld(entityvillager);
-        this.worldObj.setEntityState(entityvillager, (byte)12);
+        this.worldObj.addEntity(entityvillager, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING); // CraftBukkit - added SpawnReason
+        this.worldObj.setEntityState(entityvillager, (byte) 12);
     }
 }
