---a/net/minecraft/entity/ai/EntityAIPanic.java
+++b/net/minecraft/entity/ai/EntityAIPanic.java
@@ -1,8 +1,10 @@
 package net.minecraft.entity.ai;
 
 import net.minecraft.entity.EntityCreature;
+import net.minecraft.entity.EntityLiving;
 import net.minecraft.util.Vec3;
 
-public class EntityAIPanic extends EntityAIBase
-{
+public class EntityAIPanic extends EntityAIBase {
+
     private EntityCreature theEntityCreature;
     protected double speed;
     private double randPosX;
@@ -12,28 +12,21 @@
     private double randPosZ;
     private static final String __OBFID = "CL_00001604";
 
-    public EntityAIPanic(EntityCreature p_i1645_1_, double p_i1645_2_)
-    {
+    public EntityAIPanic(EntityCreature p_i1645_1_, double p_i1645_2_) {
         this.theEntityCreature = p_i1645_1_;
         this.speed = p_i1645_2_;
         this.setMutexBits(1);
     }
 
-    public boolean shouldExecute()
-    {
-        if (this.theEntityCreature.getAITarget() == null && !this.theEntityCreature.isBurning())
-        {
+    public boolean shouldExecute() {
+        if (this.theEntityCreature.getAITarget() == null && !this.theEntityCreature.isBurning()) {
             return false;
-        }
-        else
-        {
+        } else {
             Vec3 vec3 = RandomPositionGenerator.findRandomTarget(this.theEntityCreature, 5, 4);
 
-            if (vec3 == null)
-            {
+            if (vec3 == null) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.randPosX = vec3.xCoord;
                 this.randPosY = vec3.yCoord;
                 this.randPosZ = vec3.zCoord;
@@ -43,14 +43,17 @@
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.theEntityCreature.getNavigator().tryMoveToXYZ(this.randPosX, this.randPosY, this.randPosZ, this.speed);
     }
 
-    public boolean continueExecuting()
-    {
+    public boolean continueExecuting() {
+        // CraftBukkit start - introduce a temporary timeout hack until this is fixed properly
+        if ((this.theEntityCreature.ticksExisted - this.theEntityCreature.getRevengeTimer()) > 100) {
+            this.theEntityCreature.setRevengeTarget((EntityLiving) null);
+            return false;
+        }
+        // CraftBukkit end
         return !this.theEntityCreature.getNavigator().noPath();
     }
-}
+}
