---a/net/minecraft/entity/ai/EntityAIFollowOwner.java
+++b/net/minecraft/entity/ai/EntityAIFollowOwner.java
@@ -8,8 +8,8 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
-public class EntityAIFollowOwner extends EntityAIBase
-{
+public class EntityAIFollowOwner extends EntityAIBase {
+
     private EntityTameable thePet;
     private EntityLivingBase theOwner;
     World theWorld;
@@ -21,8 +21,7 @@
     private boolean field_75344_i;
     private static final String __OBFID = "CL_00001585";
 
-    public EntityAIFollowOwner(EntityTameable p_i1625_1_, double p_i1625_2_, float p_i1625_4_, float p_i1625_5_)
-    {
+    public EntityAIFollowOwner(EntityTameable p_i1625_1_, double p_i1625_2_, float p_i1625_4_, float p_i1625_5_) {
         this.thePet = p_i1625_1_;
         this.theWorld = p_i1625_1_.worldObj;
         this.field_75336_f = p_i1625_2_;
@@ -31,76 +31,57 @@
         this.maxDist = p_i1625_5_;
         this.setMutexBits(3);
 
-        if (!(p_i1625_1_.getNavigator() instanceof PathNavigateGround))
-        {
+        if (!(p_i1625_1_.getNavigator() instanceof PathNavigateGround)) {
             throw new IllegalArgumentException("Unsupported mob type for FollowOwnerGoal");
         }
     }
 
-    public boolean shouldExecute()
-    {
+    public boolean shouldExecute() {
         EntityLivingBase entitylivingbase = this.thePet.getOwnerEntity();
 
-        if (entitylivingbase == null)
-        {
+        if (entitylivingbase == null) {
             return false;
-        }
-        else if (this.thePet.isSitting())
-        {
+        } else if (this.thePet.isSitting()) {
             return false;
-        }
-        else if (this.thePet.getDistanceSqToEntity(entitylivingbase) < (double)(this.minDist * this.minDist))
-        {
+        } else if (this.thePet.getDistanceSqToEntity(entitylivingbase) < (double) (this.minDist * this.minDist)) {
             return false;
-        }
-        else
-        {
+        } else {
             this.theOwner = entitylivingbase;
             return true;
         }
     }
 
-    public boolean continueExecuting()
-    {
-        return !this.petPathfinder.noPath() && this.thePet.getDistanceSqToEntity(this.theOwner) > (double)(this.maxDist * this.maxDist) && !this.thePet.isSitting();
+    public boolean continueExecuting() {
+        return !this.petPathfinder.noPath() && this.thePet.getDistanceSqToEntity(this.theOwner) > (double) (this.maxDist * this.maxDist) && !this.thePet.isSitting();
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.field_75343_h = 0;
-        this.field_75344_i = ((PathNavigateGround)this.thePet.getNavigator()).func_179689_e();
-        ((PathNavigateGround)this.thePet.getNavigator()).func_179690_a(false);
+        this.field_75344_i = ((PathNavigateGround) this.thePet.getNavigator()).func_179689_e();
+        ((PathNavigateGround) this.thePet.getNavigator()).func_179690_a(false);
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.theOwner = null;
         this.petPathfinder.clearPathEntity();
-        ((PathNavigateGround)this.thePet.getNavigator()).func_179690_a(true);
+        ((PathNavigateGround) this.thePet.getNavigator()).func_179690_a(true);
     }
 
-    public void updateTask()
-    {
-        this.thePet.getLookHelper().setLookPositionWithEntity(this.theOwner, 10.0F, (float)this.thePet.getVerticalFaceSpeed());
+    public void updateTask() {
+        this.thePet.getLookHelper().setLookPositionWithEntity(this.theOwner, 10.0F, (float) this.thePet.getVerticalFaceSpeed());
 
-        if (!this.thePet.isSitting())
-        {
-            if (--this.field_75343_h <= 0)
-            {
+        if (!this.thePet.isSitting()) {
+            if (--this.field_75343_h <= 0) {
                 this.field_75343_h = 10;
 
-                if (!this.petPathfinder.tryMoveToEntityLiving(this.theOwner, this.field_75336_f))
-                {
-                    if (!this.thePet.getLeashed())
-                    {
-                        if (this.thePet.getDistanceSqToEntity(this.theOwner) >= 144.0D)
-                        {
+                if (!this.petPathfinder.tryMoveToEntityLiving(this.theOwner, this.field_75336_f)) {
+                    if (!this.thePet.getLeashed()) {
+                        if (this.thePet.getDistanceSqToEntity(this.theOwner) >= 144.0D) {
                             int i = MathHelper.floor_double(this.theOwner.posX) - 2;
                             int j = MathHelper.floor_double(this.theOwner.posZ) - 2;
                             int k = MathHelper.floor_double(this.theOwner.getEntityBoundingBox().minY);
 
-                            for (int l = 0; l <= 4; ++l)
-                            {
-                                for (int i1 = 0; i1 <= 4; ++i1)
-                                {
-                                    if ((l < 1 || i1 < 1 || l > 3 || i1 > 3) && World.doesBlockHaveSolidTopSurface(this.theWorld, new BlockPos(i + l, k - 1, j + i1)) && !this.theWorld.getBlockState(new BlockPos(i + l, k, j + i1)).getBlock().isFullCube() && !this.theWorld.getBlockState(new BlockPos(i + l, k + 1, j + i1)).getBlock().isFullCube())
-                                    {
-                                        this.thePet.setLocationAndAngles((double)((float)(i + l) + 0.5F), (double)k, (double)((float)(j + i1) + 0.5F), this.thePet.rotationYaw, this.thePet.rotationPitch);
+                            for (int l = 0; l <= 4; ++l) {
+                                for (int i1 = 0; i1 <= 4; ++i1) {
+                                    if ((l < 1 || i1 < 1 || l > 3 || i1 > 3) && World.doesBlockHaveSolidTopSurface(this.theWorld, new BlockPos(i + l, k - 1, j + i1)) && !this.theWorld.getBlockState(new BlockPos(i + l, k, j + i1)).getBlock().isFullCube() && !this.theWorld.getBlockState(new BlockPos(i + l, k + 1, j + i1)).getBlock().isFullCube()) {
+                                        this.thePet.setLocationAndAngles((double) ((float) (i + l) + 0.5F), (double) k, (double) ((float) (j + i1) + 0.5F), this.thePet.rotationYaw, this.thePet.rotationPitch);
                                         this.petPathfinder.clearPathEntity();
                                         return;
                                     }
@@ -117,4 +117,4 @@
             }
         }
     }
-}
+}
