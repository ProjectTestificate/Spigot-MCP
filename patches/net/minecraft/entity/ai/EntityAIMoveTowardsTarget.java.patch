---a/net/minecraft/entity/ai/EntityAIMoveTowardsTarget.java
+++b/net/minecraft/entity/ai/EntityAIMoveTowardsTarget.java
@@ -4,8 +4,8 @@
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.util.Vec3;
 
-public class EntityAIMoveTowardsTarget extends EntityAIBase
-{
+public class EntityAIMoveTowardsTarget extends EntityAIBase {
+
     private EntityCreature theEntity;
     private EntityLivingBase targetEntity;
     private double movePosX;
@@ -15,35 +15,26 @@
     private float maxTargetDistance;
     private static final String __OBFID = "CL_00001599";
 
-    public EntityAIMoveTowardsTarget(EntityCreature p_i1640_1_, double p_i1640_2_, float p_i1640_4_)
-    {
+    public EntityAIMoveTowardsTarget(EntityCreature p_i1640_1_, double p_i1640_2_, float p_i1640_4_) {
         this.theEntity = p_i1640_1_;
         this.speed = p_i1640_2_;
         this.maxTargetDistance = p_i1640_4_;
         this.setMutexBits(1);
     }
 
-    public boolean shouldExecute()
-    {
+    public boolean shouldExecute() {
         this.targetEntity = this.theEntity.getAttackTarget();
 
-        if (this.targetEntity == null)
-        {
+        if (this.targetEntity == null) {
             return false;
-        }
-        else if (this.targetEntity.getDistanceSqToEntity(this.theEntity) > (double)(this.maxTargetDistance * this.maxTargetDistance))
-        {
+        } else if (this.targetEntity.getDistanceSqToEntity(this.theEntity) > (double) (this.maxTargetDistance * this.maxTargetDistance)) {
             return false;
-        }
-        else
-        {
+        } else {
             Vec3 vec3 = RandomPositionGenerator.findRandomTargetBlockTowards(this.theEntity, 16, 7, new Vec3(this.targetEntity.posX, this.targetEntity.posY, this.targetEntity.posZ));
 
-            if (vec3 == null)
-            {
+            if (vec3 == null) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.movePosX = vec3.xCoord;
                 this.movePosY = vec3.yCoord;
                 this.movePosZ = vec3.zCoord;
@@ -53,20 +53,16 @@
         }
     }
 
-    public boolean continueExecuting()
-    {
-        return !this.theEntity.getNavigator().noPath() && this.targetEntity.isEntityAlive() && this.targetEntity.getDistanceSqToEntity(this.theEntity) < (double)(this.maxTargetDistance * this.maxTargetDistance);
+    public boolean continueExecuting() {
+        return !this.theEntity.getNavigator().noPath() && this.targetEntity.isEntityAlive() && this.targetEntity.getDistanceSqToEntity(this.theEntity) < (double) (this.maxTargetDistance * this.maxTargetDistance);
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.targetEntity = null;
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.theEntity.getNavigator().tryMoveToXYZ(this.movePosX, this.movePosY, this.movePosZ, this.speed);
     }
-}
+}
