--- decompiled\net\minecraft\entity\passive\EntityCow.java
+++ src\main\java\net\minecraft\entity\passive\EntityCow.java
@@ -17,119 +17,109 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.pathfinding.PathNavigateGround;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 
-public class EntityCow extends EntityAnimal
-{
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+
+public class EntityCow extends EntityAnimal {
+
     private static final String __OBFID = "CL_00001640";
 
-    public EntityCow(World worldIn)
-    {
+    public EntityCow(World worldIn) {
         super(worldIn);
         this.setSize(0.9F, 1.3F);
-        ((PathNavigateGround)this.getNavigator()).func_179690_a(true);
+        ((PathNavigateGround) this.getNavigator()).func_179690_a(true);
         this.tasks.addTask(0, new EntityAISwimming(this));
         this.tasks.addTask(1, new EntityAIPanic(this, 2.0D));
         this.tasks.addTask(2, new EntityAIMate(this, 1.0D));
         this.tasks.addTask(3, new EntityAITempt(this, 1.25D, Items.wheat, false));
         this.tasks.addTask(4, new EntityAIFollowParent(this, 1.25D));
         this.tasks.addTask(5, new EntityAIWander(this, 1.0D));
         this.tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
         this.tasks.addTask(7, new EntityAILookIdle(this));
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(10.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.20000000298023224D);
     }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return "mob.cow.say";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.cow.hurt";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.cow.hurt";
     }
 
-    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_)
-    {
+    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_) {
         this.playSound("mob.cow.step", 0.15F, 1.0F);
     }
 
-    protected float getSoundVolume()
-    {
+    protected float getSoundVolume() {
         return 0.4F;
     }
 
-    protected Item getDropItem()
-    {
+    protected Item getDropItem() {
         return Items.leather;
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
         int j = this.rand.nextInt(3) + this.rand.nextInt(1 + p_70628_2_);
         int k;
 
-        for (k = 0; k < j; ++k)
-        {
+        for (k = 0; k < j; ++k) {
             this.dropItem(Items.leather, 1);
         }
 
         j = this.rand.nextInt(3) + 1 + this.rand.nextInt(1 + p_70628_2_);
 
-        for (k = 0; k < j; ++k)
-        {
-            if (this.isBurning())
-            {
+        for (k = 0; k < j; ++k) {
+            if (this.isBurning()) {
                 this.dropItem(Items.cooked_beef, 1);
-            }
-            else
-            {
+            } else {
                 this.dropItem(Items.beef, 1);
             }
         }
     }
 
-    public boolean interact(EntityPlayer player)
-    {
+    public boolean interact(EntityPlayer player) {
         ItemStack itemstack = player.inventory.getCurrentItem();
 
-        if (itemstack != null && itemstack.getItem() == Items.bucket && !player.capabilities.isCreativeMode)
-        {
-            if (itemstack.stackSize-- == 1)
-            {
-                player.inventory.setInventorySlotContents(player.inventory.currentItem, new ItemStack(Items.milk_bucket));
+        if (itemstack != null && itemstack.getItem() == Items.bucket && !player.capabilities.isCreativeMode) {
+            // CraftBukkit start - Got milk?
+            org.bukkit.Location loc = this.getBukkitEntity().getLocation();
+            org.bukkit.event.player.PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent(player, loc.getBlockX(), loc.getBlockY(), loc.getBlockZ(), null, itemstack, Items.milk_bucket);
+
+            if (event.isCancelled()) {
+                return false;
             }
-            else if (!player.inventory.addItemStackToInventory(new ItemStack(Items.milk_bucket)))
-            {
-                player.dropPlayerItemWithRandomChoice(new ItemStack(Items.milk_bucket, 1, 0), false);
+
+            ItemStack result = CraftItemStack.asNMSCopy(event.getItemStack());
+            if (--itemstack.stackSize <= 0) {
+                player.inventory.setInventorySlotContents(player.inventory.currentItem, result);
+            } else if (!player.inventory.addItemStackToInventory(result)) {
+                player.dropPlayerItemWithRandomChoice(result, false);
             }
+            // CraftBukkit end
 
             return true;
-        }
-        else
-        {
+        } else {
             return super.interact(player);
         }
     }
 
-    public EntityCow createChild(EntityAgeable ageable)
-    {
+    public EntityCow createChild(EntityAgeable ageable) {
         return new EntityCow(this.worldObj);
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return this.height;
     }
 }
