---a/net/minecraft/entity/passive/EntityTameable.java
+++b/net/minecraft/entity/passive/EntityTameable.java
@@ -1,6 +1,7 @@
 package net.minecraft.entity.passive;
 
 import java.util.UUID;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.IEntityOwnable;
@@ -12,60 +12,47 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public abstract class EntityTameable extends EntityAnimal implements IEntityOwnable
-{
+
+public abstract class EntityTameable extends EntityAnimal implements IEntityOwnable {
+
     protected EntityAISit aiSit = new EntityAISit(this);
     private static final String __OBFID = "CL_00001561";
 
-    public EntityTameable(World worldIn)
-    {
+    public EntityTameable(World worldIn) {
         super(worldIn);
         this.setupTamedAI();
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
-        this.dataWatcher.addObject(16, Byte.valueOf((byte)0));
+        this.dataWatcher.addObject(16, Byte.valueOf((byte) 0));
         this.dataWatcher.addObject(17, "");
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
 
-        if (this.getOwnerId() == null)
-        {
+        if (this.getOwnerId() == null) {
             tagCompound.setString("OwnerUUID", "");
-        }
-        else
-        {
+        } else {
             tagCompound.setString("OwnerUUID", this.getOwnerId());
         }
 
         tagCompound.setBoolean("Sitting", this.isSitting());
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         String s = "";
 
-        if (tagCompund.hasKey("OwnerUUID", 8))
-        {
+        if (tagCompund.hasKey("OwnerUUID", 8)) {
             s = tagCompund.getString("OwnerUUID");
-        }
-        else
-        {
+        } else {
             String s1 = tagCompund.getString("Owner");
             s = PreYggdrasilConverter.func_152719_a(s1);
         }
 
-        if (s.length() > 0)
-        {
+        if (s.length() > 0) {
             this.setOwnerId(s);
             this.setTamed(true);
         }
@@ -74,129 +74,88 @@
         this.setSitting(tagCompund.getBoolean("Sitting"));
     }
 
-    protected void playTameEffect(boolean p_70908_1_)
-    {
+    protected void playTameEffect(boolean p_70908_1_) {
         EnumParticleTypes enumparticletypes = EnumParticleTypes.HEART;
 
-        if (!p_70908_1_)
-        {
+        if (!p_70908_1_) {
             enumparticletypes = EnumParticleTypes.SMOKE_NORMAL;
         }
 
-        for (int i = 0; i < 7; ++i)
-        {
+        for (int i = 0; i < 7; ++i) {
             double d0 = this.rand.nextGaussian() * 0.02D;
             double d1 = this.rand.nextGaussian() * 0.02D;
             double d2 = this.rand.nextGaussian() * 0.02D;
-            this.worldObj.spawnParticle(enumparticletypes, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
+            this.worldObj.spawnParticle(enumparticletypes, this.posX + (double) (this.rand.nextFloat() * this.width * 2.0F) - (double) this.width, this.posY + 0.5D + (double) (this.rand.nextFloat() * this.height), this.posZ + (double) (this.rand.nextFloat() * this.width * 2.0F) - (double) this.width, d0, d1, d2, new int[0]);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 7)
-        {
-            this.playTameEffect(true);
-        }
-        else if (p_70103_1_ == 6)
-        {
-            this.playTameEffect(false);
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
-    public boolean isTamed()
-    {
+    public boolean isTamed() {
         return (this.dataWatcher.getWatchableObjectByte(16) & 4) != 0;
     }
 
-    public void setTamed(boolean tamed)
-    {
+    public void setTamed(boolean tamed) {
         byte b0 = this.dataWatcher.getWatchableObjectByte(16);
 
-        if (tamed)
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 | 4)));
+        if (tamed) {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 | 4)));
+        } else {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 & -5)));
         }
-        else
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 & -5)));
-        }
 
         this.setupTamedAI();
     }
 
-    protected void setupTamedAI() {}
+    protected void setupTamedAI() {
+    }
 
-    public boolean isSitting()
-    {
+    public boolean isSitting() {
         return (this.dataWatcher.getWatchableObjectByte(16) & 1) != 0;
     }
 
-    public void setSitting(boolean p_70904_1_)
-    {
+    public void setSitting(boolean p_70904_1_) {
         byte b0 = this.dataWatcher.getWatchableObjectByte(16);
 
-        if (p_70904_1_)
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 | 1)));
+        if (p_70904_1_) {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 | 1)));
+        } else {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 & -2)));
         }
-        else
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 & -2)));
-        }
     }
 
-    public String getOwnerId()
-    {
+    public String getOwnerId() {
         return this.dataWatcher.getWatchableObjectString(17);
     }
 
-    public void setOwnerId(String ownerUuid)
-    {
+    public void setOwnerId(String ownerUuid) {
         this.dataWatcher.updateObject(17, ownerUuid);
     }
 
-    public EntityLivingBase getOwnerEntity()
-    {
-        try
-        {
+    public EntityLivingBase getOwnerEntity() {
+        try {
             UUID uuid = UUID.fromString(this.getOwnerId());
             return uuid == null ? null : this.worldObj.getPlayerEntityByUUID(uuid);
-        }
-        catch (IllegalArgumentException illegalargumentexception)
-        {
+        } catch (IllegalArgumentException illegalargumentexception) {
             return null;
         }
     }
 
-    public boolean isOwner(EntityLivingBase entityIn)
-    {
+    public boolean isOwner(EntityLivingBase entityIn) {
         return entityIn == this.getOwnerEntity();
     }
 
-    public EntityAISit getAISit()
-    {
+    public EntityAISit getAISit() {
         return this.aiSit;
     }
 
-    public boolean func_142018_a(EntityLivingBase p_142018_1_, EntityLivingBase p_142018_2_)
-    {
+    public boolean func_142018_a(EntityLivingBase p_142018_1_, EntityLivingBase p_142018_2_) {
         return true;
     }
 
-    public Team getTeam()
-    {
-        if (this.isTamed())
-        {
+    public Team getTeam() {
+        if (this.isTamed()) {
             EntityLivingBase entitylivingbase = this.getOwnerEntity();
 
-            if (entitylivingbase != null)
-            {
+            if (entitylivingbase != null) {
                 return entitylivingbase.getTeam();
             }
         }
@@ -204,21 +204,16 @@
         return super.getTeam();
     }
 
-    public boolean isOnSameTeam(EntityLivingBase otherEntity)
-    {
-        if (this.isTamed())
-        {
+    public boolean isOnSameTeam(EntityLivingBase otherEntity) {
+        if (this.isTamed()) {
             EntityLivingBase entitylivingbase1 = this.getOwnerEntity();
 
-            if (otherEntity == entitylivingbase1)
-            {
+            if (otherEntity == entitylivingbase1) {
                 return true;
             }
 
-            if (entitylivingbase1 != null)
-            {
+            if (entitylivingbase1 != null) {
                 return entitylivingbase1.isOnSameTeam(otherEntity);
             }
         }
@@ -224,22 +224,17 @@
         return super.isOnSameTeam(otherEntity);
     }
 
-    public void onDeath(DamageSource cause)
-    {
-        if (!this.worldObj.isRemote && this.worldObj.getGameRules().getGameRuleBooleanValue("showDeathMessages") && this.hasCustomName() && this.getOwnerEntity() instanceof EntityPlayerMP)
-        {
-            ((EntityPlayerMP)this.getOwnerEntity()).addChatMessage(this.getCombatTracker().getDeathMessage());
+    public void onDeath(DamageSource cause) {
+        if (!this.worldObj.isRemote && this.worldObj.getGameRules().getGameRuleBooleanValue("showDeathMessages") && this.hasCustomName() && this.getOwnerEntity() instanceof EntityPlayerMP) {
+            ((EntityPlayerMP) this.getOwnerEntity()).addChatMessage(this.getCombatTracker().getDeathMessage());
         }
 
         super.onDeath(cause);
     }
 
-    public Entity getOwner()
-    {
+    public Entity getOwner() {
         return this.getOwnerEntity();
     }
-}
+}
