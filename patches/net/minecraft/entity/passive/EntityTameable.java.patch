--- decompiled\net\minecraft\entity\passive\EntityTameable.java
+++ src\main\java\net\minecraft\entity\passive\EntityTameable.java
@@ -1,8 +1,9 @@
 package net.minecraft.entity.passive;
 
 import java.util.UUID;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.IEntityOwnable;
 import net.minecraft.entity.ai.EntityAISit;
 import net.minecraft.entity.player.EntityPlayerMP;
@@ -10,15 +11,15 @@
 import net.minecraft.scoreboard.Team;
 import net.minecraft.server.management.PreYggdrasilConverter;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public abstract class EntityTameable extends EntityAnimal implements IEntityOwnable
 {
+
     protected EntityAISit aiSit = new EntityAISit(this);
     private static final String __OBFID = "CL_00001561";
 
     public EntityTameable(World worldIn)
     {
@@ -90,27 +91,10 @@
             double d2 = this.rand.nextGaussian() * 0.02D;
             this.worldObj.spawnParticle(enumparticletypes, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 7)
-        {
-            this.playTameEffect(true);
-        }
-        else if (p_70103_1_ == 6)
-        {
-            this.playTameEffect(false);
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
     public boolean isTamed()
     {
         return (this.dataWatcher.getWatchableObjectByte(16) & 4) != 0;
     }
 
@@ -128,11 +112,13 @@
         }
 
         this.setupTamedAI();
     }
 
-    protected void setupTamedAI() {}
+    protected void setupTamedAI()
+    {
+    }
 
     public boolean isSitting()
     {
         return (this.dataWatcher.getWatchableObjectByte(16) & 1) != 0;
     }
