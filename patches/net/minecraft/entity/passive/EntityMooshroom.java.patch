---a/net/minecraft/entity/passive/EntityMooshroom.java
+++b/net/minecraft/entity/passive/EntityMooshroom.java
@@ -9,57 +9,62 @@
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
 
-public class EntityMooshroom extends EntityCow
-{
+import org.bukkit.event.player.PlayerShearEntityEvent;
+
+public class EntityMooshroom extends EntityCow {
+
     private static final String __OBFID = "CL_00001645";
 
-    public EntityMooshroom(World worldIn)
-    {
+    public EntityMooshroom(World worldIn) {
         super(worldIn);
         this.setSize(0.9F, 1.3F);
         this.field_175506_bl = Blocks.mycelium;
     }
 
-    public boolean interact(EntityPlayer player)
-    {
+    public boolean interact(EntityPlayer player) {
         ItemStack itemstack = player.inventory.getCurrentItem();
 
-        if (itemstack != null && itemstack.getItem() == Items.bowl && this.getGrowingAge() >= 0)
-        {
-            if (itemstack.stackSize == 1)
-            {
+        if (itemstack != null && itemstack.getItem() == Items.bowl && this.getGrowingAge() >= 0) {
+            if (itemstack.stackSize == 1) {
                 player.inventory.setInventorySlotContents(player.inventory.currentItem, new ItemStack(Items.mushroom_stew));
                 return true;
             }
 
-            if (player.inventory.addItemStackToInventory(new ItemStack(Items.mushroom_stew)) && !player.capabilities.isCreativeMode)
-            {
+            if (player.inventory.addItemStackToInventory(new ItemStack(Items.mushroom_stew)) && !player.capabilities.isCreativeMode) {
                 player.inventory.decrStackSize(player.inventory.currentItem, 1);
                 return true;
             }
         }
 
-        if (itemstack != null && itemstack.getItem() == Items.shears && this.getGrowingAge() >= 0)
-        {
+        if (itemstack != null && itemstack.getItem() == Items.shears && this.getGrowingAge() >= 0) {
+            // CraftBukkit start
+            PlayerShearEntityEvent event = new PlayerShearEntityEvent((org.bukkit.entity.Player) player.getBukkitEntity(), this.getBukkitEntity());
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return false;
+            }
+            // CraftBukkit end
+
             this.setDead();
-            this.worldObj.spawnParticle(EnumParticleTypes.EXPLOSION_LARGE, this.posX, this.posY + (double)(this.height / 2.0F), this.posZ, 0.0D, 0.0D, 0.0D, new int[0]);
+            this.worldObj.spawnParticle(EnumParticleTypes.EXPLOSION_LARGE, this.posX, this.posY + (double) (this.height / 2.0F), this.posZ, 0.0D, 0.0D, 0.0D, new int[0]);
 
-            if (!this.worldObj.isRemote)
-            {
+            if (!this.worldObj.isRemote) {
                 EntityCow entitycow = new EntityCow(this.worldObj);
                 entitycow.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
                 entitycow.setHealth(this.getHealth());
                 entitycow.renderYawOffset = this.renderYawOffset;
 
-                if (this.hasCustomName())
-                {
+                if (this.hasCustomName()) {
                     entitycow.setCustomNameTag(this.getCustomNameTag());
                 }
 
                 this.worldObj.spawnEntityInWorld(entitycow);
 
-                for (int i = 0; i < 5; ++i)
-                {
-                    this.worldObj.spawnEntityInWorld(new EntityItem(this.worldObj, this.posX, this.posY + (double)this.height, this.posZ, new ItemStack(Blocks.red_mushroom)));
+                for (int i = 0; i < 5; ++i) {
+                    this.worldObj.spawnEntityInWorld(new EntityItem(this.worldObj, this.posX, this.posY + (double) this.height, this.posZ, new ItemStack(Blocks.red_mushroom)));
                 }
 
                 itemstack.damageItem(1, player);
@@ -68,17 +68,12 @@
             }
 
             return true;
-        }
-        else
-        {
+        } else {
             return super.interact(player);
         }
     }
 
-    public EntityMooshroom createChild(EntityAgeable ageable)
-    {
+    public EntityMooshroom createChild(EntityAgeable ageable) {
         return new EntityMooshroom(this.worldObj);
     }
-}
+}
