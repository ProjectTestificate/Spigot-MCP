--- decompiled\net\minecraft\entity\passive\EntityChicken.java
+++ src\main\java\net\minecraft\entity\passive\EntityChicken.java
@@ -19,23 +19,22 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
-public class EntityChicken extends EntityAnimal
-{
+public class EntityChicken extends EntityAnimal {
+
     public float field_70886_e;
     public float destPos;
     public float field_70884_g;
     public float field_70888_h;
     public float field_70889_i = 1.0F;
     public int timeUntilNextEgg;
     public boolean chickenJockey;
     private static final String __OBFID = "CL_00001639";
 
-    public EntityChicken(World worldIn)
-    {
+    public EntityChicken(World worldIn) {
         super(worldIn);
         this.setSize(0.4F, 0.7F);
         this.timeUntilNextEgg = this.rand.nextInt(6000) + 6000;
         this.tasks.addTask(0, new EntityAISwimming(this));
         this.tasks.addTask(1, new EntityAIPanic(this, 1.4D));
@@ -45,156 +44,135 @@
         this.tasks.addTask(5, new EntityAIWander(this, 1.0D));
         this.tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
         this.tasks.addTask(7, new EntityAILookIdle(this));
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return this.height;
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(4.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.25D);
     }
 
-    public void onLivingUpdate()
-    {
+    public void onLivingUpdate() {
+        // CraftBukkit start
+        if (this.isChickenJockey()) {
+            this.persistenceRequired = !this.canDespawn();
+        }
+        // CraftBukkit end
         super.onLivingUpdate();
         this.field_70888_h = this.field_70886_e;
         this.field_70884_g = this.destPos;
-        this.destPos = (float)((double)this.destPos + (double)(this.onGround ? -1 : 4) * 0.3D);
+        this.destPos = (float) ((double) this.destPos + (double) (this.onGround ? -1 : 4) * 0.3D);
         this.destPos = MathHelper.clamp_float(this.destPos, 0.0F, 1.0F);
 
-        if (!this.onGround && this.field_70889_i < 1.0F)
-        {
+        if (!this.onGround && this.field_70889_i < 1.0F) {
             this.field_70889_i = 1.0F;
         }
 
-        this.field_70889_i = (float)((double)this.field_70889_i * 0.9D);
+        this.field_70889_i = (float) ((double) this.field_70889_i * 0.9D);
 
-        if (!this.onGround && this.motionY < 0.0D)
-        {
+        if (!this.onGround && this.motionY < 0.0D) {
             this.motionY *= 0.6D;
         }
 
         this.field_70886_e += this.field_70889_i * 2.0F;
 
-        if (!this.worldObj.isRemote && !this.isChild() && !this.isChickenJockey() && --this.timeUntilNextEgg <= 0)
-        {
+        if (!this.worldObj.isRemote && !this.isChild() && !this.isChickenJockey() && --this.timeUntilNextEgg <= 0) {
             this.playSound("mob.chicken.plop", 1.0F, (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
             this.dropItem(Items.egg, 1);
             this.timeUntilNextEgg = this.rand.nextInt(6000) + 6000;
         }
     }
 
-    public void fall(float distance, float damageMultiplier) {}
+    public void fall(float distance, float damageMultiplier) {
+    }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return "mob.chicken.say";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.chicken.hurt";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.chicken.hurt";
     }
 
-    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_)
-    {
+    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_) {
         this.playSound("mob.chicken.step", 0.15F, 1.0F);
     }
 
-    protected Item getDropItem()
-    {
+    protected Item getDropItem() {
         return Items.feather;
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
         int j = this.rand.nextInt(3) + this.rand.nextInt(1 + p_70628_2_);
 
-        for (int k = 0; k < j; ++k)
-        {
+        for (int k = 0; k < j; ++k) {
             this.dropItem(Items.feather, 1);
         }
 
-        if (this.isBurning())
-        {
+        if (this.isBurning()) {
             this.dropItem(Items.cooked_chicken, 1);
-        }
-        else
-        {
+        } else {
             this.dropItem(Items.chicken, 1);
         }
     }
 
-    public EntityChicken createChild(EntityAgeable ageable)
-    {
+    public EntityChicken createChild(EntityAgeable ageable) {
         return new EntityChicken(this.worldObj);
     }
 
-    public boolean isBreedingItem(ItemStack stack)
-    {
+    public boolean isBreedingItem(ItemStack stack) {
         return stack != null && stack.getItem() == Items.wheat_seeds;
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.chickenJockey = tagCompund.getBoolean("IsChickenJockey");
 
-        if (tagCompund.hasKey("EggLayTime"))
-        {
+        if (tagCompund.hasKey("EggLayTime")) {
             this.timeUntilNextEgg = tagCompund.getInteger("EggLayTime");
         }
     }
 
-    protected int getExperiencePoints(EntityPlayer player)
-    {
+    protected int getExperiencePoints(EntityPlayer player) {
         return this.isChickenJockey() ? 10 : super.getExperiencePoints(player);
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         tagCompound.setBoolean("IsChickenJockey", this.chickenJockey);
         tagCompound.setInteger("EggLayTime", this.timeUntilNextEgg);
     }
 
-    protected boolean canDespawn()
-    {
+    public boolean canDespawn() { // SpigotMCP -- Make public as bukkit assumes in same package
         return this.isChickenJockey() && this.riddenByEntity == null;
     }
 
-    public void updateRiderPosition()
-    {
+    public void updateRiderPosition() {
         super.updateRiderPosition();
-        float f = MathHelper.sin(this.renderYawOffset * (float)Math.PI / 180.0F);
-        float f1 = MathHelper.cos(this.renderYawOffset * (float)Math.PI / 180.0F);
+        float f = MathHelper.sin(this.renderYawOffset * (float) Math.PI / 180.0F);
+        float f1 = MathHelper.cos(this.renderYawOffset * (float) Math.PI / 180.0F);
         float f2 = 0.1F;
         float f3 = 0.0F;
-        this.riddenByEntity.setPosition(this.posX + (double)(f2 * f), this.posY + (double)(this.height * 0.5F) + this.riddenByEntity.getYOffset() + (double)f3, this.posZ - (double)(f2 * f1));
+        this.riddenByEntity.setPosition(this.posX + (double) (f2 * f), this.posY + (double) (this.height * 0.5F) + this.riddenByEntity.getYOffset() + (double) f3, this.posZ - (double) (f2 * f1));
 
-        if (this.riddenByEntity instanceof EntityLivingBase)
-        {
-            ((EntityLivingBase)this.riddenByEntity).renderYawOffset = this.renderYawOffset;
+        if (this.riddenByEntity instanceof EntityLivingBase) {
+            ((EntityLivingBase) this.riddenByEntity).renderYawOffset = this.renderYawOffset;
         }
     }
 
-    public boolean isChickenJockey()
-    {
+    public boolean isChickenJockey() {
         return this.chickenJockey;
     }
 
-    public void setChickenJockey(boolean jockey)
-    {
+    public void setChickenJockey(boolean jockey) {
         this.chickenJockey = jockey;
     }
 }
