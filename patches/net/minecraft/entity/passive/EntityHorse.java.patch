--- decompiled\net\minecraft\entity\passive\EntityHorse.java
+++ src\main\java\net\minecraft\entity\passive\EntityHorse.java
@@ -1,10 +1,10 @@
 package net.minecraft.entity.passive;
 
-import com.google.common.base.Predicate;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityAgeable;
 import net.minecraft.entity.EntityLivingBase;
@@ -34,20 +34,22 @@
 import net.minecraft.pathfinding.PathNavigateGround;
 import net.minecraft.potion.Potion;
 import net.minecraft.server.management.PreYggdrasilConverter;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
-import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.StatCollector;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+
+import com.google.common.base.Predicate;
+
 public class EntityHorse extends EntityAnimal implements IInvBasic
 {
+
     private static final Predicate horseBreedingSelector = new Predicate()
     {
         private static final String __OBFID = "CL_00001642";
         public boolean func_179873_a(Entity p_179873_1_)
         {
@@ -56,11 +58,11 @@
         public boolean apply(Object p_apply_1_)
         {
             return this.func_179873_a((Entity)p_apply_1_);
         }
     };
-    private static final IAttribute horseJumpStrength = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).setDescription("Jump Strength").setShouldWatch(true);
+    public static final IAttribute horseJumpStrength = (new RangedAttribute((IAttribute)null, "horse.jumpStrength", 0.7D, 0.0D, 2.0D)).setDescription("Jump Strength").setShouldWatch(true); // SpigotMCP -- Apply access transformation
     private static final String[] horseArmorTextures = new String[] {null, "textures/entity/horse/armor/horse_armor_iron.png", "textures/entity/horse/armor/horse_armor_gold.png", "textures/entity/horse/armor/horse_armor_diamond.png"};
     private static final String[] field_110273_bx = new String[] {"", "meo", "goo", "dio"};
     private static final int[] armorValues = new int[] {0, 5, 7, 11};
     private static final String[] horseTextures = new String[] {"textures/entity/horse/horse_white.png", "textures/entity/horse/horse_creamy.png", "textures/entity/horse/horse_chestnut.png", "textures/entity/horse/horse_brown.png", "textures/entity/horse/horse_black.png", "textures/entity/horse/horse_gray.png", "textures/entity/horse/horse_darkbrown.png"};
     private static final String[] field_110269_bA = new String[] {"hwh", "hcr", "hch", "hbr", "hbl", "hgr", "hdb"};
@@ -70,11 +72,11 @@
     private int openMouthCounter;
     private int jumpRearingCounter;
     public int field_110278_bp;
     public int field_110279_bq;
     protected boolean horseJumping;
-    private AnimalChest horseChest;
+    public AnimalChest horseChest; // SpigotMCP -- Apply access transformation
     private boolean hasReproduced;
     protected int temper;
     protected float jumpPower;
     private boolean field_110294_bI;
     private float headLean;
@@ -85,10 +87,11 @@
     private float prevMouthOpenness;
     private int gallopTime;
     private String texturePrefix;
     private String[] field_110280_bR = new String[3];
     private boolean field_175508_bO = false;
+    public int maxDomestication = 100; // CraftBukkit - store max domestication value
     private static final String __OBFID = "CL_00001641";
 
     public EntityHorse(World worldIn)
     {
         super(worldIn);
@@ -414,17 +417,17 @@
     }
 
     private int func_110225_cC()
     {
         int i = this.getHorseType();
-        return this.isChested() && (i == 1 || i == 2) ? 17 : 2;
+        return this.isChested() /* && (i == 1 || i == 2) */ ? 17 : 2; // CraftBukkit - Remove type check
     }
 
-    private void func_110226_cD()
+    public void func_110226_cD()   // SpigotMCP -- Apply access transformation
     {
         AnimalChest animalchest = this.horseChest;
-        this.horseChest = new AnimalChest("HorseChest", this.func_110225_cC());
+        this.horseChest = new AnimalChest("HorseChest", this.func_110225_cC(), this); // CraftBukkit - add this horse
         this.horseChest.setCustomName(this.getName());
 
         if (animalchest != null)
         {
             animalchest.func_110132_b(this);
@@ -623,11 +626,11 @@
         return 6;
     }
 
     public int getMaxTemper()
     {
-        return 100;
+        return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
     }
 
     protected float getSoundVolume()
     {
         return 0.8F;
@@ -636,103 +639,15 @@
     public int getTalkInterval()
     {
         return 400;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean func_110239_cn()
-    {
-        return this.getHorseType() == 0 || this.func_110241_cb() > 0;
-    }
-
     private void resetTexturePrefix()
     {
         this.texturePrefix = null;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean func_175507_cI()
-    {
-        return this.field_175508_bO;
-    }
-
-    @SideOnly(Side.CLIENT)
-    private void setHorseTexturePaths()
-    {
-        this.texturePrefix = "horse/";
-        this.field_110280_bR[0] = null;
-        this.field_110280_bR[1] = null;
-        this.field_110280_bR[2] = null;
-        int i = this.getHorseType();
-        int j = this.getHorseVariant();
-        int k;
-
-        if (i == 0)
-        {
-            k = j & 255;
-            int l = (j & 65280) >> 8;
-
-            if (k >= horseTextures.length)
-            {
-                this.field_175508_bO = false;
-                return;
-            }
-
-            this.field_110280_bR[0] = horseTextures[k];
-            this.texturePrefix = this.texturePrefix + field_110269_bA[k];
-
-            if (l >= horseMarkingTextures.length)
-            {
-                this.field_175508_bO = false;
-                return;
-            }
-
-            this.field_110280_bR[1] = horseMarkingTextures[l];
-            this.texturePrefix = this.texturePrefix + field_110292_bC[l];
-        }
-        else
-        {
-            this.field_110280_bR[0] = "";
-            this.texturePrefix = this.texturePrefix + "_" + i + "_";
-        }
-
-        k = this.func_110241_cb();
-
-        if (k >= horseArmorTextures.length)
-        {
-            this.field_175508_bO = false;
-        }
-        else
-        {
-            this.field_110280_bR[2] = horseArmorTextures[k];
-            this.texturePrefix = this.texturePrefix + field_110273_bx[k];
-            this.field_175508_bO = true;
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public String getHorseTexture()
-    {
-        if (this.texturePrefix == null)
-        {
-            this.setHorseTexturePaths();
-        }
-
-        return this.texturePrefix;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public String[] getVariantTexturePaths()
-    {
-        if (this.texturePrefix == null)
-        {
-            this.setHorseTexturePaths();
-        }
-
-        return this.field_110280_bR;
-    }
-
     public void openGUI(EntityPlayer playerEntity)
     {
         if (!this.worldObj.isRemote && (this.riddenByEntity == null || this.riddenByEntity == playerEntity) && this.isTame())
         {
             this.horseChest.setCustomName(this.getName());
@@ -851,11 +766,11 @@
                         }
                     }
 
                     if (this.getHealth() < this.getMaxHealth() && f > 0.0F)
                     {
-                        this.heal(f);
+                        this.heal(f, EntityRegainHealthEvent.RegainReason.EATING); // CraftBukkit
                         flag = true;
                     }
 
                     if (!this.isAdultHorse() && short1 > 0)
                     {
@@ -981,16 +896,31 @@
     }
 
     public void onDeath(DamageSource cause)
     {
         super.onDeath(cause);
+        /* CraftBukkit start - Handle chest dropping in dropDeathLoot below
+        if (!this.worldObj.isRemote)
+        {
+            this.dropChestItems();
+        }
+        // CraftBukkit end */
+    }
 
+    // CraftBukkit start - Add method
+    @Override
+    protected void dropFewItems(boolean flag, int i)
+    {
+        super.dropFewItems(flag, i);
+
+        // Moved from die method above
         if (!this.worldObj.isRemote)
         {
             this.dropChestItems();
         }
     }
+    // CraftBukkit end
 
     public void onLivingUpdate()
     {
         if (this.rand.nextInt(200) == 0)
         {
@@ -1001,11 +931,11 @@
 
         if (!this.worldObj.isRemote)
         {
             if (this.rand.nextInt(900) == 0 && this.deathTime == 0)
             {
-                this.heal(1.0F);
+                this.heal(1.0F, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
             }
 
             if (!this.isEatingHaystack() && this.riddenByEntity == null && this.rand.nextInt(300) == 0 && this.worldObj.getBlockState(new BlockPos(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY) - 1, MathHelper.floor_double(this.posZ))).getBlock() == Blocks.grass)
             {
                 this.setEatingHaystack(true);
@@ -1308,10 +1238,11 @@
         tagCompound.setInteger("Type", this.getHorseType());
         tagCompound.setInteger("Variant", this.getHorseVariant());
         tagCompound.setInteger("Temper", this.getTemper());
         tagCompound.setBoolean("Tame", this.isTame());
         tagCompound.setString("OwnerUUID", this.func_152119_ch());
+        tagCompound.setInteger("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
         if (this.isChested())
         {
             NBTTagList nbttaglist = new NBTTagList();
 
@@ -1360,18 +1291,41 @@
             s = tagCompund.getString("OwnerUUID");
         }
         else
         {
             String s1 = tagCompund.getString("Owner");
+
+            // Spigot start
+            if (s1 == null || s1.isEmpty())
+            {
+                if (tagCompund.hasKey("OwnerName"))
+                {
+                    String owner = tagCompund.getString("OwnerName");
+
+                    if (owner != null && !owner.isEmpty())
+                    {
+                        s1 = owner;
+                    }
+                }
+            }
+
+            // Spigot end
             s = PreYggdrasilConverter.func_152719_a(s1);
         }
 
         if (s.length() > 0)
         {
             this.func_152120_b(s);
         }
 
+        // CraftBukkit start
+        if (tagCompund.hasKey("Bukkit.MaxDomestication"))
+        {
+            this.maxDomestication = tagCompund.getInteger("Bukkit.MaxDomestication");
+        }
+
+        // CraftBukkit end
         IAttributeInstance iattributeinstance = this.getAttributeMap().getAttributeInstanceByName("Speed");
 
         if (iattributeinstance != null)
         {
             this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(iattributeinstance.getBaseValue() * 0.25D);
@@ -1580,82 +1534,42 @@
 
         this.setHealth(this.getMaxHealth());
         return (IEntityLivingData)p_180482_2_1;
     }
 
-    @SideOnly(Side.CLIENT)
-    public float getGrassEatingAmount(float p_110258_1_)
+    public void setJumpPower(int i) // SpigotMCP -- Use 'i'
     {
-        return this.prevHeadLean + (this.headLean - this.prevHeadLean) * p_110258_1_;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getRearingAmount(float p_110223_1_)
-    {
-        return this.prevRearingAmount + (this.rearingAmount - this.prevRearingAmount) * p_110223_1_;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float func_110201_q(float p_110201_1_)
-    {
-        return this.prevMouthOpenness + (this.mouthOpenness - this.prevMouthOpenness) * p_110201_1_;
-    }
-
-    public void setJumpPower(int p_110206_1_)
-    {
         if (this.isHorseSaddled())
         {
-            if (p_110206_1_ < 0)
+            // CraftBukkit start - fire HorseJumpEvent, use event power
+            if (i < 0)
             {
-                p_110206_1_ = 0;
+                i = 0;
             }
-            else
-            {
-                this.field_110294_bI = true;
-                this.makeHorseRear();
-            }
 
-            if (p_110206_1_ >= 90)
+            float power;
+
+            if (i >= 90)
             {
-                this.jumpPower = 1.0F;
+                power = 1.0F;
             }
             else
             {
-                this.jumpPower = 0.4F + 0.4F * (float)p_110206_1_ / 90.0F;
+                power = 0.4F + 0.4F * (float)i / 90.0F;
             }
-        }
-    }
 
-    @SideOnly(Side.CLIENT)
-    protected void spawnHorseParticles(boolean p_110216_1_)
-    {
-        EnumParticleTypes enumparticletypes = p_110216_1_ ? EnumParticleTypes.HEART : EnumParticleTypes.SMOKE_NORMAL;
+            org.bukkit.event.entity.HorseJumpEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callHorseJumpEvent(this, power);
 
-        for (int i = 0; i < 7; ++i)
-        {
-            double d0 = this.rand.nextGaussian() * 0.02D;
-            double d1 = this.rand.nextGaussian() * 0.02D;
-            double d2 = this.rand.nextGaussian() * 0.02D;
-            this.worldObj.spawnParticle(enumparticletypes, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
-        }
-    }
+            if (!event.isCancelled())
+            {
+                this.field_110294_bI = true;
+                this.makeHorseRear();
+                this.jumpPower = power;
+            }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 7)
-        {
-            this.spawnHorseParticles(true);
+            // CraftBukkit end
         }
-        else if (p_70103_1_ == 6)
-        {
-            this.spawnHorseParticles(false);
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
     }
 
     public void updateRiderPosition()
     {
         super.updateRiderPosition();
@@ -1759,10 +1673,11 @@
         }
     }
 
     public static class GroupData implements IEntityLivingData
         {
+
             public int field_111107_a;
             public int field_111106_b;
             private static final String __OBFID = "CL_00001643";
 
             public GroupData(int p_i1684_1_, int p_i1684_2_)
