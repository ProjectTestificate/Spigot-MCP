--- decompiled\net\minecraft\entity\passive\EntityWolf.java
+++ src\main\java\net\minecraft\entity\passive\EntityWolf.java
@@ -1,8 +1,7 @@
 package net.minecraft.entity.passive;
 
-import com.google.common.base.Predicate;
 import net.minecraft.block.Block;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityAgeable;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.SharedMonsterAttributes;
@@ -35,15 +34,19 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+
+import com.google.common.base.Predicate;
+
 public class EntityWolf extends EntityTameable
 {
+
     private float headRotationCourse;
     private float headRotationCourseOld;
     private boolean isWet;
     private boolean isShaking;
     private float timeWolfIsShaking;
@@ -100,23 +103,26 @@
 
         this.getAttributeMap().registerAttribute(SharedMonsterAttributes.attackDamage);
         this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setBaseValue(2.0D);
     }
 
-    public void setAttackTarget(EntityLivingBase p_70624_1_)
+    // CraftBukkit - add overriden version
+    @Override
+    public void setGoalTarget(EntityLivingBase entityliving, EntityTargetEvent.TargetReason reason, boolean fire)
     {
-        super.setAttackTarget(p_70624_1_);
+        super.setGoalTarget(entityliving, reason, fire);
 
-        if (p_70624_1_ == null)
+        if (entityliving == null)
         {
             this.setAngry(false);
         }
         else if (!this.isTamed())
         {
             this.setAngry(true);
         }
     }
+    // CraftBukkit end
 
     protected void updateAITasks()
     {
         this.dataWatcher.updateObject(18, Float.valueOf(this.getHealth()));
     }
@@ -152,11 +158,12 @@
         }
     }
 
     protected String getLivingSound()
     {
-        return this.isAngry() ? "mob.wolf.growl" : (this.rand.nextInt(3) == 0 ? (this.isTamed() && this.dataWatcher.getWatchableObjectFloat(18) < 10.0F ? "mob.wolf.whine" : "mob.wolf.panting") : "mob.wolf.bark");
+        // CraftBukkit - (getFloat(18) < 10) -> (getFloat(18) < this.getMaxHealth() / 2)
+        return this.isAngry() ? "mob.wolf.growl" : (this.rand.nextInt(3) == 0 ? (this.isTamed() && (this.dataWatcher.getWatchableObjectFloat(18) < this.getMaxHealth() / 2) ? "mob.wolf.whine" : "mob.wolf.panting") : "mob.wolf.bark");
     }
 
     protected String getHurtSound()
     {
         return "mob.wolf.hurt";
@@ -247,45 +254,10 @@
                 }
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean isWolfWet()
-    {
-        return this.isWet;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getShadingWhileWet(float p_70915_1_)
-    {
-        return 0.75F + (this.prevTimeWolfIsShaking + (this.timeWolfIsShaking - this.prevTimeWolfIsShaking) * p_70915_1_) / 2.0F * 0.25F;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getShakeAngle(float p_70923_1_, float p_70923_2_)
-    {
-        float f2 = (this.prevTimeWolfIsShaking + (this.timeWolfIsShaking - this.prevTimeWolfIsShaking) * p_70923_1_ + p_70923_2_) / 1.8F;
-
-        if (f2 < 0.0F)
-        {
-            f2 = 0.0F;
-        }
-        else if (f2 > 1.0F)
-        {
-            f2 = 1.0F;
-        }
-
-        return MathHelper.sin(f2 * (float)Math.PI) * MathHelper.sin(f2 * (float)Math.PI * 11.0F) * 0.15F * (float)Math.PI;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getInterestedAngle(float p_70917_1_)
-    {
-        return (this.headRotationCourseOld + (this.headRotationCourse - this.headRotationCourseOld) * p_70917_1_) * 0.15F * (float)Math.PI;
-    }
-
     public float getEyeHeight()
     {
         return this.height * 0.8F;
     }
 
@@ -301,11 +273,12 @@
             return false;
         }
         else
         {
             Entity entity = source.getEntity();
-            this.aiSit.setSitting(false);
+            // CraftBukkit - moved into EntityLiving.damageEntity(DamageSource, float)
+            // this.aiSit.setSitting(false);
 
             if (entity != null && !(entity instanceof EntityPlayer) && !(entity instanceof EntityArrow))
             {
                 amount = (amount + 1.0F) / 2.0F;
             }
@@ -359,11 +332,11 @@
                         if (!player.capabilities.isCreativeMode)
                         {
                             --itemstack.stackSize;
                         }
 
-                        this.heal((float)itemfood.getHealAmount(itemstack));
+                        this.heal((float)itemfood.getHealAmount(itemstack), org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); // CraftBukkit
 
                         if (itemstack.stackSize <= 0)
                         {
                             player.inventory.setInventorySlotContents(player.inventory.currentItem, (ItemStack)null);
                         }
@@ -392,11 +365,11 @@
             if (this.isOwner(player) && !this.worldObj.isRemote && !this.isBreedingItem(itemstack))
             {
                 this.aiSit.setSitting(!this.isSitting());
                 this.isJumping = false;
                 this.navigator.clearPathEntity();
-                this.setAttackTarget((EntityLivingBase)null);
+                this.setGoalTarget((EntityLivingBase)null, EntityTargetEvent.TargetReason.FORGOT_TARGET, true); // CraftBukkit - reason
             }
         }
         else if (itemstack != null && itemstack.getItem() == Items.bone && !this.isAngry())
         {
             if (!player.capabilities.isCreativeMode)
@@ -409,17 +382,18 @@
                 player.inventory.setInventorySlotContents(player.inventory.currentItem, (ItemStack)null);
             }
 
             if (!this.worldObj.isRemote)
             {
-                if (this.rand.nextInt(3) == 0)
+                // CraftBukkit - added event call and isCancelled check.
+                if (this.rand.nextInt(3) == 0 && !CraftEventFactory.callEntityTameEvent(this, player).isCancelled())
                 {
                     this.setTamed(true);
                     this.navigator.clearPathEntity();
                     this.setAttackTarget((EntityLivingBase)null);
                     this.aiSit.setSitting(true);
-                    this.setHealth(20.0F);
+                    this.setHealth(getMaxHealth()); // CraftBukkit - 20.0 -> getMaxHealth()
                     this.setOwnerId(player.getUniqueID().toString());
                     this.playTameEffect(true);
                     this.worldObj.setEntityState(this, (byte)7);
                 }
                 else
@@ -433,31 +407,10 @@
         }
 
         return super.interact(player);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 8)
-        {
-            this.isShaking = true;
-            this.timeWolfIsShaking = 0.0F;
-            this.prevTimeWolfIsShaking = 0.0F;
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getTailRotation()
-    {
-        return this.isAngry() ? 1.5393804F : (this.isTamed() ? (0.55F - (20.0F - this.dataWatcher.getWatchableObjectFloat(18)) * 0.02F) * (float)Math.PI : ((float)Math.PI / 5F));
-    }
-
     public boolean isBreedingItem(ItemStack stack)
     {
         return stack == null ? false : (!(stack.getItem() instanceof ItemFood) ? false : ((ItemFood)stack.getItem()).isWolfsFavoriteMeat());
     }
 
@@ -545,13 +498,13 @@
     public boolean func_70922_bv()
     {
         return this.dataWatcher.getWatchableObjectByte(19) == 1;
     }
 
-    protected boolean canDespawn()
+    public boolean canDespawn()   // SpigotMCP -- Make public as bukkit assumes in same package
     {
-        return !this.isTamed() && this.ticksExisted > 2400;
+        return !this.isTamed() /*&& this.ticksExisted > 2400*/; // CraftBukkit
     }
 
     public boolean func_142018_a(EntityLivingBase p_142018_1_, EntityLivingBase p_142018_2_)
     {
         if (!(p_142018_1_ instanceof EntityCreeper) && !(p_142018_1_ instanceof EntityGhast))
