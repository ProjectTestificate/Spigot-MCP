---a/net/minecraft/entity/passive/EntitySheep.java
+++b/net/minecraft/entity/passive/EntitySheep.java
@@ -1,9 +1,7 @@
 package net.minecraft.entity.passive;
 
-import com.google.common.collect.Maps;
 import java.util.Map;
 import java.util.Random;
+
 import net.minecraft.block.Block;
 import net.minecraft.entity.EntityAgeable;
 import net.minecraft.entity.IEntityLivingData;
@@ -21,6 +21,7 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.inventory.Container;
+import net.minecraft.inventory.InventoryCraftResult;
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.EnumDyeColor;
 import net.minecraft.item.Item;
@@ -29,18 +29,21 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.pathfinding.PathNavigateGround;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.MathHelper;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntitySheep extends EntityAnimal
-{
-    private final InventoryCrafting inventoryCrafting = new InventoryCrafting(new Container()
-    {
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.event.entity.SheepRegrowWoolEvent;
+import org.bukkit.event.player.PlayerShearEntityEvent;
+import org.bukkit.inventory.InventoryView;
+
+import com.google.common.collect.Maps;
+
+public class EntitySheep extends EntityAnimal {
+
+    private final InventoryCrafting inventoryCrafting = new InventoryCrafting(new Container() {
+
         private static final String __OBFID = "CL_00001649";
-        public boolean canInteractWith(EntityPlayer playerIn)
-        {
+
+        // SpigotMCP Start -- NOP
+        @Override
+        public InventoryView getBukkitView() {
+            throw new UnsupportedOperationException("Doesn't work");
+        }
+        // SpigotMCP End
+
+        public boolean canInteractWith(EntityPlayer playerIn) {
             return false;
         }
     }, 2, 1);
@@ -50,18 +50,15 @@
     private EntityAIEatGrass entityAIEatGrass = new EntityAIEatGrass(this);
     private static final String __OBFID = "CL_00001648";
 
-    public static float[] func_175513_a(EnumDyeColor p_175513_0_)
-    {
-        return (float[])field_175514_bm.get(p_175513_0_);
+    public static float[] func_175513_a(EnumDyeColor p_175513_0_) {
+        return (float[]) field_175514_bm.get(p_175513_0_);
     }
 
-    public EntitySheep(World worldIn)
-    {
+    public EntitySheep(World worldIn) {
         super(worldIn);
         this.setSize(0.9F, 1.3F);
-        ((PathNavigateGround)this.getNavigator()).func_179690_a(true);
+        ((PathNavigateGround) this.getNavigator()).func_179690_a(true);
         this.tasks.addTask(0, new EntityAISwimming(this));
         this.tasks.addTask(1, new EntityAIPanic(this, 1.25D));
         this.tasks.addTask(2, new EntityAIMate(this, 1.0D));
@@ -71,91 +71,72 @@
         this.tasks.addTask(8, new EntityAILookIdle(this));
         this.inventoryCrafting.setInventorySlotContents(0, new ItemStack(Items.dye, 1, 0));
         this.inventoryCrafting.setInventorySlotContents(1, new ItemStack(Items.dye, 1, 0));
+        this.inventoryCrafting.resultInventory = new InventoryCraftResult(); // CraftBukkit - add result slot for event
     }
 
-    protected void updateAITasks()
-    {
+    protected void updateAITasks() {
         this.sheepTimer = this.entityAIEatGrass.getEatingGrassTimer();
         super.updateAITasks();
     }
 
-    public void onLivingUpdate()
-    {
-        if (this.worldObj.isRemote)
-        {
+    public void onLivingUpdate() {
+        if (this.worldObj.isRemote) {
             this.sheepTimer = Math.max(0, this.sheepTimer - 1);
         }
 
         super.onLivingUpdate();
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(8.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.23000000417232513D);
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
-        this.dataWatcher.addObject(16, new Byte((byte)0));
+        this.dataWatcher.addObject(16, new Byte((byte) 0));
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
-        if (!this.getSheared())
-        {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
+        if (!this.getSheared()) {
             this.entityDropItem(new ItemStack(Item.getItemFromBlock(Blocks.wool), 1, this.getFleeceColor().getMetadata()), 0.0F);
         }
 
         int j = this.rand.nextInt(2) + 1 + this.rand.nextInt(1 + p_70628_2_);
 
-        for (int k = 0; k < j; ++k)
-        {
-            if (this.isBurning())
-            {
+        for (int k = 0; k < j; ++k) {
+            if (this.isBurning()) {
                 this.dropItem(Items.cooked_mutton, 1);
-            }
-            else
-            {
+            } else {
                 this.dropItem(Items.mutton, 1);
             }
         }
     }
 
-    protected Item getDropItem()
-    {
+    protected Item getDropItem() {
         return Item.getItemFromBlock(Blocks.wool);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 10)
-        {
-            this.sheepTimer = 40;
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
-    public boolean interact(EntityPlayer player)
-    {
+    public boolean interact(EntityPlayer player) {
         ItemStack itemstack = player.inventory.getCurrentItem();
 
-        if (itemstack != null && itemstack.getItem() == Items.shears && !this.getSheared() && !this.isChild())
-        {
-            if (!this.worldObj.isRemote)
-            {
+        if (itemstack != null && itemstack.getItem() == Items.shears && !this.getSheared() && !this.isChild()) {
+            // CraftBukkit start
+            PlayerShearEntityEvent event = new PlayerShearEntityEvent((org.bukkit.entity.Player) player.getBukkitEntity(), this.getBukkitEntity());
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return false;
+            }
+            // CraftBukkit end
+            if (!this.worldObj.isRemote) {
                 this.setSheared(true);
                 int i = 1 + this.rand.nextInt(3);
 
-                for (int j = 0; j < i; ++j)
-                {
+                for (int j = 0; j < i; ++j) {
                     EntityItem entityitem = this.entityDropItem(new ItemStack(Item.getItemFromBlock(Blocks.wool), 1, this.getFleeceColor().getMetadata()), 1.0F);
-                    entityitem.motionY += (double)(this.rand.nextFloat() * 0.05F);
-                    entityitem.motionX += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
-                    entityitem.motionZ += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
+                    entityitem.motionY += (double) (this.rand.nextFloat() * 0.05F);
+                    entityitem.motionX += (double) ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
+                    entityitem.motionZ += (double) ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
                 }
             }
 
@@ -169,190 +169,130 @@
         return super.interact(player);
     }
 
-    @SideOnly(Side.CLIENT)
-    public float getHeadRotationPointY(float p_70894_1_)
-    {
-        return this.sheepTimer <= 0 ? 0.0F : (this.sheepTimer >= 4 && this.sheepTimer <= 36 ? 1.0F : (this.sheepTimer < 4 ? ((float)this.sheepTimer - p_70894_1_) / 4.0F : -((float)(this.sheepTimer - 40) - p_70894_1_) / 4.0F));
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float getHeadRotationAngleX(float p_70890_1_)
-    {
-        if (this.sheepTimer > 4 && this.sheepTimer <= 36)
-        {
-            float f1 = ((float)(this.sheepTimer - 4) - p_70890_1_) / 32.0F;
-            return ((float)Math.PI / 5F) + ((float)Math.PI * 7F / 100F) * MathHelper.sin(f1 * 28.7F);
-        }
-        else
-        {
-            return this.sheepTimer > 0 ? ((float)Math.PI / 5F) : this.rotationPitch / (180F / (float)Math.PI);
-        }
-    }
-
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         tagCompound.setBoolean("Sheared", this.getSheared());
-        tagCompound.setByte("Color", (byte)this.getFleeceColor().getMetadata());
+        tagCompound.setByte("Color", (byte) this.getFleeceColor().getMetadata());
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.setSheared(tagCompund.getBoolean("Sheared"));
         this.setFleeceColor(EnumDyeColor.byMetadata(tagCompund.getByte("Color")));
     }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return "mob.sheep.say";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.sheep.say";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.sheep.say";
     }
 
-    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_)
-    {
+    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_) {
         this.playSound("mob.sheep.step", 0.15F, 1.0F);
     }
 
-    public EnumDyeColor getFleeceColor()
-    {
+    public EnumDyeColor getFleeceColor() {
         return EnumDyeColor.byMetadata(this.dataWatcher.getWatchableObjectByte(16) & 15);
     }
 
-    public void setFleeceColor(EnumDyeColor color)
-    {
+    public void setFleeceColor(EnumDyeColor color) {
         byte b0 = this.dataWatcher.getWatchableObjectByte(16);
-        this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 & 240 | color.getMetadata() & 15)));
+        this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 & 240 | color.getMetadata() & 15)));
     }
 
-    public boolean getSheared()
-    {
+    public boolean getSheared() {
         return (this.dataWatcher.getWatchableObjectByte(16) & 16) != 0;
     }
 
-    public void setSheared(boolean p_70893_1_)
-    {
+    public void setSheared(boolean p_70893_1_) {
         byte b0 = this.dataWatcher.getWatchableObjectByte(16);
 
-        if (p_70893_1_)
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 | 16)));
+        if (p_70893_1_) {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 | 16)));
+        } else {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 & -17)));
         }
-        else
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 & -17)));
-        }
     }
 
-    public static EnumDyeColor func_175510_a(Random p_175510_0_)
-    {
+    public static EnumDyeColor func_175510_a(Random p_175510_0_) {
         int i = p_175510_0_.nextInt(100);
         return i < 5 ? EnumDyeColor.BLACK : (i < 10 ? EnumDyeColor.GRAY : (i < 15 ? EnumDyeColor.SILVER : (i < 18 ? EnumDyeColor.BROWN : (p_175510_0_.nextInt(500) == 0 ? EnumDyeColor.PINK : EnumDyeColor.WHITE))));
     }
 
-    public EntitySheep func_180491_b(EntityAgeable p_180491_1_)
-    {
-        EntitySheep entitysheep = (EntitySheep)p_180491_1_;
+    public EntitySheep func_180491_b(EntityAgeable p_180491_1_) {
+        EntitySheep entitysheep = (EntitySheep) p_180491_1_;
         EntitySheep entitysheep1 = new EntitySheep(this.worldObj);
         entitysheep1.setFleeceColor(this.func_175511_a(this, entitysheep));
         return entitysheep1;
     }
 
-    public void eatGrassBonus()
-    {
-        this.setSheared(false);
+    public void eatGrassBonus() {
+        // CraftBukkit start
+        SheepRegrowWoolEvent event = new SheepRegrowWoolEvent((org.bukkit.entity.Sheep) this.getBukkitEntity());
+        this.worldObj.getServer().getPluginManager().callEvent(event);
 
-        if (this.isChild())
-        {
+        if (!event.isCancelled()) {
+            this.setSheared(false);
+        }
+        // CraftBukkit end
+        if (this.isChild()) {
             this.addGrowth(60);
         }
     }
 
-    public IEntityLivingData func_180482_a(DifficultyInstance p_180482_1_, IEntityLivingData p_180482_2_)
-    {
+    public IEntityLivingData func_180482_a(DifficultyInstance p_180482_1_, IEntityLivingData p_180482_2_) {
         p_180482_2_ = super.func_180482_a(p_180482_1_, p_180482_2_);
         this.setFleeceColor(func_175510_a(this.worldObj.rand));
         return p_180482_2_;
     }
 
-    private EnumDyeColor func_175511_a(EntityAnimal p_175511_1_, EntityAnimal p_175511_2_)
-    {
-        int i = ((EntitySheep)p_175511_1_).getFleeceColor().getDyeDamage();
-        int j = ((EntitySheep)p_175511_2_).getFleeceColor().getDyeDamage();
+    private EnumDyeColor func_175511_a(EntityAnimal p_175511_1_, EntityAnimal p_175511_2_) {
+        int i = ((EntitySheep) p_175511_1_).getFleeceColor().getDyeDamage();
+        int j = ((EntitySheep) p_175511_2_).getFleeceColor().getDyeDamage();
         this.inventoryCrafting.getStackInSlot(0).setItemDamage(i);
         this.inventoryCrafting.getStackInSlot(1).setItemDamage(j);
-        ItemStack itemstack = CraftingManager.getInstance().findMatchingRecipe(this.inventoryCrafting, ((EntitySheep)p_175511_1_).worldObj);
+        ItemStack itemstack = CraftingManager.getInstance().findMatchingRecipe(this.inventoryCrafting, ((EntitySheep) p_175511_1_).worldObj);
         int k;
 
-        if (itemstack != null && itemstack.getItem() == Items.dye)
-        {
+        if (itemstack != null && itemstack.getItem() == Items.dye) {
             k = itemstack.getMetadata();
-        }
-        else
-        {
+        } else {
             k = this.worldObj.rand.nextBoolean() ? i : j;
         }
 
         return EnumDyeColor.byDyeDamage(k);
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return 0.95F * this.height;
     }
 
-    public EntityAgeable createChild(EntityAgeable ageable)
-    {
+    public EntityAgeable createChild(EntityAgeable ageable) {
         return this.func_180491_b(ageable);
     }
 
-    static
-    {
-        field_175514_bm.put(EnumDyeColor.WHITE, new float[] {1.0F, 1.0F, 1.0F});
-        field_175514_bm.put(EnumDyeColor.ORANGE, new float[] {0.85F, 0.5F, 0.2F});
-        field_175514_bm.put(EnumDyeColor.MAGENTA, new float[] {0.7F, 0.3F, 0.85F});
-        field_175514_bm.put(EnumDyeColor.LIGHT_BLUE, new float[] {0.4F, 0.6F, 0.85F});
-        field_175514_bm.put(EnumDyeColor.YELLOW, new float[] {0.9F, 0.9F, 0.2F});
-        field_175514_bm.put(EnumDyeColor.LIME, new float[] {0.5F, 0.8F, 0.1F});
-        field_175514_bm.put(EnumDyeColor.PINK, new float[] {0.95F, 0.5F, 0.65F});
-        field_175514_bm.put(EnumDyeColor.GRAY, new float[] {0.3F, 0.3F, 0.3F});
-        field_175514_bm.put(EnumDyeColor.SILVER, new float[] {0.6F, 0.6F, 0.6F});
-        field_175514_bm.put(EnumDyeColor.CYAN, new float[] {0.3F, 0.5F, 0.6F});
-        field_175514_bm.put(EnumDyeColor.PURPLE, new float[] {0.5F, 0.25F, 0.7F});
-        field_175514_bm.put(EnumDyeColor.BLUE, new float[] {0.2F, 0.3F, 0.7F});
-        field_175514_bm.put(EnumDyeColor.BROWN, new float[] {0.4F, 0.3F, 0.2F});
-        field_175514_bm.put(EnumDyeColor.GREEN, new float[] {0.4F, 0.5F, 0.2F});
-        field_175514_bm.put(EnumDyeColor.RED, new float[] {0.6F, 0.2F, 0.2F});
-        field_175514_bm.put(EnumDyeColor.BLACK, new float[] {0.1F, 0.1F, 0.1F});
+    static {
+        field_175514_bm.put(EnumDyeColor.WHITE, new float[]{1.0F, 1.0F, 1.0F});
+        field_175514_bm.put(EnumDyeColor.ORANGE, new float[]{0.85F, 0.5F, 0.2F});
+        field_175514_bm.put(EnumDyeColor.MAGENTA, new float[]{0.7F, 0.3F, 0.85F});
+        field_175514_bm.put(EnumDyeColor.LIGHT_BLUE, new float[]{0.4F, 0.6F, 0.85F});
+        field_175514_bm.put(EnumDyeColor.YELLOW, new float[]{0.9F, 0.9F, 0.2F});
+        field_175514_bm.put(EnumDyeColor.LIME, new float[]{0.5F, 0.8F, 0.1F});
+        field_175514_bm.put(EnumDyeColor.PINK, new float[]{0.95F, 0.5F, 0.65F});
+        field_175514_bm.put(EnumDyeColor.GRAY, new float[]{0.3F, 0.3F, 0.3F});
+        field_175514_bm.put(EnumDyeColor.SILVER, new float[]{0.6F, 0.6F, 0.6F});
+        field_175514_bm.put(EnumDyeColor.CYAN, new float[]{0.3F, 0.5F, 0.6F});
+        field_175514_bm.put(EnumDyeColor.PURPLE, new float[]{0.5F, 0.25F, 0.7F});
+        field_175514_bm.put(EnumDyeColor.BLUE, new float[]{0.2F, 0.3F, 0.7F});
+        field_175514_bm.put(EnumDyeColor.BROWN, new float[]{0.4F, 0.3F, 0.2F});
+        field_175514_bm.put(EnumDyeColor.GREEN, new float[]{0.4F, 0.5F, 0.2F});
+        field_175514_bm.put(EnumDyeColor.RED, new float[]{0.6F, 0.2F, 0.2F});
+        field_175514_bm.put(EnumDyeColor.BLACK, new float[]{0.1F, 0.1F, 0.1F});
     }
-}
+}
