--- decompiled\net\minecraft\entity\passive\EntityAnimal.java
+++ src\main\java\net\minecraft\entity\passive\EntityAnimal.java
@@ -6,200 +6,156 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public abstract class EntityAnimal extends EntityAgeable implements IAnimals
-{
+
+public abstract class EntityAnimal extends EntityAgeable implements IAnimals {
+
     protected Block field_175506_bl;
     private int inLove;
     private EntityPlayer playerInLove;
     private static final String __OBFID = "CL_00001638";
 
-    public EntityAnimal(World worldIn)
-    {
+    public EntityAnimal(World worldIn) {
         super(worldIn);
         this.field_175506_bl = Blocks.grass;
     }
 
-    protected void updateAITasks()
-    {
-        if (this.getGrowingAge() != 0)
-        {
+    protected void updateAITasks() {
+        if (this.getGrowingAge() != 0) {
             this.inLove = 0;
         }
 
         super.updateAITasks();
     }
 
-    public void onLivingUpdate()
-    {
+    public void onLivingUpdate() {
         super.onLivingUpdate();
 
-        if (this.getGrowingAge() != 0)
-        {
+        if (this.getGrowingAge() != 0) {
             this.inLove = 0;
         }
 
-        if (this.inLove > 0)
-        {
+        if (this.inLove > 0) {
             --this.inLove;
 
-            if (this.inLove % 10 == 0)
-            {
+            if (this.inLove % 10 == 0) {
                 double d0 = this.rand.nextGaussian() * 0.02D;
                 double d1 = this.rand.nextGaussian() * 0.02D;
                 double d2 = this.rand.nextGaussian() * 0.02D;
-                this.worldObj.spawnParticle(EnumParticleTypes.HEART, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
+                this.worldObj.spawnParticle(EnumParticleTypes.HEART, this.posX + (double) (this.rand.nextFloat() * this.width * 2.0F) - (double) this.width, this.posY + 0.5D + (double) (this.rand.nextFloat() * this.height), this.posZ + (double) (this.rand.nextFloat() * this.width * 2.0F) - (double) this.width, d0, d1, d2, new int[0]);
             }
         }
     }
-
+    /* CraftBukkit start
+    // Function disabled as it has no special function anymore after
+    // setSitting is disabled.
     public boolean attackEntityFrom(DamageSource source, float amount)
     {
         if (this.isEntityInvulnerable(source))
         {
             return false;
         }
         else
         {
-            this.inLove = 0;
+            //CraftBukkit - moved into EntityLiving.attackEntityFrom(DamageSource, float)
+            // this.inLove = 0;
             return super.attackEntityFrom(source, amount);
         }
     }
+    // CraftBukkit end */
 
-    public float func_180484_a(BlockPos p_180484_1_)
-    {
+    public float func_180484_a(BlockPos p_180484_1_) {
         return this.worldObj.getBlockState(p_180484_1_.down()).getBlock() == Blocks.grass ? 10.0F : this.worldObj.getLightBrightness(p_180484_1_) - 0.5F;
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         tagCompound.setInteger("InLove", this.inLove);
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.inLove = tagCompund.getInteger("InLove");
     }
 
-    public boolean getCanSpawnHere()
-    {
+    public boolean getCanSpawnHere() {
         int i = MathHelper.floor_double(this.posX);
         int j = MathHelper.floor_double(this.getEntityBoundingBox().minY);
         int k = MathHelper.floor_double(this.posZ);
         BlockPos blockpos = new BlockPos(i, j, k);
         return this.worldObj.getBlockState(blockpos.down()).getBlock() == this.field_175506_bl && this.worldObj.getLight(blockpos) > 8 && super.getCanSpawnHere();
     }
 
-    public int getTalkInterval()
-    {
+    public int getTalkInterval() {
         return 120;
     }
 
-    protected boolean canDespawn()
-    {
+    public boolean canDespawn() { // SpigotMCP -- Make public as bukkit assumes in same package
         return false;
     }
 
-    protected int getExperiencePoints(EntityPlayer player)
-    {
+    protected int getExperiencePoints(EntityPlayer player) {
         return 1 + this.worldObj.rand.nextInt(3);
     }
 
-    public boolean isBreedingItem(ItemStack stack)
-    {
+    public boolean isBreedingItem(ItemStack stack) {
         return stack == null ? false : stack.getItem() == Items.wheat;
     }
 
-    public boolean interact(EntityPlayer player)
-    {
+    public boolean interact(EntityPlayer player) {
         ItemStack itemstack = player.inventory.getCurrentItem();
 
-        if (itemstack != null)
-        {
-            if (this.isBreedingItem(itemstack) && this.getGrowingAge() == 0 && this.inLove <= 0)
-            {
+        if (itemstack != null) {
+            if (this.isBreedingItem(itemstack) && this.getGrowingAge() == 0 && this.inLove <= 0) {
                 this.func_175505_a(player, itemstack);
                 this.setInLove(player);
                 return true;
             }
 
-            if (this.isChild() && this.isBreedingItem(itemstack))
-            {
+            if (this.isChild() && this.isBreedingItem(itemstack)) {
                 this.func_175505_a(player, itemstack);
-                this.func_175501_a((int)((float)(-this.getGrowingAge() / 20) * 0.1F), true);
+                this.func_175501_a((int) ((float) (-this.getGrowingAge() / 20) * 0.1F), true);
                 return true;
             }
         }
 
         return super.interact(player);
     }
 
-    protected void func_175505_a(EntityPlayer p_175505_1_, ItemStack p_175505_2_)
-    {
-        if (!p_175505_1_.capabilities.isCreativeMode)
-        {
+    protected void func_175505_a(EntityPlayer p_175505_1_, ItemStack p_175505_2_) {
+        if (!p_175505_1_.capabilities.isCreativeMode) {
             --p_175505_2_.stackSize;
 
-            if (p_175505_2_.stackSize <= 0)
-            {
-                p_175505_1_.inventory.setInventorySlotContents(p_175505_1_.inventory.currentItem, (ItemStack)null);
+            if (p_175505_2_.stackSize <= 0) {
+                p_175505_1_.inventory.setInventorySlotContents(p_175505_1_.inventory.currentItem, (ItemStack) null);
             }
         }
     }
 
-    public void setInLove(EntityPlayer p_146082_1_)
-    {
+    public void setInLove(EntityPlayer p_146082_1_) {
         this.inLove = 600;
         this.playerInLove = p_146082_1_;
-        this.worldObj.setEntityState(this, (byte)18);
+        this.worldObj.setEntityState(this, (byte) 18);
     }
 
-    public EntityPlayer func_146083_cb()
-    {
+    public EntityPlayer func_146083_cb() {
         return this.playerInLove;
     }
 
-    public boolean isInLove()
-    {
+    public boolean isInLove() {
         return this.inLove > 0;
     }
 
-    public void resetInLove()
-    {
+    public void resetInLove() {
         this.inLove = 0;
     }
 
-    public boolean canMateWith(EntityAnimal otherAnimal)
-    {
+    public boolean canMateWith(EntityAnimal otherAnimal) {
         return otherAnimal == this ? false : (otherAnimal.getClass() != this.getClass() ? false : this.isInLove() && otherAnimal.isInLove());
     }
-
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 18)
-        {
-            for (int i = 0; i < 7; ++i)
-            {
-                double d0 = this.rand.nextGaussian() * 0.02D;
-                double d1 = this.rand.nextGaussian() * 0.02D;
-                double d2 = this.rand.nextGaussian() * 0.02D;
-                this.worldObj.spawnParticle(EnumParticleTypes.HEART, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
-            }
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
 }
