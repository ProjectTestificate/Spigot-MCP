--- decompiled\net\minecraft\entity\passive\EntityAnimal.java
+++ src\main\java\net\minecraft\entity\passive\EntityAnimal.java
@@ -6,19 +6,18 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.BlockPos;
-import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public abstract class EntityAnimal extends EntityAgeable implements IAnimals
 {
+
     protected Block field_175506_bl;
     private int inLove;
     private EntityPlayer playerInLove;
     private static final String __OBFID = "CL_00001638";
 
@@ -58,23 +57,27 @@
                 double d2 = this.rand.nextGaussian() * 0.02D;
                 this.worldObj.spawnParticle(EnumParticleTypes.HEART, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
             }
         }
     }
-
+    /* CraftBukkit start
+    // Function disabled as it has no special function anymore after
+    // setSitting is disabled.
     public boolean attackEntityFrom(DamageSource source, float amount)
     {
         if (this.isEntityInvulnerable(source))
         {
             return false;
         }
         else
         {
-            this.inLove = 0;
+            //CraftBukkit - moved into EntityLiving.attackEntityFrom(DamageSource, float)
+            // this.inLove = 0;
             return super.attackEntityFrom(source, amount);
         }
     }
+    // CraftBukkit end */
 
     public float func_180484_a(BlockPos p_180484_1_)
     {
         return this.worldObj.getBlockState(p_180484_1_.down()).getBlock() == Blocks.grass ? 10.0F : this.worldObj.getLightBrightness(p_180484_1_) - 0.5F;
     }
@@ -103,11 +106,11 @@
     public int getTalkInterval()
     {
         return 120;
     }
 
-    protected boolean canDespawn()
+    public boolean canDespawn()   // SpigotMCP -- Make public as bukkit assumes in same package
     {
         return false;
     }
 
     protected int getExperiencePoints(EntityPlayer player)
@@ -181,25 +184,6 @@
 
     public boolean canMateWith(EntityAnimal otherAnimal)
     {
         return otherAnimal == this ? false : (otherAnimal.getClass() != this.getClass() ? false : this.isInLove() && otherAnimal.isInLove());
     }
-
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 18)
-        {
-            for (int i = 0; i < 7; ++i)
-            {
-                double d0 = this.rand.nextGaussian() * 0.02D;
-                double d1 = this.rand.nextGaussian() * 0.02D;
-                double d2 = this.rand.nextGaussian() * 0.02D;
-                this.worldObj.spawnParticle(EnumParticleTypes.HEART, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + 0.5D + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d0, d1, d2, new int[0]);
-            }
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
 }
