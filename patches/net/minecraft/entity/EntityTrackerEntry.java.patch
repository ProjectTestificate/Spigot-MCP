--- decompiled\net\minecraft\entity\EntityTrackerEntry.java
+++ src\main\java\net\minecraft\entity\EntityTrackerEntry.java
@@ -1,12 +1,13 @@
 package net.minecraft.entity;
 
-import com.google.common.collect.Sets;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
+
 import net.minecraft.block.Block;
 import net.minecraft.entity.ai.attributes.ServersideAttributeMap;
 import net.minecraft.entity.item.EntityArmorStand;
 import net.minecraft.entity.item.EntityBoat;
 import net.minecraft.entity.item.EntityEnderCrystal;
@@ -55,15 +56,21 @@
 import net.minecraft.network.play.server.S49PacketUpdateEntityNBT;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.storage.MapData;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerVelocityEvent;
 
+import com.google.common.collect.Sets;
+
 public class EntityTrackerEntry
 {
+
     private static final Logger logger = LogManager.getLogger();
     public Entity trackedEntity;
     public int trackingDistanceThreshold;
     public int updateFrequency;
     public int encodedPosX;
@@ -132,19 +139,19 @@
         {
             this.field_85178_v = this.trackedEntity.ridingEntity;
             this.func_151259_a(new S1BPacketEntityAttach(0, this.trackedEntity, this.trackedEntity.ridingEntity));
         }
 
-        if (this.trackedEntity instanceof EntityItemFrame && this.updateCounter % 10 == 0)
+        if (this.trackedEntity instanceof EntityItemFrame /*&& this.updateCounter % 10 == 0 */) // CraftBukkit - Moved below, should always enter this block
         {
             EntityItemFrame entityitemframe = (EntityItemFrame)this.trackedEntity;
             ItemStack itemstack = entityitemframe.getDisplayedItem();
 
-            if (itemstack != null && itemstack.getItem() instanceof ItemMap)
+            if ((this.updateCounter % 10 == 0 && itemstack != null && itemstack.getItem() instanceof ItemMap))   // CraftBukkit - Moved this.m % 10 logic here so item frames do not enter the other blocks
             {
                 MapData mapdata = Items.filled_map.getMapData(itemstack, this.trackedEntity.worldObj);
-                Iterator iterator = p_73122_1_.iterator();
+                Iterator iterator = this.trackingPlayers.iterator(); // CraftBukkit
 
                 while (iterator.hasNext())
                 {
                     EntityPlayer entityplayer = (EntityPlayer)iterator.next();
                     EntityPlayerMP entityplayermp = (EntityPlayerMP)entityplayer;
@@ -179,10 +186,26 @@
                 int i = l - this.encodedPosZ;
                 Object object = null;
                 boolean flag = Math.abs(k1) >= 4 || Math.abs(l1) >= 4 || Math.abs(i) >= 4 || this.updateCounter % 60 == 0;
                 boolean flag1 = Math.abs(i1 - this.encodedRotationYaw) >= 4 || Math.abs(j1 - this.encodedRotationPitch) >= 4;
 
+                // CraftBukkit start - Code moved from below
+                if (flag)
+                {
+                    this.encodedPosX = i;
+                    this.encodedPosY = j;
+                    this.encodedPosZ = k;
+                }
+
+                if (flag1)
+                {
+                    this.encodedRotationYaw = l;
+                    this.encodedRotationPitch = i1;
+                }
+
+                // CraftBukkit end
+
                 if (this.updateCounter > 0 || this.trackedEntity instanceof EntityArrow)
                 {
                     if (k1 >= -128 && k1 < 128 && l1 >= -128 && l1 < 128 && i >= -128 && i < 128 && this.ticksSinceLastForcedTeleport <= 400 && !this.ridingEntity && this.field_180234_y == this.trackedEntity.onGround)
                     {
                         if (flag && flag1)
@@ -200,10 +223,18 @@
                     }
                     else
                     {
                         this.field_180234_y = this.trackedEntity.onGround;
                         this.ticksSinceLastForcedTeleport = 0;
+
+                        // CraftBukkit start - Refresh list of who can see a player before sending teleport packet
+                        if (this.trackedEntity instanceof EntityPlayer)
+                        {
+                            this.updatePlayerEntities(new ArrayList(this.trackingPlayers));
+                        }
+
+                        // CraftBukkit end
                         object = new S18PacketEntityTeleport(this.trackedEntity.getEntityId(), j, k, l, (byte)i1, (byte)j1, this.trackedEntity.onGround);
                     }
                 }
 
                 if (this.sendVelocityUpdates)
@@ -227,11 +258,11 @@
                 {
                     this.func_151259_a((Packet)object);
                 }
 
                 this.sendMetadataToAllAssociatedPlayers();
-
+                /* CraftBukkit start - Code moved up
                 if (flag)
                 {
                     this.encodedPosX = j;
                     this.encodedPosY = k;
                     this.encodedPosZ = l;
@@ -240,11 +271,11 @@
                 if (flag1)
                 {
                     this.encodedRotationYaw = i1;
                     this.encodedRotationPitch = j1;
                 }
-
+                // CraftBukkit end */
                 this.ridingEntity = false;
             }
             else
             {
                 j = MathHelper.floor_float(this.trackedEntity.rotationYaw * 256.0F / 360.0F);
@@ -278,11 +309,36 @@
 
         ++this.updateCounter;
 
         if (this.trackedEntity.velocityChanged)
         {
-            this.func_151261_b(new S12PacketEntityVelocity(this.trackedEntity));
+            // CraftBukkit start - Create PlayerVelocity event
+            boolean cancelled = false;
+
+            if (this.trackedEntity instanceof EntityPlayer)
+            {
+                Player player = (Player)this.trackedEntity.getBukkitEntity();
+                org.bukkit.util.Vector velocity = player.getVelocity();
+                PlayerVelocityEvent event = new PlayerVelocityEvent(player, velocity);
+                this.trackedEntity.worldObj.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled())
+                {
+                    cancelled = true;
+                }
+                else if (!velocity.equals(event.getVelocity()))
+                {
+                    player.setVelocity(velocity);
+                }
+            }
+
+            if (!cancelled)
+            {
+                this.func_151261_b(new S12PacketEntityVelocity(this.trackedEntity));
+            }
+
+            // CraftBukkit end
             this.trackedEntity.velocityChanged = false;
         }
     }
 
     private void sendMetadataToAllAssociatedPlayers()
@@ -299,10 +355,17 @@
             ServersideAttributeMap serversideattributemap = (ServersideAttributeMap)((EntityLivingBase)this.trackedEntity).getAttributeMap();
             Set set = serversideattributemap.getAttributeInstanceSet();
 
             if (!set.isEmpty())
             {
+                // CraftBukkit start - Send scaled max health
+                if (this.trackedEntity instanceof EntityPlayer)
+                {
+                    ((EntityPlayerMP)this.trackedEntity).getBukkitEntity().injectScaledMaxHealth(set, false);
+                }
+
+                // CraftBukkit end
                 this.func_151261_b(new S20PacketEntityProperties(this.trackedEntity.getEntityId(), set));
             }
 
             set.clear();
         }
@@ -349,17 +412,31 @@
         }
     }
 
     public void updatePlayerEntity(EntityPlayerMP p_73117_1_)
     {
+        org.spigotmc.AsyncCatcher.catchOp("player tracker update"); // Spigot
+
         if (p_73117_1_ != this.trackedEntity)
         {
             if (this.func_180233_c(p_73117_1_))
             {
                 if (!this.trackingPlayers.contains(p_73117_1_) && (this.isPlayerWatchingThisChunk(p_73117_1_) || this.trackedEntity.forceSpawn))
                 {
-                    this.trackingPlayers.add(p_73117_1_);
+                    // CraftBukkit start - respect vanish API
+                    if (this.trackedEntity instanceof EntityPlayer)
+                    {
+                        Player player = ((EntityPlayerMP)this.trackedEntity).getBukkitEntity();
+
+                        if (!p_73117_1_.getBukkitEntity().canSee(player))
+                        {
+                            return;
+                        }
+                    }
+
+                    p_73117_1_.destroyedItemsNetCache.remove(Integer.valueOf(this.trackedEntity.getEntityId()));
+                    // CraftBukkit end                    this.trackingPlayers.add(p_73117_1_);
                     Packet packet = this.func_151260_c();
                     p_73117_1_.playerNetServerHandler.sendPacket(packet);
 
                     if (!this.trackedEntity.getDataWatcher().getIsBlank())
                     {
@@ -376,10 +453,18 @@
                     if (this.trackedEntity instanceof EntityLivingBase)
                     {
                         ServersideAttributeMap serversideattributemap = (ServersideAttributeMap)((EntityLivingBase)this.trackedEntity).getAttributeMap();
                         Collection collection = serversideattributemap.getWatchedAttributes();
 
+                        // CraftBukkit start - If sending own attributes send scaled health instead of current maximum health
+                        if (this.trackedEntity.getEntityId() == p_73117_1_.getEntityId())
+                        {
+                            ((EntityPlayerMP)this.trackedEntity).getBukkitEntity().injectScaledMaxHealth(collection, false);
+                        }
+
+                        // CraftBukkit end
+
                         if (!collection.isEmpty())
                         {
                             p_73117_1_.playerNetServerHandler.sendPacket(new S20PacketEntityProperties(this.trackedEntity.getEntityId(), collection));
                         }
                     }
@@ -424,10 +509,15 @@
                         {
                             p_73117_1_.playerNetServerHandler.sendPacket(new S0APacketUseBed(entityplayer, new BlockPos(this.trackedEntity)));
                         }
                     }
 
+                    // CraftBukkit start - Fix for nonsensical head yaw
+                    this.lastHeadMotion = MathHelper.floor_float(this.trackedEntity.getRotationYawHead() * 256.0F / 360.0F);
+                    this.func_151259_a(new S19PacketEntityHeadLook(this.trackedEntity, (byte)lastHeadMotion));
+                    // CraftBukkit end
+
                     if (this.trackedEntity instanceof EntityLivingBase)
                     {
                         EntityLivingBase entitylivingbase = (EntityLivingBase)this.trackedEntity;
                         Iterator iterator = entitylivingbase.getActivePotionEffects().iterator();
 
@@ -447,12 +537,14 @@
         }
     }
 
     public boolean func_180233_c(EntityPlayerMP p_180233_1_)
     {
-        double d0 = p_180233_1_.posX - (double)(this.encodedPosX / 32);
-        double d1 = p_180233_1_.posZ - (double)(this.encodedPosZ / 32);
+        // CraftBukkit start - this.*Loc / 30 -> this.tracker.loc*
+        double d0 = p_180233_1_.posX - this.trackedEntity.posX;
+        double d1 = p_180233_1_.posZ - this.trackedEntity.posZ;
+        // CraftBukkit end
         return d0 >= (double)(-this.trackingDistanceThreshold) && d0 <= (double)this.trackingDistanceThreshold && d1 >= (double)(-this.trackingDistanceThreshold) && d1 <= (double)this.trackingDistanceThreshold && this.trackedEntity.func_174827_a(p_180233_1_);
     }
 
     private boolean isPlayerWatchingThisChunk(EntityPlayerMP p_73121_1_)
     {
@@ -469,11 +561,14 @@
 
     private Packet func_151260_c()
     {
         if (this.trackedEntity.isDead)
         {
-            logger.warn("Fetching addPacket for removed entity");
+            // CraftBukkit start - Remove useless error spam, just return
+            // logger.warn("Fetching addPacket for removed entity");
+            return null;
+            // CraftBukkit end
         }
 
         if (this.trackedEntity instanceof EntityItem)
         {
             return new S0EPacketSpawnObject(this.trackedEntity, 2, 1);
@@ -624,10 +719,12 @@
         }
     }
 
     public void removeTrackedPlayerSymmetric(EntityPlayerMP p_73123_1_)
     {
+        org.spigotmc.AsyncCatcher.catchOp("player tracker clear"); // Spigot
+
         if (this.trackingPlayers.contains(p_73123_1_))
         {
             this.trackingPlayers.remove(p_73123_1_);
             p_73123_1_.func_152339_d(this.trackedEntity);
         }
