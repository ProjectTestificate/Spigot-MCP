---a/net/minecraft/entity/EntityTrackerEntry.java
+++b/net/minecraft/entity/EntityTrackerEntry.java
@@ -1,11 +1,11 @@
 package net.minecraft.entity;
 
-import com.google.common.collect.Sets;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
+
 import net.minecraft.block.Block;
 import net.minecraft.entity.ai.attributes.ServersideAttributeMap;
 import net.minecraft.entity.item.EntityArmorStand;
@@ -57,9 +57,13 @@
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.storage.MapData;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerVelocityEvent;
 
-public class EntityTrackerEntry
-{
+import com.google.common.collect.Sets;
+
+public class EntityTrackerEntry {
+
     private static final Logger logger = LogManager.getLogger();
     public Entity trackedEntity;
     public int trackingDistanceThreshold;
@@ -89,8 +89,7 @@
     public Set trackingPlayers = Sets.newHashSet();
     private static final String __OBFID = "CL_00001443";
 
-    public EntityTrackerEntry(Entity p_i1525_1_, int p_i1525_2_, int p_i1525_3_, boolean p_i1525_4_)
-    {
+    public EntityTrackerEntry(Entity p_i1525_1_, int p_i1525_2_, int p_i1525_3_, boolean p_i1525_4_) {
         this.trackedEntity = p_i1525_1_;
         this.trackingDistanceThreshold = p_i1525_2_;
         this.updateFrequency = p_i1525_3_;
@@ -104,23 +104,19 @@
         this.field_180234_y = p_i1525_1_.onGround;
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        return p_equals_1_ instanceof EntityTrackerEntry ? ((EntityTrackerEntry)p_equals_1_).trackedEntity.getEntityId() == this.trackedEntity.getEntityId() : false;
+    public boolean equals(Object p_equals_1_) {
+        return p_equals_1_ instanceof EntityTrackerEntry ? ((EntityTrackerEntry) p_equals_1_).trackedEntity.getEntityId() == this.trackedEntity.getEntityId() : false;
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         return this.trackedEntity.getEntityId();
     }
 
-    public void updatePlayerList(List p_73122_1_)
-    {
+    public void updatePlayerList(List p_73122_1_) {
         this.playerEntitiesUpdated = false;
 
-        if (!this.firstUpdateDone || this.trackedEntity.getDistanceSq(this.lastTrackedEntityPosX, this.lastTrackedEntityPosY, this.lastTrackedEntityPosZ) > 16.0D)
-        {
+        if (!this.firstUpdateDone || this.trackedEntity.getDistanceSq(this.lastTrackedEntityPosX, this.lastTrackedEntityPosY, this.lastTrackedEntityPosZ) > 16.0D) {
             this.lastTrackedEntityPosX = this.trackedEntity.posX;
             this.lastTrackedEntityPosY = this.trackedEntity.posY;
             this.lastTrackedEntityPosZ = this.trackedEntity.posZ;
@@ -128,31 +128,27 @@
             this.updatePlayerEntities(p_73122_1_);
         }
 
-        if (this.field_85178_v != this.trackedEntity.ridingEntity || this.trackedEntity.ridingEntity != null && this.updateCounter % 60 == 0)
-        {
+        if (this.field_85178_v != this.trackedEntity.ridingEntity || this.trackedEntity.ridingEntity != null && this.updateCounter % 60 == 0) {
             this.field_85178_v = this.trackedEntity.ridingEntity;
             this.func_151259_a(new S1BPacketEntityAttach(0, this.trackedEntity, this.trackedEntity.ridingEntity));
         }
 
-        if (this.trackedEntity instanceof EntityItemFrame && this.updateCounter % 10 == 0)
+        if (this.trackedEntity instanceof EntityItemFrame /*&& this.updateCounter % 10 == 0 */) // CraftBukkit - Moved below, should always enter this block
         {
-            EntityItemFrame entityitemframe = (EntityItemFrame)this.trackedEntity;
+            EntityItemFrame entityitemframe = (EntityItemFrame) this.trackedEntity;
             ItemStack itemstack = entityitemframe.getDisplayedItem();
 
-            if (itemstack != null && itemstack.getItem() instanceof ItemMap)
-            {
+            if ((this.updateCounter % 10 == 0 && itemstack != null && itemstack.getItem() instanceof ItemMap)) { // CraftBukkit - Moved this.m % 10 logic here so item frames do not enter the other blocks
                 MapData mapdata = Items.filled_map.getMapData(itemstack, this.trackedEntity.worldObj);
-                Iterator iterator = p_73122_1_.iterator();
+                Iterator iterator = this.trackingPlayers.iterator(); // CraftBukkit
 
-                while (iterator.hasNext())
-                {
-                    EntityPlayer entityplayer = (EntityPlayer)iterator.next();
-                    EntityPlayerMP entityplayermp = (EntityPlayerMP)entityplayer;
+                while (iterator.hasNext()) {
+                    EntityPlayer entityplayer = (EntityPlayer) iterator.next();
+                    EntityPlayerMP entityplayermp = (EntityPlayerMP) entityplayer;
                     mapdata.updateVisiblePlayers(entityplayermp, itemstack);
                     Packet packet = Items.filled_map.createMapDataPacket(itemstack, this.trackedEntity.worldObj, entityplayermp);
 
-                    if (packet != null)
-                    {
+                    if (packet != null) {
                         entityplayermp.playerNetServerHandler.sendPacket(packet);
                     }
                 }
@@ -161,13 +161,11 @@
             this.sendMetadataToAllAssociatedPlayers();
         }
 
-        if (this.updateCounter % this.updateFrequency == 0 || this.trackedEntity.isAirBorne || this.trackedEntity.getDataWatcher().hasObjectChanged())
-        {
+        if (this.updateCounter % this.updateFrequency == 0 || this.trackedEntity.isAirBorne || this.trackedEntity.getDataWatcher().hasObjectChanged()) {
             int j;
             int k;
 
-            if (this.trackedEntity.ridingEntity == null)
-            {
+            if (this.trackedEntity.ridingEntity == null) {
                 ++this.ticksSinceLastForcedTeleport;
                 j = MathHelper.floor_double(this.trackedEntity.posX * 32.0D);
                 k = MathHelper.floor_double(this.trackedEntity.posY * 32.0D);
@@ -181,46 +181,68 @@
                 boolean flag = Math.abs(k1) >= 4 || Math.abs(l1) >= 4 || Math.abs(i) >= 4 || this.updateCounter % 60 == 0;
                 boolean flag1 = Math.abs(i1 - this.encodedRotationYaw) >= 4 || Math.abs(j1 - this.encodedRotationPitch) >= 4;
 
-                if (this.updateCounter > 0 || this.trackedEntity instanceof EntityArrow)
-                {
-                    if (k1 >= -128 && k1 < 128 && l1 >= -128 && l1 < 128 && i >= -128 && i < 128 && this.ticksSinceLastForcedTeleport <= 400 && !this.ridingEntity && this.field_180234_y == this.trackedEntity.onGround)
-                    {
-                        if (flag && flag1)
-                        {
-                            object = new S14PacketEntity.S17PacketEntityLookMove(this.trackedEntity.getEntityId(), (byte)k1, (byte)l1, (byte)i, (byte)i1, (byte)j1, this.trackedEntity.onGround);
+                // CraftBukkit start - Code moved from below
+                if (flag) {
+                    this.encodedPosX = i;
+                    this.encodedPosY = j;
+                    this.encodedPosZ = k;
+                }
+
+                if (flag1) {
+                    this.encodedRotationYaw = l;
+                    this.encodedRotationPitch = i1;
+                }
+                // CraftBukkit end
+
+                if (this.updateCounter > 0 || this.trackedEntity instanceof EntityArrow) {
+                    if (k1 >= -128 && k1 < 128 && l1 >= -128 && l1 < 128 && i >= -128 && i < 128 && this.ticksSinceLastForcedTeleport <= 400 && !this.ridingEntity && this.field_180234_y == this.trackedEntity.onGround) {
+                        if (flag && flag1) {
+                            object = new S14PacketEntity.S17PacketEntityLookMove(this.trackedEntity.getEntityId(), (byte) k1, (byte) l1, (byte) i, (byte) i1, (byte) j1, this.trackedEntity.onGround);
+                        } else if (flag) {
+                            object = new S14PacketEntity.S15PacketEntityRelMove(this.trackedEntity.getEntityId(), (byte) k1, (byte) l1, (byte) i, this.trackedEntity.onGround);
+                        } else if (flag1) {
+                            object = new S14PacketEntity.S16PacketEntityLook(this.trackedEntity.getEntityId(), (byte) i1, (byte) j1, this.trackedEntity.onGround);
                         }
-                        else if (flag)
-                        {
-                            object = new S14PacketEntity.S15PacketEntityRelMove(this.trackedEntity.getEntityId(), (byte)k1, (byte)l1, (byte)i, this.trackedEntity.onGround);
-                        }
-                        else if (flag1)
-                        {
-                            object = new S14PacketEntity.S16PacketEntityLook(this.trackedEntity.getEntityId(), (byte)i1, (byte)j1, this.trackedEntity.onGround);
-                        }
-                    }
-                    else
-                    {
+                    } else {
                         this.field_180234_y = this.trackedEntity.onGround;
                         this.ticksSinceLastForcedTeleport = 0;
-                        object = new S18PacketEntityTeleport(this.trackedEntity.getEntityId(), j, k, l, (byte)i1, (byte)j1, this.trackedEntity.onGround);
+                        // CraftBukkit start - Refresh list of who can see a player before sending teleport packet
+                        if (this.trackedEntity instanceof EntityPlayer) {
+                            this.updatePlayerEntities(new ArrayList(this.trackingPlayers));
+                        }
+                        // CraftBukkit end
+                        object = new S18PacketEntityTeleport(this.trackedEntity.getEntityId(), j, k, l, (byte) i1, (byte) j1, this.trackedEntity.onGround);
                     }
                 }
 
-                if (this.sendVelocityUpdates)
-                {
+                if (this.sendVelocityUpdates) {
                     double d0 = this.trackedEntity.motionX - this.lastTrackedEntityMotionX;
                     double d1 = this.trackedEntity.motionY - this.lastTrackedEntityMotionY;
                     double d2 = this.trackedEntity.motionZ - this.motionZ;
                     double d3 = 0.02D;
                     double d4 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                    if (d4 > d3 * d3 || d4 > 0.0D && this.trackedEntity.motionX == 0.0D && this.trackedEntity.motionY == 0.0D && this.trackedEntity.motionZ == 0.0D)
-                    {
+                    if (d4 > d3 * d3 || d4 > 0.0D && this.trackedEntity.motionX == 0.0D && this.trackedEntity.motionY == 0.0D && this.trackedEntity.motionZ == 0.0D) {
                         this.lastTrackedEntityMotionX = this.trackedEntity.motionX;
                         this.lastTrackedEntityMotionY = this.trackedEntity.motionY;
                         this.motionZ = this.trackedEntity.motionZ;
@@ -223,15 +223,13 @@
                     }
                 }
 
-                if (object != null)
-                {
-                    this.func_151259_a((Packet)object);
+                if (object != null) {
+                    this.func_151259_a((Packet) object);
                 }
 
                 this.sendMetadataToAllAssociatedPlayers();
-
+                /* CraftBukkit start - Code moved up
                 if (flag)
                 {
                     this.encodedPosX = j;
@@ -242,15 +242,15 @@
                     this.encodedRotationYaw = i1;
                     this.encodedRotationPitch = j1;
                 }
+                // CraftBukkit end */
 
                 this.ridingEntity = false;
-            }
-            else
-            {
+            } else {
                 j = MathHelper.floor_float(this.trackedEntity.rotationYaw * 256.0F / 360.0F);
                 k = MathHelper.floor_float(this.trackedEntity.rotationPitch * 256.0F / 360.0F);
                 boolean flag2 = Math.abs(j - this.encodedRotationYaw) >= 4 || Math.abs(k - this.encodedRotationPitch) >= 4;
 
-                if (flag2)
-                {
-                    this.func_151259_a(new S14PacketEntity.S16PacketEntityLook(this.trackedEntity.getEntityId(), (byte)j, (byte)k, this.trackedEntity.onGround));
+                if (flag2) {
+                    this.func_151259_a(new S14PacketEntity.S16PacketEntityLook(this.trackedEntity.getEntityId(), (byte) j, (byte) k, this.trackedEntity.onGround));
                     this.encodedRotationYaw = j;
                     this.encodedRotationPitch = k;
                 }
@@ -267,9 +267,8 @@
 
             j = MathHelper.floor_float(this.trackedEntity.getRotationYawHead() * 256.0F / 360.0F);
 
-            if (Math.abs(j - this.lastHeadMotion) >= 4)
-            {
-                this.func_151259_a(new S19PacketEntityHeadLook(this.trackedEntity, (byte)j));
+            if (Math.abs(j - this.lastHeadMotion) >= 4) {
+                this.func_151259_a(new S19PacketEntityHeadLook(this.trackedEntity, (byte) j));
                 this.lastHeadMotion = j;
             }
 
@@ -278,30 +278,65 @@
 
         ++this.updateCounter;
 
-        if (this.trackedEntity.velocityChanged)
-        {
-            this.func_151261_b(new S12PacketEntityVelocity(this.trackedEntity));
+        if (this.trackedEntity.velocityChanged) {
+            // CraftBukkit start - Create PlayerVelocity event
+            boolean cancelled = false;
+
+            if (this.trackedEntity instanceof EntityPlayer) {
+                Player player = (Player) this.trackedEntity.getBukkitEntity();
+                org.bukkit.util.Vector velocity = player.getVelocity();
+
+                PlayerVelocityEvent event = new PlayerVelocityEvent(player, velocity);
+                this.trackedEntity.worldObj.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    cancelled = true;
+                } else if (!velocity.equals(event.getVelocity())) {
+                    player.setVelocity(velocity);
+                }
+            }
+
+            if (!cancelled) {
+                this.func_151261_b(new S12PacketEntityVelocity(this.trackedEntity));
+            }
+            // CraftBukkit end
             this.trackedEntity.velocityChanged = false;
         }
     }
 
-    private void sendMetadataToAllAssociatedPlayers()
-    {
+    private void sendMetadataToAllAssociatedPlayers() {
         DataWatcher datawatcher = this.trackedEntity.getDataWatcher();
 
-        if (datawatcher.hasObjectChanged())
-        {
+        if (datawatcher.hasObjectChanged()) {
             this.func_151261_b(new S1CPacketEntityMetadata(this.trackedEntity.getEntityId(), datawatcher, false));
         }
 
-        if (this.trackedEntity instanceof EntityLivingBase)
-        {
-            ServersideAttributeMap serversideattributemap = (ServersideAttributeMap)((EntityLivingBase)this.trackedEntity).getAttributeMap();
+        if (this.trackedEntity instanceof EntityLivingBase) {
+            ServersideAttributeMap serversideattributemap = (ServersideAttributeMap) ((EntityLivingBase) this.trackedEntity).getAttributeMap();
             Set set = serversideattributemap.getAttributeInstanceSet();
 
-            if (!set.isEmpty())
-            {
+            if (!set.isEmpty()) {
+                // CraftBukkit start - Send scaled max health
+                if (this.trackedEntity instanceof EntityPlayer) {
+                    ((EntityPlayerMP) this.trackedEntity).getBukkitEntity().injectScaledMaxHealth(set, false);
+                }
+                // CraftBukkit end
                 this.func_151261_b(new S20PacketEntityProperties(this.trackedEntity.getEntityId(), set));
             }
 
@@ -308,78 +308,72 @@
         }
     }
 
-    public void func_151259_a(Packet p_151259_1_)
-    {
+    public void func_151259_a(Packet p_151259_1_) {
         Iterator iterator = this.trackingPlayers.iterator();
 
-        while (iterator.hasNext())
-        {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)iterator.next();
+        while (iterator.hasNext()) {
+            EntityPlayerMP entityplayermp = (EntityPlayerMP) iterator.next();
             entityplayermp.playerNetServerHandler.sendPacket(p_151259_1_);
         }
     }
 
-    public void func_151261_b(Packet p_151261_1_)
-    {
+    public void func_151261_b(Packet p_151261_1_) {
         this.func_151259_a(p_151261_1_);
 
-        if (this.trackedEntity instanceof EntityPlayerMP)
-        {
-            ((EntityPlayerMP)this.trackedEntity).playerNetServerHandler.sendPacket(p_151261_1_);
+        if (this.trackedEntity instanceof EntityPlayerMP) {
+            ((EntityPlayerMP) this.trackedEntity).playerNetServerHandler.sendPacket(p_151261_1_);
         }
     }
 
-    public void sendDestroyEntityPacketToTrackedPlayers()
-    {
+    public void sendDestroyEntityPacketToTrackedPlayers() {
         Iterator iterator = this.trackingPlayers.iterator();
 
-        while (iterator.hasNext())
-        {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)iterator.next();
+        while (iterator.hasNext()) {
+            EntityPlayerMP entityplayermp = (EntityPlayerMP) iterator.next();
             entityplayermp.func_152339_d(this.trackedEntity);
         }
     }
 
-    public void removeFromTrackedPlayers(EntityPlayerMP p_73118_1_)
-    {
-        if (this.trackingPlayers.contains(p_73118_1_))
-        {
+    public void removeFromTrackedPlayers(EntityPlayerMP p_73118_1_) {
+        if (this.trackingPlayers.contains(p_73118_1_)) {
             p_73118_1_.func_152339_d(this.trackedEntity);
             this.trackingPlayers.remove(p_73118_1_);
         }
     }
 
-    public void updatePlayerEntity(EntityPlayerMP p_73117_1_)
-    {
-        if (p_73117_1_ != this.trackedEntity)
-        {
-            if (this.func_180233_c(p_73117_1_))
-            {
-                if (!this.trackingPlayers.contains(p_73117_1_) && (this.isPlayerWatchingThisChunk(p_73117_1_) || this.trackedEntity.forceSpawn))
-                {
-                    this.trackingPlayers.add(p_73117_1_);
+    public void updatePlayerEntity(EntityPlayerMP p_73117_1_) {
+        org.spigotmc.AsyncCatcher.catchOp("player tracker update"); // Spigot
+        if (p_73117_1_ != this.trackedEntity) {
+            if (this.func_180233_c(p_73117_1_)) {
+                if (!this.trackingPlayers.contains(p_73117_1_) && (this.isPlayerWatchingThisChunk(p_73117_1_) || this.trackedEntity.forceSpawn)) {
+                    // CraftBukkit start - respect vanish API
+                    if (this.trackedEntity instanceof EntityPlayer) {
+                        Player player = ((EntityPlayerMP) this.trackedEntity).getBukkitEntity();
+                        if (!p_73117_1_.getBukkitEntity().canSee(player)) {
+                            return;
+                        }
+                    }
+
+                    p_73117_1_.destroyedItemsNetCache.remove(Integer.valueOf(this.trackedEntity.getEntityId()));
+                    // CraftBukkit end                    this.trackingPlayers.add(p_73117_1_);
                     Packet packet = this.func_151260_c();
                     p_73117_1_.playerNetServerHandler.sendPacket(packet);
 
-                    if (!this.trackedEntity.getDataWatcher().getIsBlank())
-                    {
+                    if (!this.trackedEntity.getDataWatcher().getIsBlank()) {
                         p_73117_1_.playerNetServerHandler.sendPacket(new S1CPacketEntityMetadata(this.trackedEntity.getEntityId(), this.trackedEntity.getDataWatcher(), true));
                     }
 
                     NBTTagCompound nbttagcompound = this.trackedEntity.func_174819_aU();
 
-                    if (nbttagcompound != null)
-                    {
+                    if (nbttagcompound != null) {
                         p_73117_1_.playerNetServerHandler.sendPacket(new S49PacketUpdateEntityNBT(this.trackedEntity.getEntityId(), nbttagcompound));
                     }
 
-                    if (this.trackedEntity instanceof EntityLivingBase)
-                    {
-                        ServersideAttributeMap serversideattributemap = (ServersideAttributeMap)((EntityLivingBase)this.trackedEntity).getAttributeMap();
+                    if (this.trackedEntity instanceof EntityLivingBase) {
+                        ServersideAttributeMap serversideattributemap = (ServersideAttributeMap) ((EntityLivingBase) this.trackedEntity).getAttributeMap();
                         Collection collection = serversideattributemap.getWatchedAttributes();
 
-                        if (!collection.isEmpty())
-                        {
+
+                        // CraftBukkit start - If sending own attributes send scaled health instead of current maximum health
+                        if (this.trackedEntity.getEntityId() == p_73117_1_.getEntityId()) {
+                            ((EntityPlayerMP) this.trackedEntity).getBukkitEntity().injectScaledMaxHealth(collection, false);
+                        }
+                        // CraftBukkit end
+
+                        if (!collection.isEmpty()) {
                             p_73117_1_.playerNetServerHandler.sendPacket(new S20PacketEntityProperties(this.trackedEntity.getEntityId(), collection));
                         }
                     }
@@ -388,249 +388,184 @@
                     this.lastTrackedEntityMotionY = this.trackedEntity.motionY;
                     this.motionZ = this.trackedEntity.motionZ;
 
-                    if (this.sendVelocityUpdates && !(packet instanceof S0FPacketSpawnMob))
-                    {
+                    if (this.sendVelocityUpdates && !(packet instanceof S0FPacketSpawnMob)) {
                         p_73117_1_.playerNetServerHandler.sendPacket(new S12PacketEntityVelocity(this.trackedEntity.getEntityId(), this.trackedEntity.motionX, this.trackedEntity.motionY, this.trackedEntity.motionZ));
                     }
 
-                    if (this.trackedEntity.ridingEntity != null)
-                    {
+                    if (this.trackedEntity.ridingEntity != null) {
                         p_73117_1_.playerNetServerHandler.sendPacket(new S1BPacketEntityAttach(0, this.trackedEntity, this.trackedEntity.ridingEntity));
                     }
 
-                    if (this.trackedEntity instanceof EntityLiving && ((EntityLiving)this.trackedEntity).getLeashedToEntity() != null)
-                    {
-                        p_73117_1_.playerNetServerHandler.sendPacket(new S1BPacketEntityAttach(1, this.trackedEntity, ((EntityLiving)this.trackedEntity).getLeashedToEntity()));
+                    if (this.trackedEntity instanceof EntityLiving && ((EntityLiving) this.trackedEntity).getLeashedToEntity() != null) {
+                        p_73117_1_.playerNetServerHandler.sendPacket(new S1BPacketEntityAttach(1, this.trackedEntity, ((EntityLiving) this.trackedEntity).getLeashedToEntity()));
                     }
 
-                    if (this.trackedEntity instanceof EntityLivingBase)
-                    {
-                        for (int i = 0; i < 5; ++i)
-                        {
-                            ItemStack itemstack = ((EntityLivingBase)this.trackedEntity).getEquipmentInSlot(i);
+                    if (this.trackedEntity instanceof EntityLivingBase) {
+                        for (int i = 0; i < 5; ++i) {
+                            ItemStack itemstack = ((EntityLivingBase) this.trackedEntity).getEquipmentInSlot(i);
 
-                            if (itemstack != null)
-                            {
+                            if (itemstack != null) {
                                 p_73117_1_.playerNetServerHandler.sendPacket(new S04PacketEntityEquipment(this.trackedEntity.getEntityId(), i, itemstack));
                             }
                         }
                     }
 
-                    if (this.trackedEntity instanceof EntityPlayer)
-                    {
-                        EntityPlayer entityplayer = (EntityPlayer)this.trackedEntity;
+                    if (this.trackedEntity instanceof EntityPlayer) {
+                        EntityPlayer entityplayer = (EntityPlayer) this.trackedEntity;
 
-                        if (entityplayer.isPlayerSleeping())
-                        {
+                        if (entityplayer.isPlayerSleeping()) {
                             p_73117_1_.playerNetServerHandler.sendPacket(new S0APacketUseBed(entityplayer, new BlockPos(this.trackedEntity)));
                         }
                     }
 
-                    if (this.trackedEntity instanceof EntityLivingBase)
-                    {
-                        EntityLivingBase entitylivingbase = (EntityLivingBase)this.trackedEntity;
+                    // CraftBukkit start - Fix for nonsensical head yaw
+                    this.lastHeadMotion = MathHelper.floor_float(this.trackedEntity.getRotationYawHead() * 256.0F / 360.0F);
+                    this.func_151259_a(new S19PacketEntityHeadLook(this.trackedEntity, (byte) lastHeadMotion));
+                    // CraftBukkit end
+
+                    if (this.trackedEntity instanceof EntityLivingBase) {
+                        EntityLivingBase entitylivingbase = (EntityLivingBase) this.trackedEntity;
                         Iterator iterator = entitylivingbase.getActivePotionEffects().iterator();
 
-                        while (iterator.hasNext())
-                        {
-                            PotionEffect potioneffect = (PotionEffect)iterator.next();
+                        while (iterator.hasNext()) {
+                            PotionEffect potioneffect = (PotionEffect) iterator.next();
                             p_73117_1_.playerNetServerHandler.sendPacket(new S1DPacketEntityEffect(this.trackedEntity.getEntityId(), potioneffect));
                         }
                     }
                 }
-            }
-            else if (this.trackingPlayers.contains(p_73117_1_))
-            {
+            } else if (this.trackingPlayers.contains(p_73117_1_)) {
                 this.trackingPlayers.remove(p_73117_1_);
                 p_73117_1_.func_152339_d(this.trackedEntity);
             }
         }
     }
 
-    public boolean func_180233_c(EntityPlayerMP p_180233_1_)
-    {
-        double d0 = p_180233_1_.posX - (double)(this.encodedPosX / 32);
-        double d1 = p_180233_1_.posZ - (double)(this.encodedPosZ / 32);
-        return d0 >= (double)(-this.trackingDistanceThreshold) && d0 <= (double)this.trackingDistanceThreshold && d1 >= (double)(-this.trackingDistanceThreshold) && d1 <= (double)this.trackingDistanceThreshold && this.trackedEntity.func_174827_a(p_180233_1_);
+    public boolean func_180233_c(EntityPlayerMP p_180233_1_) {
+        // CraftBukkit start - this.*Loc / 30 -> this.tracker.loc*
+        double d0 = p_180233_1_.posX - this.trackedEntity.posX;
+        double d1 = p_180233_1_.posZ - this.trackedEntity.posZ;
+        // CraftBukkit end
+        return d0 >= (double) (-this.trackingDistanceThreshold) && d0 <= (double) this.trackingDistanceThreshold && d1 >= (double) (-this.trackingDistanceThreshold) && d1 <= (double) this.trackingDistanceThreshold && this.trackedEntity.func_174827_a(p_180233_1_);
     }
 
-    private boolean isPlayerWatchingThisChunk(EntityPlayerMP p_73121_1_)
-    {
+    private boolean isPlayerWatchingThisChunk(EntityPlayerMP p_73121_1_) {
         return p_73121_1_.getServerForPlayer().getPlayerManager().isPlayerWatchingChunk(p_73121_1_, this.trackedEntity.chunkCoordX, this.trackedEntity.chunkCoordZ);
     }
 
-    public void updatePlayerEntities(List p_73125_1_)
-    {
-        for (int i = 0; i < p_73125_1_.size(); ++i)
-        {
-            this.updatePlayerEntity((EntityPlayerMP)p_73125_1_.get(i));
+    public void updatePlayerEntities(List p_73125_1_) {
+        for (int i = 0; i < p_73125_1_.size(); ++i) {
+            this.updatePlayerEntity((EntityPlayerMP) p_73125_1_.get(i));
         }
     }
 
-    private Packet func_151260_c()
-    {
-        if (this.trackedEntity.isDead)
-        {
-            logger.warn("Fetching addPacket for removed entity");
+    private Packet func_151260_c() {
+        if (this.trackedEntity.isDead) {
+            // CraftBukkit start - Remove useless error spam, just return
+            // logger.warn("Fetching addPacket for removed entity");
+            return null;
+            // CraftBukkit end
         }
 
-        if (this.trackedEntity instanceof EntityItem)
-        {
+        if (this.trackedEntity instanceof EntityItem) {
             return new S0EPacketSpawnObject(this.trackedEntity, 2, 1);
-        }
-        else if (this.trackedEntity instanceof EntityPlayerMP)
-        {
-            return new S0CPacketSpawnPlayer((EntityPlayer)this.trackedEntity);
-        }
-        else if (this.trackedEntity instanceof EntityMinecart)
-        {
-            EntityMinecart entityminecart = (EntityMinecart)this.trackedEntity;
+        } else if (this.trackedEntity instanceof EntityPlayerMP) {
+            return new S0CPacketSpawnPlayer((EntityPlayer) this.trackedEntity);
+        } else if (this.trackedEntity instanceof EntityMinecart) {
+            EntityMinecart entityminecart = (EntityMinecart) this.trackedEntity;
             return new S0EPacketSpawnObject(this.trackedEntity, 10, entityminecart.getMinecartType().getNetworkID());
-        }
-        else if (this.trackedEntity instanceof EntityBoat)
-        {
+        } else if (this.trackedEntity instanceof EntityBoat) {
             return new S0EPacketSpawnObject(this.trackedEntity, 1);
-        }
-        else if (this.trackedEntity instanceof IAnimals)
-        {
+        } else if (this.trackedEntity instanceof IAnimals) {
             this.lastHeadMotion = MathHelper.floor_float(this.trackedEntity.getRotationYawHead() * 256.0F / 360.0F);
-            return new S0FPacketSpawnMob((EntityLivingBase)this.trackedEntity);
-        }
-        else if (this.trackedEntity instanceof EntityFishHook)
-        {
-            EntityPlayer entityplayer = ((EntityFishHook)this.trackedEntity).angler;
+            return new S0FPacketSpawnMob((EntityLivingBase) this.trackedEntity);
+        } else if (this.trackedEntity instanceof EntityFishHook) {
+            EntityPlayer entityplayer = ((EntityFishHook) this.trackedEntity).angler;
             return new S0EPacketSpawnObject(this.trackedEntity, 90, entityplayer != null ? entityplayer.getEntityId() : this.trackedEntity.getEntityId());
-        }
-        else if (this.trackedEntity instanceof EntityArrow)
-        {
-            Entity entity = ((EntityArrow)this.trackedEntity).shootingEntity;
+        } else if (this.trackedEntity instanceof EntityArrow) {
+            Entity entity = ((EntityArrow) this.trackedEntity).shootingEntity;
             return new S0EPacketSpawnObject(this.trackedEntity, 60, entity != null ? entity.getEntityId() : this.trackedEntity.getEntityId());
-        }
-        else if (this.trackedEntity instanceof EntitySnowball)
-        {
+        } else if (this.trackedEntity instanceof EntitySnowball) {
             return new S0EPacketSpawnObject(this.trackedEntity, 61);
-        }
-        else if (this.trackedEntity instanceof EntityPotion)
-        {
-            return new S0EPacketSpawnObject(this.trackedEntity, 73, ((EntityPotion)this.trackedEntity).getPotionDamage());
-        }
-        else if (this.trackedEntity instanceof EntityExpBottle)
-        {
+        } else if (this.trackedEntity instanceof EntityPotion) {
+            return new S0EPacketSpawnObject(this.trackedEntity, 73, ((EntityPotion) this.trackedEntity).getPotionDamage());
+        } else if (this.trackedEntity instanceof EntityExpBottle) {
             return new S0EPacketSpawnObject(this.trackedEntity, 75);
-        }
-        else if (this.trackedEntity instanceof EntityEnderPearl)
-        {
+        } else if (this.trackedEntity instanceof EntityEnderPearl) {
             return new S0EPacketSpawnObject(this.trackedEntity, 65);
-        }
-        else if (this.trackedEntity instanceof EntityEnderEye)
-        {
+        } else if (this.trackedEntity instanceof EntityEnderEye) {
             return new S0EPacketSpawnObject(this.trackedEntity, 72);
-        }
-        else if (this.trackedEntity instanceof EntityFireworkRocket)
-        {
+        } else if (this.trackedEntity instanceof EntityFireworkRocket) {
             return new S0EPacketSpawnObject(this.trackedEntity, 76);
-        }
-        else
-        {
+        } else {
             S0EPacketSpawnObject s0epacketspawnobject;
 
-            if (this.trackedEntity instanceof EntityFireball)
-            {
-                EntityFireball entityfireball = (EntityFireball)this.trackedEntity;
+            if (this.trackedEntity instanceof EntityFireball) {
+                EntityFireball entityfireball = (EntityFireball) this.trackedEntity;
                 s0epacketspawnobject = null;
                 byte b0 = 63;
 
-                if (this.trackedEntity instanceof EntitySmallFireball)
-                {
+                if (this.trackedEntity instanceof EntitySmallFireball) {
                     b0 = 64;
-                }
-                else if (this.trackedEntity instanceof EntityWitherSkull)
-                {
+                } else if (this.trackedEntity instanceof EntityWitherSkull) {
                     b0 = 66;
                 }
 
-                if (entityfireball.shootingEntity != null)
-                {
-                    s0epacketspawnobject = new S0EPacketSpawnObject(this.trackedEntity, b0, ((EntityFireball)this.trackedEntity).shootingEntity.getEntityId());
-                }
-                else
-                {
+                if (entityfireball.shootingEntity != null) {
+                    s0epacketspawnobject = new S0EPacketSpawnObject(this.trackedEntity, b0, ((EntityFireball) this.trackedEntity).shootingEntity.getEntityId());
+                } else {
                     s0epacketspawnobject = new S0EPacketSpawnObject(this.trackedEntity, b0, 0);
                 }
 
-                s0epacketspawnobject.func_149003_d((int)(entityfireball.accelerationX * 8000.0D));
-                s0epacketspawnobject.func_149000_e((int)(entityfireball.accelerationY * 8000.0D));
-                s0epacketspawnobject.func_149007_f((int)(entityfireball.accelerationZ * 8000.0D));
+                s0epacketspawnobject.func_149003_d((int) (entityfireball.accelerationX * 8000.0D));
+                s0epacketspawnobject.func_149000_e((int) (entityfireball.accelerationY * 8000.0D));
+                s0epacketspawnobject.func_149007_f((int) (entityfireball.accelerationZ * 8000.0D));
                 return s0epacketspawnobject;
-            }
-            else if (this.trackedEntity instanceof EntityEgg)
-            {
+            } else if (this.trackedEntity instanceof EntityEgg) {
                 return new S0EPacketSpawnObject(this.trackedEntity, 62);
-            }
-            else if (this.trackedEntity instanceof EntityTNTPrimed)
-            {
+            } else if (this.trackedEntity instanceof EntityTNTPrimed) {
                 return new S0EPacketSpawnObject(this.trackedEntity, 50);
-            }
-            else if (this.trackedEntity instanceof EntityEnderCrystal)
-            {
+            } else if (this.trackedEntity instanceof EntityEnderCrystal) {
                 return new S0EPacketSpawnObject(this.trackedEntity, 51);
-            }
-            else if (this.trackedEntity instanceof EntityFallingBlock)
-            {
-                EntityFallingBlock entityfallingblock = (EntityFallingBlock)this.trackedEntity;
+            } else if (this.trackedEntity instanceof EntityFallingBlock) {
+                EntityFallingBlock entityfallingblock = (EntityFallingBlock) this.trackedEntity;
                 return new S0EPacketSpawnObject(this.trackedEntity, 70, Block.getStateId(entityfallingblock.getBlock()));
-            }
-            else if (this.trackedEntity instanceof EntityArmorStand)
-            {
+            } else if (this.trackedEntity instanceof EntityArmorStand) {
                 return new S0EPacketSpawnObject(this.trackedEntity, 78);
-            }
-            else if (this.trackedEntity instanceof EntityPainting)
-            {
-                return new S10PacketSpawnPainting((EntityPainting)this.trackedEntity);
-            }
-            else
-            {
+            } else if (this.trackedEntity instanceof EntityPainting) {
+                return new S10PacketSpawnPainting((EntityPainting) this.trackedEntity);
+            } else {
                 BlockPos blockpos;
 
-                if (this.trackedEntity instanceof EntityItemFrame)
-                {
-                    EntityItemFrame entityitemframe = (EntityItemFrame)this.trackedEntity;
+                if (this.trackedEntity instanceof EntityItemFrame) {
+                    EntityItemFrame entityitemframe = (EntityItemFrame) this.trackedEntity;
                     s0epacketspawnobject = new S0EPacketSpawnObject(this.trackedEntity, 71, entityitemframe.field_174860_b.getHorizontalIndex());
                     blockpos = entityitemframe.func_174857_n();
-                    s0epacketspawnobject.func_148996_a(MathHelper.floor_float((float)(blockpos.getX() * 32)));
-                    s0epacketspawnobject.func_148995_b(MathHelper.floor_float((float)(blockpos.getY() * 32)));
-                    s0epacketspawnobject.func_149005_c(MathHelper.floor_float((float)(blockpos.getZ() * 32)));
+                    s0epacketspawnobject.func_148996_a(MathHelper.floor_float((float) (blockpos.getX() * 32)));
+                    s0epacketspawnobject.func_148995_b(MathHelper.floor_float((float) (blockpos.getY() * 32)));
+                    s0epacketspawnobject.func_149005_c(MathHelper.floor_float((float) (blockpos.getZ() * 32)));
                     return s0epacketspawnobject;
-                }
-                else if (this.trackedEntity instanceof EntityLeashKnot)
-                {
-                    EntityLeashKnot entityleashknot = (EntityLeashKnot)this.trackedEntity;
+                } else if (this.trackedEntity instanceof EntityLeashKnot) {
+                    EntityLeashKnot entityleashknot = (EntityLeashKnot) this.trackedEntity;
                     s0epacketspawnobject = new S0EPacketSpawnObject(this.trackedEntity, 77);
                     blockpos = entityleashknot.func_174857_n();
-                    s0epacketspawnobject.func_148996_a(MathHelper.floor_float((float)(blockpos.getX() * 32)));
-                    s0epacketspawnobject.func_148995_b(MathHelper.floor_float((float)(blockpos.getY() * 32)));
-                    s0epacketspawnobject.func_149005_c(MathHelper.floor_float((float)(blockpos.getZ() * 32)));
+                    s0epacketspawnobject.func_148996_a(MathHelper.floor_float((float) (blockpos.getX() * 32)));
+                    s0epacketspawnobject.func_148995_b(MathHelper.floor_float((float) (blockpos.getY() * 32)));
+                    s0epacketspawnobject.func_149005_c(MathHelper.floor_float((float) (blockpos.getZ() * 32)));
                     return s0epacketspawnobject;
-                }
-                else if (this.trackedEntity instanceof EntityXPOrb)
-                {
-                    return new S11PacketSpawnExperienceOrb((EntityXPOrb)this.trackedEntity);
-                }
-                else
-                {
+                } else if (this.trackedEntity instanceof EntityXPOrb) {
+                    return new S11PacketSpawnExperienceOrb((EntityXPOrb) this.trackedEntity);
+                } else {
                     throw new IllegalArgumentException("Don\'t know how to add " + this.trackedEntity.getClass() + "!");
                 }
             }
         }
     }
 
-    public void removeTrackedPlayerSymmetric(EntityPlayerMP p_73123_1_)
-    {
-        if (this.trackingPlayers.contains(p_73123_1_))
-        {
+    public void removeTrackedPlayerSymmetric(EntityPlayerMP p_73123_1_) {
+        org.spigotmc.AsyncCatcher.catchOp("player tracker clear"); // Spigot
+        if (this.trackingPlayers.contains(p_73123_1_)) {
             this.trackingPlayers.remove(p_73123_1_);
             p_73123_1_.func_152339_d(this.trackedEntity);
         }
     }
-}
+}
