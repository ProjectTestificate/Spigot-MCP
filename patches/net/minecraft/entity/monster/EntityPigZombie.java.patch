---a/net/minecraft/entity/monster/EntityPigZombie.java
+++b/net/minecraft/entity/monster/EntityPigZombie.java
@@ -1,6 +1,7 @@
 package net.minecraft.entity.monster;
 
 import java.util.UUID;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.entity.EntityLivingBase;
@@ -19,75 +19,63 @@
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.World;
 
-public class EntityPigZombie extends EntityZombie
-{
+public class EntityPigZombie extends EntityZombie {
+
     private static final UUID field_110189_bq = UUID.fromString("49455A49-7EC5-45BA-B886-3B90B23A1718");
     private static final AttributeModifier field_110190_br = (new AttributeModifier(field_110189_bq, "Attacking speed boost", 0.05D, 0)).setSaved(false);
-    private int angerLevel;
+    public int angerLevel; // SpigotMCP -- Apply access transformation
     private int randomSoundDelay;
     private UUID field_175459_bn;
     private static final String __OBFID = "CL_00001693";
 
-    public EntityPigZombie(World worldIn)
-    {
+    public EntityPigZombie(World worldIn) {
         super(worldIn);
         this.isImmuneToFire = true;
     }
 
-    public void setRevengeTarget(EntityLivingBase livingBase)
-    {
+    public void setRevengeTarget(EntityLivingBase livingBase) {
         super.setRevengeTarget(livingBase);
 
-        if (livingBase != null)
-        {
+        if (livingBase != null) {
             this.field_175459_bn = livingBase.getUniqueID();
         }
     }
 
-    protected void applyEntityAI()
-    {
+    protected void applyEntityAI() {
         this.targetTasks.addTask(1, new EntityPigZombie.AIHurtByAggressor());
         this.targetTasks.addTask(2, new EntityPigZombie.AITargetAggressor());
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(reinforcementChance).setBaseValue(0.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.23000000417232513D);
         this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setBaseValue(5.0D);
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         super.onUpdate();
     }
 
-    protected void updateAITasks()
-    {
+    protected void updateAITasks() {
         IAttributeInstance iattributeinstance = this.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
 
-        if (this.isAngry())
-        {
-            if (!this.isChild() && !iattributeinstance.func_180374_a(field_110190_br))
-            {
+        if (this.isAngry()) {
+            if (!this.isChild() && !iattributeinstance.func_180374_a(field_110190_br)) {
                 iattributeinstance.applyModifier(field_110190_br);
             }
 
             --this.angerLevel;
-        }
-        else if (iattributeinstance.func_180374_a(field_110190_br))
-        {
+        } else if (iattributeinstance.func_180374_a(field_110190_br)) {
             iattributeinstance.removeModifier(field_110190_br);
         }
 
-        if (this.randomSoundDelay > 0 && --this.randomSoundDelay == 0)
-        {
+        if (this.randomSoundDelay > 0 && --this.randomSoundDelay == 0) {
             this.playSound("mob.zombiepig.zpigangry", this.getSoundVolume() * 2.0F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F) * 1.8F);
         }
 
-        if (this.angerLevel > 0 && this.field_175459_bn != null && this.getAITarget() == null)
-        {
+        if (this.angerLevel > 0 && this.field_175459_bn != null && this.getAITarget() == null) {
             EntityPlayer entityplayer = this.worldObj.getPlayerEntityByUUID(this.field_175459_bn);
             this.setRevengeTarget(entityplayer);
             this.attackingPlayer = entityplayer;
@@ -97,63 +97,49 @@
         super.updateAITasks();
     }
 
-    public boolean getCanSpawnHere()
-    {
+    public boolean getCanSpawnHere() {
         return this.worldObj.getDifficulty() != EnumDifficulty.PEACEFUL;
     }
 
-    public boolean handleLavaMovement()
-    {
+    public boolean handleLavaMovement() {
         return this.worldObj.checkNoEntityCollision(this.getEntityBoundingBox(), this) && this.worldObj.getCollidingBoundingBoxes(this, this.getEntityBoundingBox()).isEmpty() && !this.worldObj.isAnyLiquid(this.getEntityBoundingBox());
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
-        tagCompound.setShort("Anger", (short)this.angerLevel);
+        tagCompound.setShort("Anger", (short) this.angerLevel);
 
-        if (this.field_175459_bn != null)
-        {
+        if (this.field_175459_bn != null) {
             tagCompound.setString("HurtBy", this.field_175459_bn.toString());
-        }
-        else
-        {
+        } else {
             tagCompound.setString("HurtBy", "");
         }
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.angerLevel = tagCompund.getShort("Anger");
         String s = tagCompund.getString("HurtBy");
 
-        if (s.length() > 0)
-        {
+        if (s.length() > 0) {
             this.field_175459_bn = UUID.fromString(s);
             EntityPlayer entityplayer = this.worldObj.getPlayerEntityByUUID(this.field_175459_bn);
             this.setRevengeTarget(entityplayer);
 
-            if (entityplayer != null)
-            {
+            if (entityplayer != null) {
                 this.attackingPlayer = entityplayer;
                 this.recentlyHit = this.getRevengeTimer();
             }
         }
     }
 
-    public boolean attackEntityFrom(DamageSource source, float amount)
-    {
-        if (this.isEntityInvulnerable(source))
-        {
+    public boolean attackEntityFrom(DamageSource source, float amount) {
+        if (this.isEntityInvulnerable(source)) {
             return false;
-        }
-        else
-        {
+        } else {
             Entity entity = source.getEntity();
 
-            if (entity instanceof EntityPlayer)
-            {
+            if (entity instanceof EntityPlayer) {
                 this.becomeAngryAt(entity);
             }
 
@@ -161,110 +161,91 @@
         }
     }
 
-    private void becomeAngryAt(Entity p_70835_1_)
-    {
+    private void becomeAngryAt(Entity p_70835_1_) {
         this.angerLevel = 400 + this.rand.nextInt(400);
         this.randomSoundDelay = this.rand.nextInt(40);
 
-        if (p_70835_1_ instanceof EntityLivingBase)
-        {
-            this.setRevengeTarget((EntityLivingBase)p_70835_1_);
+        if (p_70835_1_ instanceof EntityLivingBase) {
+            this.setRevengeTarget((EntityLivingBase) p_70835_1_);
         }
     }
 
-    public boolean isAngry()
-    {
+    public boolean isAngry() {
         return this.angerLevel > 0;
     }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return "mob.zombiepig.zpig";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.zombiepig.zpighurt";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.zombiepig.zpigdeath";
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
         int j = this.rand.nextInt(2 + p_70628_2_);
         int k;
 
-        for (k = 0; k < j; ++k)
-        {
+        for (k = 0; k < j; ++k) {
             this.dropItem(Items.rotten_flesh, 1);
         }
 
         j = this.rand.nextInt(2 + p_70628_2_);
 
-        for (k = 0; k < j; ++k)
-        {
+        for (k = 0; k < j; ++k) {
             this.dropItem(Items.gold_nugget, 1);
         }
     }
 
-    public boolean interact(EntityPlayer player)
-    {
+    public boolean interact(EntityPlayer player) {
         return false;
     }
 
-    protected void addRandomArmor()
-    {
+    protected void addRandomArmor() {
         this.dropItem(Items.gold_ingot, 1);
     }
 
-    protected void func_180481_a(DifficultyInstance p_180481_1_)
-    {
+    protected void func_180481_a(DifficultyInstance p_180481_1_) {
         this.setCurrentItemOrArmor(0, new ItemStack(Items.golden_sword));
     }
 
-    public IEntityLivingData func_180482_a(DifficultyInstance p_180482_1_, IEntityLivingData p_180482_2_)
-    {
+    public IEntityLivingData func_180482_a(DifficultyInstance p_180482_1_, IEntityLivingData p_180482_2_) {
         super.func_180482_a(p_180482_1_, p_180482_2_);
         this.setVillager(false);
         return p_180482_2_;
     }
 
-    class AIHurtByAggressor extends EntityAIHurtByTarget
-    {
+    class AIHurtByAggressor extends EntityAIHurtByTarget {
+
         private static final String __OBFID = "CL_00002206";
 
-        public AIHurtByAggressor()
-        {
+        public AIHurtByAggressor() {
             super(EntityPigZombie.this, true, new Class[0]);
         }
 
-        protected void func_179446_a(EntityCreature p_179446_1_, EntityLivingBase p_179446_2_)
-        {
+        protected void func_179446_a(EntityCreature p_179446_1_, EntityLivingBase p_179446_2_) {
             super.func_179446_a(p_179446_1_, p_179446_2_);
 
-            if (p_179446_1_ instanceof EntityPigZombie)
-            {
-                ((EntityPigZombie)p_179446_1_).becomeAngryAt(p_179446_2_);
+            if (p_179446_1_ instanceof EntityPigZombie) {
+                ((EntityPigZombie) p_179446_1_).becomeAngryAt(p_179446_2_);
             }
         }
     }
 
-    class AITargetAggressor extends EntityAINearestAttackableTarget
-    {
+    class AITargetAggressor extends EntityAINearestAttackableTarget {
+
         private static final String __OBFID = "CL_00002207";
 
-        public AITargetAggressor()
-        {
+        public AITargetAggressor() {
             super(EntityPigZombie.this, EntityPlayer.class, true);
         }
 
-        public boolean shouldExecute()
-        {
-            return ((EntityPigZombie)this.taskOwner).isAngry() && super.shouldExecute();
+        public boolean shouldExecute() {
+            return ((EntityPigZombie) this.taskOwner).isAngry() && super.shouldExecute();
         }
     }
-}
+}
