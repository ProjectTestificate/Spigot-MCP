--- decompiled\net\minecraft\entity\monster\EntityZombie.java
+++ src\main\java\net\minecraft\entity\monster\EntityZombie.java
@@ -1,10 +1,11 @@
 package net.minecraft.entity.monster;
 
 import java.util.Calendar;
 import java.util.List;
 import java.util.UUID;
+
 import net.minecraft.block.Block;
 import net.minecraft.command.IEntitySelector;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
@@ -34,29 +35,34 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.pathfinding.PathNavigateGround;
 import net.minecraft.potion.Potion;
 import net.minecraft.potion.PotionEffect;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+
 public class EntityZombie extends EntityMob
 {
+
     protected static final IAttribute reinforcementChance = (new RangedAttribute((IAttribute)null, "zombie.spawnReinforcements", 0.0D, 0.0D, 1.0D)).setDescription("Spawn Reinforcements Chance");
     private static final UUID babySpeedBoostUUID = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
     private static final AttributeModifier babySpeedBoostModifier = new AttributeModifier(babySpeedBoostUUID, "Baby speed boost", 0.5D, 1);
     private final EntityAIBreakDoor breakDoor = new EntityAIBreakDoor(this);
     private int conversionTime;
     private boolean field_146076_bu = false;
     private float zombieWidth = -1.0F;
     private float zombieHeight;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
     private static final String __OBFID = "CL_00001702";
 
     public EntityZombie(World worldIn)
     {
         super(worldIn);
@@ -72,16 +78,21 @@
         this.setSize(0.6F, 1.95F);
     }
 
     protected void applyEntityAI()
     {
-        this.tasks.addTask(4, new EntityAIAttackOnCollide(this, EntityVillager.class, 1.0D, true));
+        if (worldObj.spigotConfig.zombieAggressiveTowardsVillager)
+            this.tasks.addTask(4, new EntityAIAttackOnCollide(this, EntityVillager.class, 1.0D, true)); // Spigot
+
         this.tasks.addTask(4, new EntityAIAttackOnCollide(this, EntityIronGolem.class, 1.0D, true));
         this.tasks.addTask(6, new EntityAIMoveThroughVillage(this, 1.0D, false));
         this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, true, new Class[] {EntityPigZombie.class}));
         this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, true));
-        this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityVillager.class, false));
+
+        if (worldObj.spigotConfig.zombieAggressiveTowardsVillager)
+            this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityVillager.class, false)); // Spigot
+
         this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityIronGolem.class, true));
     }
 
     protected void applyEntityAttributes()
     {
@@ -205,11 +216,20 @@
                     flag = false;
                 }
 
                 if (flag)
                 {
-                    this.setFire(8);
+                    // CraftBukkit start
+                    EntityCombustEvent event = new EntityCombustEvent(this.getBukkitEntity(), 8);
+                    this.worldObj.getServer().getPluginManager().callEvent(event);
+
+                    if (!event.isCancelled())
+                    {
+                        this.setFire(event.getDuration());
+                    }
+
+                    // CraftBukkit end
                 }
             }
         }
 
         if (this.isRiding() && this.getAttackTarget() != null && this.ridingEntity instanceof EntityChicken)
@@ -248,11 +268,11 @@
                     {
                         entityzombie.setPosition((double)i1, (double)j1, (double)k1);
 
                         if (!this.worldObj.func_175636_b((double)i1, (double)j1, (double)k1, 7.0D) && this.worldObj.checkNoEntityCollision(entityzombie.getEntityBoundingBox(), entityzombie) && this.worldObj.getCollidingBoundingBoxes(entityzombie, entityzombie.getEntityBoundingBox()).isEmpty() && !this.worldObj.isAnyLiquid(entityzombie.getEntityBoundingBox()))
                         {
-                            this.worldObj.spawnEntityInWorld(entityzombie);
+                            this.worldObj.addEntity(entityzombie, CreatureSpawnEvent.SpawnReason.REINFORCEMENTS); // CraftBukkit
                             entityzombie.setAttackTarget(entitylivingbase);
                             entityzombie.func_180482_a(this.worldObj.getDifficultyForLocation(new BlockPos(entityzombie)), (IEntityLivingData)null);
                             this.getEntityAttribute(reinforcementChance).applyModifier(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, 0));
                             entityzombie.getEntityAttribute(reinforcementChance).applyModifier(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, 0));
                             break;
@@ -272,10 +292,15 @@
     public void onUpdate()
     {
         if (!this.worldObj.isRemote && this.isConverting())
         {
             int i = this.getConversionTimeBoost();
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            this.lastTick = MinecraftServer.currentTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
             this.conversionTime -= i;
 
             if (this.conversionTime <= 0)
             {
                 this.convertToVillager();
@@ -293,11 +318,20 @@
         {
             int i = this.worldObj.getDifficulty().getDifficultyId();
 
             if (this.getHeldItem() == null && this.isBurning() && this.rand.nextFloat() < (float)i * 0.3F)
             {
-                p_70652_1_.setFire(2 * i);
+                // CraftBukkit start
+                EntityCombustByEntityEvent event = new EntityCombustByEntityEvent(this.getBukkitEntity(), p_70652_1_.getBukkitEntity(), 2 * i);
+                this.worldObj.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled())
+                {
+                    p_70652_1_.setFire(event.getDuration());
+                }
+
+                // CraftBukkit end
             }
         }
 
         return flag;
     }
@@ -426,11 +460,11 @@
             if (entityLivingIn.isChild())
             {
                 entityzombie.setChild(true);
             }
 
-            this.worldObj.spawnEntityInWorld(entityzombie);
+            this.worldObj.addEntity(entityzombie, CreatureSpawnEvent.SpawnReason.INFECTION); // CraftBukkit - add SpawnReason);
             this.worldObj.playAuxSFXAtEntity((EntityPlayer)null, 1016, new BlockPos((int)this.posX, (int)this.posY, (int)this.posZ), 0);
         }
     }
 
     public float getEyeHeight()
@@ -566,28 +600,12 @@
         this.removePotionEffect(Potion.weakness.id);
         this.addPotionEffect(new PotionEffect(Potion.damageBoost.id, p_82228_1_, Math.min(this.worldObj.getDifficulty().getDifficultyId() - 1, 0)));
         this.worldObj.setEntityState(this, (byte)16);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
+    public boolean canDespawn()   // SpigotMCP -- Make public as bukkit assumes in same package
     {
-        if (p_70103_1_ == 16)
-        {
-            if (!this.isSilent())
-            {
-                this.worldObj.playSound(this.posX + 0.5D, this.posY + 0.5D, this.posZ + 0.5D, "mob.zombie.remedy", 1.0F + this.rand.nextFloat(), this.rand.nextFloat() * 0.7F + 0.3F, false);
-            }
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
-    protected boolean canDespawn()
-    {
         return !this.isConverting();
     }
 
     public boolean isConverting()
     {
@@ -605,11 +623,11 @@
         {
             entityvillager.setGrowingAge(-24000);
         }
 
         this.worldObj.removeEntity(this);
-        this.worldObj.spawnEntityInWorld(entityvillager);
+        this.worldObj.addEntity(entityvillager, CreatureSpawnEvent.SpawnReason.CURED); // CraftBukkit - add SpawnReason
         entityvillager.addPotionEffect(new PotionEffect(Potion.confusion.id, 200, 0));
         this.worldObj.playAuxSFXAtEntity((EntityPlayer)null, 1017, new BlockPos((int)this.posX, (int)this.posY, (int)this.posZ), 0);
     }
 
     protected int getConversionTimeBoost()
@@ -648,11 +666,12 @@
     public void setChildSize(boolean isChild)
     {
         this.multiplySize(isChild ? 0.5F : 1.0F);
     }
 
-    protected final void setSize(float width, float height)
+    // PAIL: Access + rename please
+    public final void setSize(float width, float height) // CraftBukkit - protected to public
     {
         boolean flag = this.zombieWidth > 0.0F && this.zombieHeight > 0.0F;
         this.zombieWidth = width;
         this.zombieHeight = height;
 
@@ -683,10 +702,11 @@
         }
     }
 
     class GroupData implements IEntityLivingData
     {
+
         public boolean field_142048_a;
         public boolean field_142046_b;
         private static final String __OBFID = "CL_00001704";
 
         private GroupData(boolean p_i2348_2_, boolean p_i2348_3_)
