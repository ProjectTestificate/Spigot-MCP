--- decompiled\net\minecraft\entity\monster\EntityCreeper.java
+++ src\main\java\net\minecraft\entity\monster\EntityCreeper.java
@@ -1,8 +1,7 @@
 package net.minecraft.entity.monster;
 
-import com.google.common.base.Predicate;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.EntityAIAttackOnCollide;
 import net.minecraft.entity.ai.EntityAIAvoidEntity;
 import net.minecraft.entity.ai.EntityAICreeperSwell;
@@ -19,20 +18,25 @@
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.DamageSource;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+
+import com.google.common.base.Predicate;
+
 public class EntityCreeper extends EntityMob
 {
+
     private int lastActiveTime;
     private int timeSinceIgnited;
     private int fuseTime = 30;
     private int explosionRadius = 3;
     private int field_175494_bm = 0;
+    private int record = -1; // CraftBukkit
     private static final String __OBFID = "CL_00001684";
 
     public EntityCreeper(World worldIn)
     {
         super(worldIn);
@@ -169,42 +173,55 @@
         return "mob.creeper.death";
     }
 
     public void onDeath(DamageSource cause)
     {
-        super.onDeath(cause);
-
+        // super.onDeath(cause); // CraftBukkit - Moved to end
         if (cause.getEntity() instanceof EntitySkeleton)
         {
             int i = Item.getIdFromItem(Items.record_13);
             int j = Item.getIdFromItem(Items.record_wait);
             int k = i + this.rand.nextInt(j - i + 1);
-            this.dropItem(Item.getItemById(k), 1);
+            // CraftBukkit start - Store record for now, drop in dropDeathLoot
+            // this.dropItem(Item.getItemById(k), 1);
+            this.record = k;
+            // CraftBukkit end
         }
         else if (cause.getEntity() instanceof EntityCreeper && cause.getEntity() != this && ((EntityCreeper)cause.getEntity()).getPowered() && ((EntityCreeper)cause.getEntity()).isAIEnabled())
         {
             ((EntityCreeper)cause.getEntity()).func_175493_co();
             this.entityDropItem(new ItemStack(Items.skull, 1, 4), 0.0F);
         }
+
+        super.onDeath(cause); // CraftBukkit - Moved from above
     }
 
+    // CraftBukkit start - Whole method
+    @Override
+    protected void dropFewItems(boolean flag, int i)
+    {
+        super.dropFewItems(flag, i);
+
+        // Drop a music disc?
+        if (this.record != -1)
+        {
+            this.dropItem(Item.getItemById(this.record), 1);
+            this.record = -1;
+        }
+    }
+    // CraftBukkit end
+
     public boolean attackEntityAsMob(Entity p_70652_1_)
     {
         return true;
     }
 
     public boolean getPowered()
     {
         return this.dataWatcher.getWatchableObjectByte(17) == 1;
     }
 
-    @SideOnly(Side.CLIENT)
-    public float getCreeperFlashIntensity(float p_70831_1_)
-    {
-        return ((float)this.lastActiveTime + (float)(this.timeSinceIgnited - this.lastActiveTime) * p_70831_1_) / (float)(this.fuseTime - 2);
-    }
-
     protected Item getDropItem()
     {
         return Items.gunpowder;
     }
 
@@ -219,13 +236,34 @@
     }
 
     public void onStruckByLightning(EntityLightningBolt lightningBolt)
     {
         super.onStruckByLightning(lightningBolt);
-        this.dataWatcher.updateObject(17, Byte.valueOf((byte)1));
+
+        // CraftBukkit start
+        if (CraftEventFactory.callCreeperPowerEvent(this, lightningBolt, org.bukkit.event.entity.CreeperPowerEvent.PowerCause.LIGHTNING).isCancelled())
+        {
+            return;
+        }
+
+        this.setPowered(true);
     }
 
+    public void setPowered(boolean powered)
+    {
+        if (!powered)
+        {
+            this.dataWatcher.updateObject(17, Byte.valueOf((byte)0));
+        }
+        else
+        {
+            this.dataWatcher.updateObject(17, Byte.valueOf((byte)1));
+        }
+
+        // CraftBukkit end
+    }
+
     protected boolean interact(EntityPlayer player)
     {
         ItemStack itemstack = player.inventory.getCurrentItem();
 
         if (itemstack != null && itemstack.getItem() == Items.flint_and_steel)
@@ -248,12 +286,25 @@
     {
         if (!this.worldObj.isRemote)
         {
             boolean flag = this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing");
             float f = this.getPowered() ? 2.0F : 1.0F;
-            this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius * f, flag);
-            this.setDead();
+            // CraftBukkit Start // SpigotMCP -- Add missing 'CraftBukkit Start'
+            ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), this.explosionRadius * f, false);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled())
+            {
+                this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, event.getRadius(), event.getFire(), flag);
+                this.setDead();
+            }
+            else
+            {
+                timeSinceIgnited = 0;
+            }
+
+            // CraftBukkit end
         }
     }
 
     public boolean func_146078_ca()
     {
