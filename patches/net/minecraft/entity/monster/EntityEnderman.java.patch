---a/net/minecraft/entity/monster/EntityEnderman.java
+++b/net/minecraft/entity/monster/EntityEnderman.java
@@ -1,14 +1,10 @@
 package net.minecraft.entity.monster;
 
-import com.google.common.base.Predicate;
-import com.google.common.collect.Sets;
 import java.util.Collections;
 import java.util.List;
 import java.util.Random;
 import java.util.Set;
 import java.util.UUID;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -39,16 +39,28 @@
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
 
-public class EntityEnderman extends EntityMob
-{
+import org.bukkit.Location;
+import org.bukkit.event.entity.EntityTeleportEvent;
+
+import com.google.common.base.Predicate;
+import com.google.common.collect.Sets;
+
+public class EntityEnderman extends EntityMob {
+
     private static final UUID attackingSpeedBoostModifierUUID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
     private static final AttributeModifier attackingSpeedBoostModifier = (new AttributeModifier(attackingSpeedBoostModifierUUID, "Attacking speed boost", 0.15000000596046448D, 0)).setSaved(false);
     private static final Set carriableBlocks = Sets.newIdentityHashSet();
     private boolean isAggressive;
     private static final String __OBFID = "CL_00001685";
 
-    public EntityEnderman(World worldIn)
-    {
+    public EntityEnderman(World worldIn) {
         super(worldIn);
         this.setSize(0.6F, 2.9F);
         this.stepHeight = 1.0F;
@@ -61,22 +61,22 @@
         this.tasks.addTask(11, new EntityEnderman.AITakeBlock());
         this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, false, new Class[0]));
         this.targetTasks.addTask(2, new EntityEnderman.AIFindPlayer());
-        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityEndermite.class, 10, true, false, new Predicate()
-        {
+        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityEndermite.class, 10, true, false, new Predicate() {
+
             private static final String __OBFID = "CL_00002223";
-            public boolean func_179948_a(EntityEndermite p_179948_1_)
-            {
+
+            public boolean func_179948_a(EntityEndermite p_179948_1_) {
                 return p_179948_1_.isSpawnedByPlayer();
             }
-            public boolean apply(Object p_apply_1_)
-            {
-                return this.func_179948_a((EntityEndermite)p_apply_1_);
+
+            public boolean apply(Object p_apply_1_) {
+                return this.func_179948_a((EntityEndermite) p_apply_1_);
             }
         }));
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(40.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.30000001192092896D);
@@ -84,52 +84,41 @@
         this.getEntityAttribute(SharedMonsterAttributes.followRange).setBaseValue(64.0D);
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
-        this.dataWatcher.addObject(16, new Short((short)0));
-        this.dataWatcher.addObject(17, new Byte((byte)0));
-        this.dataWatcher.addObject(18, new Byte((byte)0));
+        this.dataWatcher.addObject(16, new Short((short) 0));
+        this.dataWatcher.addObject(17, new Byte((byte) 0));
+        this.dataWatcher.addObject(18, new Byte((byte) 0));
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         IBlockState iblockstate = this.func_175489_ck();
-        tagCompound.setShort("carried", (short)Block.getIdFromBlock(iblockstate.getBlock()));
-        tagCompound.setShort("carriedData", (short)iblockstate.getBlock().getMetaFromState(iblockstate));
+        tagCompound.setShort("carried", (short) Block.getIdFromBlock(iblockstate.getBlock()));
+        tagCompound.setShort("carriedData", (short) iblockstate.getBlock().getMetaFromState(iblockstate));
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         IBlockState iblockstate;
 
-        if (tagCompund.hasKey("carried", 8))
-        {
+        if (tagCompund.hasKey("carried", 8)) {
             iblockstate = Block.getBlockFromName(tagCompund.getString("carried")).getStateFromMeta(tagCompund.getShort("carriedData") & 65535);
-        }
-        else
-        {
+        } else {
             iblockstate = Block.getBlockById(tagCompund.getShort("carried")).getStateFromMeta(tagCompund.getShort("carriedData") & 65535);
         }
 
         this.func_175490_a(iblockstate);
     }
 
-    private boolean shouldAttackPlayer(EntityPlayer p_70821_1_)
-    {
+    private boolean shouldAttackPlayer(EntityPlayer p_70821_1_) {
         ItemStack itemstack = p_70821_1_.inventory.armorInventory[3];
 
-        if (itemstack != null && itemstack.getItem() == Item.getItemFromBlock(Blocks.pumpkin))
-        {
+        if (itemstack != null && itemstack.getItem() == Item.getItemFromBlock(Blocks.pumpkin)) {
             return false;
-        }
-        else
-        {
+        } else {
             Vec3 vec3 = p_70821_1_.getLook(1.0F).normalize();
-            Vec3 vec31 = new Vec3(this.posX - p_70821_1_.posX, this.getEntityBoundingBox().minY + (double)(this.height / 2.0F) - (p_70821_1_.posY + (double)p_70821_1_.getEyeHeight()), this.posZ - p_70821_1_.posZ);
+            Vec3 vec31 = new Vec3(this.posX - p_70821_1_.posX, this.getEntityBoundingBox().minY + (double) (this.height / 2.0F) - (p_70821_1_.posY + (double) p_70821_1_.getEyeHeight()), this.posZ - p_70821_1_.posZ);
             double d0 = vec31.lengthVector();
             vec31 = vec31.normalize();
             double d1 = vec3.dotProduct(vec31);
@@ -136,13 +136,11 @@
         }
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return 2.55F;
     }
 
-    public void onLivingUpdate()
-    {
-        if (this.worldObj.isRemote)
-        {
-            for (int i = 0; i < 2; ++i)
-            {
-                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, this.posX + (this.rand.nextDouble() - 0.5D) * (double)this.width, this.posY + this.rand.nextDouble() * (double)this.height - 0.25D, this.posZ + (this.rand.nextDouble() - 0.5D) * (double)this.width, (this.rand.nextDouble() - 0.5D) * 2.0D, -this.rand.nextDouble(), (this.rand.nextDouble() - 0.5D) * 2.0D, new int[0]);
+    public void onLivingUpdate() {
+        if (this.worldObj.isRemote) {
+            for (int i = 0; i < 2; ++i) {
+                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, this.posX + (this.rand.nextDouble() - 0.5D) * (double) this.width, this.posY + this.rand.nextDouble() * (double) this.height - 0.25D, this.posZ + (this.rand.nextDouble() - 0.5D) * (double) this.width, (this.rand.nextDouble() - 0.5D) * 2.0D, -this.rand.nextDouble(), (this.rand.nextDouble() - 0.5D) * 2.0D, new int[0]);
             }
         }
 
@@ -155,26 +155,20 @@
         super.onLivingUpdate();
     }
 
-    protected void updateAITasks()
-    {
-        if (this.isWet())
-        {
+    protected void updateAITasks() {
+        if (this.isWet()) {
             this.attackEntityFrom(DamageSource.drown, 1.0F);
         }
 
-        if (this.isScreaming() && !this.isAggressive && this.rand.nextInt(100) == 0)
-        {
+        if (this.isScreaming() && !this.isAggressive && this.rand.nextInt(100) == 0) {
             this.setScreaming(false);
         }
 
-        if (this.worldObj.isDaytime())
-        {
+        if (this.worldObj.isDaytime()) {
             float f = this.getBrightness(1.0F);
 
-            if (f > 0.5F && this.worldObj.canSeeSky(new BlockPos(this)) && this.rand.nextFloat() * 30.0F < (f - 0.4F) * 2.0F)
-            {
-                this.setAttackTarget((EntityLivingBase)null);
+            if (f > 0.5F && this.worldObj.canSeeSky(new BlockPos(this)) && this.rand.nextFloat() * 30.0F < (f - 0.4F) * 2.0F) {
+                this.setAttackTarget((EntityLivingBase) null);
                 this.setScreaming(false);
                 this.isAggressive = false;
                 this.teleportRandomly();
@@ -183,27 +183,24 @@
         super.updateAITasks();
     }
 
-    protected boolean teleportRandomly()
-    {
+    protected boolean teleportRandomly() {
         double d0 = this.posX + (this.rand.nextDouble() - 0.5D) * 64.0D;
-        double d1 = this.posY + (double)(this.rand.nextInt(64) - 32);
+        double d1 = this.posY + (double) (this.rand.nextInt(64) - 32);
         double d2 = this.posZ + (this.rand.nextDouble() - 0.5D) * 64.0D;
         return this.teleportTo(d0, d1, d2);
     }
 
-    protected boolean teleportToEntity(Entity p_70816_1_)
-    {
-        Vec3 vec3 = new Vec3(this.posX - p_70816_1_.posX, this.getEntityBoundingBox().minY + (double)(this.height / 2.0F) - p_70816_1_.posY + (double)p_70816_1_.getEyeHeight(), this.posZ - p_70816_1_.posZ);
+    protected boolean teleportToEntity(Entity p_70816_1_) {
+        Vec3 vec3 = new Vec3(this.posX - p_70816_1_.posX, this.getEntityBoundingBox().minY + (double) (this.height / 2.0F) - p_70816_1_.posY + (double) p_70816_1_.getEyeHeight(), this.posZ - p_70816_1_.posZ);
         vec3 = vec3.normalize();
         double d0 = 16.0D;
         double d1 = this.posX + (this.rand.nextDouble() - 0.5D) * 8.0D - vec3.xCoord * d0;
-        double d2 = this.posY + (double)(this.rand.nextInt(16) - 8) - vec3.yCoord * d0;
+        double d2 = this.posY + (double) (this.rand.nextInt(16) - 8) - vec3.yCoord * d0;
         double d3 = this.posZ + (this.rand.nextDouble() - 0.5D) * 8.0D - vec3.zCoord * d0;
         return this.teleportTo(d1, d2, d3);
     }
 
-    protected boolean teleportTo(double p_70825_1_, double p_70825_3_, double p_70825_5_)
-    {
+    protected boolean teleportTo(double p_70825_1_, double p_70825_3_, double p_70825_5_) {
         double d3 = this.posX;
         double d4 = this.posY;
         double d5 = this.posZ;
@@ -213,54 +213,51 @@
         boolean flag = false;
         BlockPos blockpos = new BlockPos(this.posX, this.posY, this.posZ);
 
-        if (this.worldObj.isBlockLoaded(blockpos))
-        {
+        if (this.worldObj.isBlockLoaded(blockpos)) {
             boolean flag1 = false;
 
-            while (!flag1 && blockpos.getY() > 0)
-            {
+            while (!flag1 && blockpos.getY() > 0) {
                 BlockPos blockpos1 = blockpos.down();
                 Block block = this.worldObj.getBlockState(blockpos1).getBlock();
 
-                if (block.getMaterial().blocksMovement())
-                {
+                if (block.getMaterial().blocksMovement()) {
                     flag1 = true;
-                }
-                else
-                {
+                } else {
                     --this.posY;
                     blockpos = blockpos1;
                 }
             }
 
-            if (flag1)
-            {
-                super.setPositionAndUpdate(this.posX, this.posY, this.posZ);
+            if (flag1) {
+                // CraftBukkit start - Teleport event
+                // super.enderTeleportTo(this.locX, this.locY, this.locZ);
+                EntityTeleportEvent teleport = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.worldObj.getWorld(), d3, d4, d5), new Location(this.worldObj.getWorld(), this.posX, this.posY, this.posZ));
+                this.worldObj.getServer().getPluginManager().callEvent(teleport);
+                if (teleport.isCancelled()) {
+                    return false;
+                }
 
-                if (this.worldObj.getCollidingBoundingBoxes(this, this.getEntityBoundingBox()).isEmpty() && !this.worldObj.isAnyLiquid(this.getEntityBoundingBox()))
-                {
+                Location to = teleport.getTo();
+                this.setPositionAndUpdate(to.getX(), to.getY(), to.getZ());
+                // CraftBukkit end
+                if (this.worldObj.getCollidingBoundingBoxes(this, this.getEntityBoundingBox()).isEmpty() && !this.worldObj.isAnyLiquid(this.getEntityBoundingBox())) {
                     flag = true;
                 }
             }
         }
 
-        if (!flag)
-        {
+        if (!flag) {
             this.setPosition(d3, d4, d5);
             return false;
-        }
-        else
-        {
+        } else {
             short short1 = 128;
 
-            for (int i = 0; i < short1; ++i)
-            {
-                double d9 = (double)i / ((double)short1 - 1.0D);
+            for (int i = 0; i < short1; ++i) {
+                double d9 = (double) i / ((double) short1 - 1.0D);
                 float f = (this.rand.nextFloat() - 0.5F) * 0.2F;
                 float f1 = (this.rand.nextFloat() - 0.5F) * 0.2F;
                 float f2 = (this.rand.nextFloat() - 0.5F) * 0.2F;
-                double d6 = d3 + (this.posX - d3) * d9 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
-                double d7 = d4 + (this.posY - d4) * d9 + this.rand.nextDouble() * (double)this.height;
-                double d8 = d5 + (this.posZ - d5) * d9 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
-                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, d6, d7, d8, (double)f, (double)f1, (double)f2, new int[0]);
+                double d6 = d3 + (this.posX - d3) * d9 + (this.rand.nextDouble() - 0.5D) * (double) this.width * 2.0D;
+                double d7 = d4 + (this.posY - d4) * d9 + this.rand.nextDouble() * (double) this.height;
+                double d8 = d5 + (this.posZ - d5) * d9 + (this.rand.nextDouble() - 0.5D) * (double) this.width * 2.0D;
+                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, d6, d7, d8, (double) f, (double) f1, (double) f2, new int[0]);
             }
 
             this.worldObj.playSoundEffect(d3, d4, d5, "mob.endermen.portal", 1.0F, 1.0F);
@@ -271,84 +271,63 @@
         }
     }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return this.isScreaming() ? "mob.endermen.scream" : "mob.endermen.idle";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.endermen.hit";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.endermen.death";
     }
 
-    protected Item getDropItem()
-    {
+    protected Item getDropItem() {
         return Items.ender_pearl;
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
         Item item = this.getDropItem();
 
-        if (item != null)
-        {
+        if (item != null) {
             int j = this.rand.nextInt(2 + p_70628_2_);
 
-            for (int k = 0; k < j; ++k)
-            {
+            for (int k = 0; k < j; ++k) {
                 this.dropItem(item, 1);
             }
         }
     }
 
-    public void func_175490_a(IBlockState p_175490_1_)
-    {
-        this.dataWatcher.updateObject(16, Short.valueOf((short)(Block.getStateId(p_175490_1_) & 65535)));
+    public void func_175490_a(IBlockState p_175490_1_) {
+        this.dataWatcher.updateObject(16, Short.valueOf((short) (Block.getStateId(p_175490_1_) & 65535)));
     }
 
-    public IBlockState func_175489_ck()
-    {
+    public IBlockState func_175489_ck() {
         return Block.getStateById(this.dataWatcher.getWatchableObjectShort(16) & 65535);
     }
 
-    public boolean attackEntityFrom(DamageSource source, float amount)
-    {
-        if (this.isEntityInvulnerable(source))
-        {
+    public boolean attackEntityFrom(DamageSource source, float amount) {
+        if (this.isEntityInvulnerable(source)) {
             return false;
-        }
-        else
-        {
-            if (source.getEntity() == null || !(source.getEntity() instanceof EntityEndermite))
-            {
-                if (!this.worldObj.isRemote)
-                {
+        } else {
+            if (source.getEntity() == null || !(source.getEntity() instanceof EntityEndermite)) {
+                if (!this.worldObj.isRemote) {
                     this.setScreaming(true);
                 }
 
-                if (source instanceof EntityDamageSource && source.getEntity() instanceof EntityPlayer)
-                {
-                    if (source.getEntity() instanceof EntityPlayerMP && ((EntityPlayerMP)source.getEntity()).theItemInWorldManager.isCreative())
-                    {
+                if (source instanceof EntityDamageSource && source.getEntity() instanceof EntityPlayer) {
+                    if (source.getEntity() instanceof EntityPlayerMP && ((EntityPlayerMP) source.getEntity()).theItemInWorldManager.isCreative()) {
                         this.setScreaming(false);
-                    }
-                    else
-                    {
+                    } else {
                         this.isAggressive = true;
                     }
                 }
 
-                if (source instanceof EntityDamageSourceIndirect)
-                {
+                if (source instanceof EntityDamageSourceIndirect) {
                     this.isAggressive = false;
 
-                    for (int i = 0; i < 64; ++i)
-                    {
-                        if (this.teleportRandomly())
-                        {
+                    for (int i = 0; i < 64; ++i) {
+                        if (this.teleportRandomly()) {
                             return true;
                         }
                     }
@@ -361,8 +361,7 @@
 
             boolean flag = super.attackEntityFrom(source, amount);
 
-            if (source.isUnblockable() && this.rand.nextInt(10) != 0)
-            {
+            if (source.isUnblockable() && this.rand.nextInt(10) != 0) {
                 this.teleportRandomly();
             }
 
@@ -370,18 +370,15 @@
         }
     }
 
-    public boolean isScreaming()
-    {
+    public boolean isScreaming() {
         return this.dataWatcher.getWatchableObjectByte(18) > 0;
     }
 
-    public void setScreaming(boolean p_70819_1_)
-    {
-        this.dataWatcher.updateObject(18, Byte.valueOf((byte)(p_70819_1_ ? 1 : 0)));
+    public void setScreaming(boolean p_70819_1_) {
+        this.dataWatcher.updateObject(18, Byte.valueOf((byte) (p_70819_1_ ? 1 : 0)));
     }
 
-    static
-    {
+    static {
         carriableBlocks.add(Blocks.grass);
         carriableBlocks.add(Blocks.dirt);
         carriableBlocks.add(Blocks.sand);
@@ -398,44 +398,38 @@
         carriableBlocks.add(Blocks.mycelium);
     }
 
-    class AIFindPlayer extends EntityAINearestAttackableTarget
-    {
+    class AIFindPlayer extends EntityAINearestAttackableTarget {
+
         private EntityPlayer field_179448_g;
         private int field_179450_h;
         private int field_179451_i;
         private EntityEnderman field_179449_j = EntityEnderman.this;
         private static final String __OBFID = "CL_00002221";
 
-        public AIFindPlayer()
-        {
+        public AIFindPlayer() {
             super(EntityEnderman.this, EntityPlayer.class, true);
         }
 
-        public boolean shouldExecute()
-        {
+        public boolean shouldExecute() {
             double d0 = this.getTargetDistance();
             List list = this.taskOwner.worldObj.getEntitiesWithinAABB(EntityPlayer.class, this.taskOwner.getEntityBoundingBox().expand(d0, 4.0D, d0), this.targetEntitySelector);
             Collections.sort(list, this.theNearestAttackableTargetSorter);
 
-            if (list.isEmpty())
-            {
+            if (list.isEmpty()) {
                 return false;
-            }
-            else
-            {
-                this.field_179448_g = (EntityPlayer)list.get(0);
+            } else {
+                this.field_179448_g = (EntityPlayer) list.get(0);
                 return true;
             }
         }
 
-        public void startExecuting()
-        {
+        public void startExecuting() {
             this.field_179450_h = 5;
             this.field_179451_i = 0;
         }
 
-        public void resetTask()
-        {
+        public void resetTask() {
             this.field_179448_g = null;
             this.field_179449_j.setScreaming(false);
             IAttributeInstance iattributeinstance = this.field_179449_j.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
@@ -443,33 +443,23 @@
             super.resetTask();
         }
 
-        public boolean continueExecuting()
-        {
-            if (this.field_179448_g != null)
-            {
-                if (!this.field_179449_j.shouldAttackPlayer(this.field_179448_g))
-                {
+        public boolean continueExecuting() {
+            if (this.field_179448_g != null) {
+                if (!this.field_179449_j.shouldAttackPlayer(this.field_179448_g)) {
                     return false;
-                }
-                else
-                {
+                } else {
                     this.field_179449_j.isAggressive = true;
                     this.field_179449_j.faceEntity(this.field_179448_g, 10.0F, 10.0F);
                     return true;
                 }
-            }
-            else
-            {
+            } else {
                 return super.continueExecuting();
             }
         }
 
-        public void updateTask()
-        {
-            if (this.field_179448_g != null)
-            {
-                if (--this.field_179450_h <= 0)
-                {
+        public void updateTask() {
+            if (this.field_179448_g != null) {
+                if (--this.field_179450_h <= 0) {
                     this.targetEntity = this.field_179448_g;
                     this.field_179448_g = null;
                     super.startExecuting();
@@ -478,28 +478,18 @@
                     IAttributeInstance iattributeinstance = this.field_179449_j.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
                     iattributeinstance.applyModifier(EntityEnderman.attackingSpeedBoostModifier);
                 }
-            }
-            else
-            {
-                if (this.targetEntity != null)
-                {
-                    if (this.targetEntity instanceof EntityPlayer && this.field_179449_j.shouldAttackPlayer((EntityPlayer)this.targetEntity))
-                    {
-                        if (this.targetEntity.getDistanceSqToEntity(this.field_179449_j) < 16.0D)
-                        {
+            } else {
+                if (this.targetEntity != null) {
+                    if (this.targetEntity instanceof EntityPlayer && this.field_179449_j.shouldAttackPlayer((EntityPlayer) this.targetEntity)) {
+                        if (this.targetEntity.getDistanceSqToEntity(this.field_179449_j) < 16.0D) {
                             this.field_179449_j.teleportRandomly();
                         }
 
                         this.field_179451_i = 0;
-                    }
-                    else if (this.targetEntity.getDistanceSqToEntity(this.field_179449_j) > 256.0D && this.field_179451_i++ >= 30 && this.field_179449_j.teleportToEntity(this.targetEntity))
-                    {
+                    } else if (this.targetEntity.getDistanceSqToEntity(this.field_179449_j) > 256.0D && this.field_179451_i++ >= 30 && this.field_179449_j.teleportToEntity(this.targetEntity)) {
                         this.field_179451_i = 0;
                     }
                 }
@@ -503,18 +503,17 @@
         }
     }
 
-    class AIPlaceBlock extends EntityAIBase
-    {
+    class AIPlaceBlock extends EntityAIBase {
+
         private EntityEnderman field_179475_a = EntityEnderman.this;
         private static final String __OBFID = "CL_00002222";
 
-        public boolean shouldExecute()
-        {
+        public boolean shouldExecute() {
             return !this.field_179475_a.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing") ? false : (this.field_179475_a.func_175489_ck().getBlock().getMaterial() == Material.air ? false : this.field_179475_a.getRNG().nextInt(2000) == 0);
         }
 
-        public void updateTask()
-        {
+        public void updateTask() {
             Random random = this.field_179475_a.getRNG();
             World world = this.field_179475_a.worldObj;
             int i = MathHelper.floor_double(this.field_179475_a.posX - 1.0D + random.nextDouble() * 2.0D);
@@ -524,33 +524,37 @@
             Block block = world.getBlockState(blockpos).getBlock();
             Block block1 = world.getBlockState(blockpos.down()).getBlock();
 
-            if (this.func_179474_a(world, blockpos, this.field_179475_a.func_175489_ck().getBlock(), block, block1))
-            {
-                world.setBlockState(blockpos, this.field_179475_a.func_175489_ck(), 3);
-                this.field_179475_a.func_175490_a(Blocks.air.getDefaultState());
+            if (this.func_179474_a(world, blockpos, this.field_179475_a.func_175489_ck().getBlock(), block, block1)) {
+                // CraftBukkit start - Place event
+                if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.field_179475_a, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this.field_179475_a.func_175489_ck().getBlock(), this.field_179475_a.func_175489_ck().getBlock().getMetaFromState(this.field_179475_a.func_175489_ck())).isCancelled()) {
+                    world.setBlockState(blockpos, this.field_179475_a.func_175489_ck(), 3);
+                    this.field_179475_a.func_175490_a(Blocks.air.getDefaultState());
+                }
+                // CraftBukkit end
             }
         }
 
-        private boolean func_179474_a(World worldIn, BlockPos p_179474_2_, Block p_179474_3_, Block p_179474_4_, Block p_179474_5_)
-        {
+        private boolean func_179474_a(World worldIn, BlockPos p_179474_2_, Block p_179474_3_, Block p_179474_4_, Block p_179474_5_) {
             return !p_179474_3_.canPlaceBlockAt(worldIn, p_179474_2_) ? false : (p_179474_4_.getMaterial() != Material.air ? false : (p_179474_5_.getMaterial() == Material.air ? false : p_179474_5_.isFullCube()));
         }
     }
 
-    class AITakeBlock extends EntityAIBase
-    {
+    class AITakeBlock extends EntityAIBase {
+
         private EntityEnderman field_179473_a = EntityEnderman.this;
         private static final String __OBFID = "CL_00002220";
 
-        public boolean shouldExecute()
-        {
+        public boolean shouldExecute() {
             return !this.field_179473_a.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing") ? false : (this.field_179473_a.func_175489_ck().getBlock().getMaterial() != Material.air ? false : this.field_179473_a.getRNG().nextInt(20) == 0);
         }
 
-        public void updateTask()
-        {
+        public void updateTask() {
             Random random = this.field_179473_a.getRNG();
             World world = this.field_179473_a.worldObj;
             int i = MathHelper.floor_double(this.field_179473_a.posX - 2.0D + random.nextDouble() * 4.0D);
@@ -558,14 +558,20 @@
             IBlockState iblockstate = world.getBlockState(blockpos);
             Block block = iblockstate.getBlock();
 
-            if (EntityEnderman.carriableBlocks.contains(block))
-            {
-                this.field_179473_a.func_175490_a(iblockstate);
-                world.setBlockState(blockpos, Blocks.air.getDefaultState());
+            if (EntityEnderman.carriableBlocks.contains(block)) {
+                // CraftBukkit start - Pickup event
+                if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(this.field_179473_a, this.field_179473_a.worldObj.getWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ()), org.bukkit.Material.AIR).isCancelled()) {
+                    this.field_179473_a.func_175490_a(iblockstate);
+                    world.setBlockState(blockpos, Blocks.air.getDefaultState());
+                }
+                // CraftBukkit end
             }
         }
     }
-}
+}
