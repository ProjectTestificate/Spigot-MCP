--- decompiled\net\minecraft\entity\monster\EntityIronGolem.java
+++ src\main\java\net\minecraft\entity\monster\EntityIronGolem.java
@@ -1,8 +1,7 @@
 package net.minecraft.entity.monster;
 
-import com.google.common.base.Predicate;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockFlower;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
@@ -31,26 +30,25 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.village.Village;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntityIronGolem extends EntityGolem
-{
+import com.google.common.base.Predicate;
+
+public class EntityIronGolem extends EntityGolem {
+
     private int homeCheckTimer;
     Village villageObj;
     private int attackTimer;
     private int holdRoseTick;
     private static final String __OBFID = "CL_00001652";
 
-    public EntityIronGolem(World worldIn)
-    {
+    public EntityIronGolem(World worldIn) {
         super(worldIn);
         this.setSize(1.4F, 2.9F);
-        ((PathNavigateGround)this.getNavigator()).func_179690_a(true);
+        ((PathNavigateGround) this.getNavigator()).func_179690_a(true);
         this.tasks.addTask(1, new EntityAIAttackOnCollide(this, 1.0D, true));
         this.tasks.addTask(2, new EntityAIMoveTowardsTarget(this, 0.9D, 32.0F));
         this.tasks.addTask(3, new EntityAIMoveThroughVillage(this, 0.6D, true));
         this.tasks.addTask(4, new EntityAIMoveTowardsRestriction(this, 1.0D));
         this.tasks.addTask(5, new EntityAILookAtVillager(this));
@@ -60,278 +58,207 @@
         this.targetTasks.addTask(1, new EntityAIDefendVillage(this));
         this.targetTasks.addTask(2, new EntityAIHurtByTarget(this, false, new Class[0]));
         this.targetTasks.addTask(3, new EntityIronGolem.AINearestAttackableTargetNonCreeper(this, EntityLiving.class, 10, false, true, IMob.field_175450_e));
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
-        this.dataWatcher.addObject(16, Byte.valueOf((byte)0));
+        this.dataWatcher.addObject(16, Byte.valueOf((byte) 0));
     }
 
-    protected void updateAITasks()
-    {
-        if (--this.homeCheckTimer <= 0)
-        {
+    protected void updateAITasks() {
+        if (--this.homeCheckTimer <= 0) {
             this.homeCheckTimer = 70 + this.rand.nextInt(50);
             this.villageObj = this.worldObj.getVillageCollection().getNearestVillage(new BlockPos(this), 32);
 
-            if (this.villageObj == null)
-            {
+            if (this.villageObj == null) {
                 this.detachHome();
-            }
-            else
-            {
+            } else {
                 BlockPos blockpos = this.villageObj.getCenter();
-                this.func_175449_a(blockpos, (int)((float)this.villageObj.getVillageRadius() * 0.6F));
+                this.func_175449_a(blockpos, (int) ((float) this.villageObj.getVillageRadius() * 0.6F));
             }
         }
 
         super.updateAITasks();
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(100.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.25D);
     }
 
-    protected int decreaseAirSupply(int p_70682_1_)
-    {
+    protected int decreaseAirSupply(int p_70682_1_) {
         return p_70682_1_;
     }
 
-    protected void collideWithEntity(Entity p_82167_1_)
-    {
-        if (p_82167_1_ instanceof IMob && this.getRNG().nextInt(20) == 0)
-        {
-            this.setAttackTarget((EntityLivingBase)p_82167_1_);
+    protected void collideWithEntity(Entity p_82167_1_) {
+        if (p_82167_1_ instanceof IMob && this.getRNG().nextInt(20) == 0) {
+            this.setGoalTarget((EntityLivingBase) p_82167_1_, org.bukkit.event.entity.EntityTargetLivingEntityEvent.TargetReason.COLLISION, true); // CraftBukkit - set reason);
         }
 
         super.collideWithEntity(p_82167_1_);
     }
 
-    public void onLivingUpdate()
-    {
+    public void onLivingUpdate() {
         super.onLivingUpdate();
 
-        if (this.attackTimer > 0)
-        {
+        if (this.attackTimer > 0) {
             --this.attackTimer;
         }
 
-        if (this.holdRoseTick > 0)
-        {
+        if (this.holdRoseTick > 0) {
             --this.holdRoseTick;
         }
 
-        if (this.motionX * this.motionX + this.motionZ * this.motionZ > 2.500000277905201E-7D && this.rand.nextInt(5) == 0)
-        {
+        if (this.motionX * this.motionX + this.motionZ * this.motionZ > 2.500000277905201E-7D && this.rand.nextInt(5) == 0) {
             int i = MathHelper.floor_double(this.posX);
             int j = MathHelper.floor_double(this.posY - 0.20000000298023224D);
             int k = MathHelper.floor_double(this.posZ);
             IBlockState iblockstate = this.worldObj.getBlockState(new BlockPos(i, j, k));
             Block block = iblockstate.getBlock();
 
-            if (block.getMaterial() != Material.air)
-            {
-                this.worldObj.spawnParticle(EnumParticleTypes.BLOCK_CRACK, this.posX + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, this.getEntityBoundingBox().minY + 0.1D, this.posZ + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, 4.0D * ((double)this.rand.nextFloat() - 0.5D), 0.5D, ((double)this.rand.nextFloat() - 0.5D) * 4.0D, new int[] {Block.getStateId(iblockstate)});
+            if (block.getMaterial() != Material.air) {
+                this.worldObj.spawnParticle(EnumParticleTypes.BLOCK_CRACK, this.posX + ((double) this.rand.nextFloat() - 0.5D) * (double) this.width, this.getEntityBoundingBox().minY + 0.1D, this.posZ + ((double) this.rand.nextFloat() - 0.5D) * (double) this.width, 4.0D * ((double) this.rand.nextFloat() - 0.5D), 0.5D, ((double) this.rand.nextFloat() - 0.5D) * 4.0D, new int[]{Block.getStateId(iblockstate)});
             }
         }
     }
 
-    public boolean canAttackClass(Class p_70686_1_)
-    {
+    public boolean canAttackClass(Class p_70686_1_) {
         return this.isPlayerCreated() && EntityPlayer.class.isAssignableFrom(p_70686_1_) ? false : super.canAttackClass(p_70686_1_);
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         tagCompound.setBoolean("PlayerCreated", this.isPlayerCreated());
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.setPlayerCreated(tagCompund.getBoolean("PlayerCreated"));
     }
 
-    public boolean attackEntityAsMob(Entity p_70652_1_)
-    {
+    public boolean attackEntityAsMob(Entity p_70652_1_) {
         this.attackTimer = 10;
-        this.worldObj.setEntityState(this, (byte)4);
-        boolean flag = p_70652_1_.attackEntityFrom(DamageSource.causeMobDamage(this), (float)(7 + this.rand.nextInt(15)));
+        this.worldObj.setEntityState(this, (byte) 4);
+        boolean flag = p_70652_1_.attackEntityFrom(DamageSource.causeMobDamage(this), (float) (7 + this.rand.nextInt(15)));
 
-        if (flag)
-        {
+        if (flag) {
             p_70652_1_.motionY += 0.4000000059604645D;
             this.func_174815_a(this, p_70652_1_);
         }
 
         this.playSound("mob.irongolem.throw", 1.0F, 1.0F);
         return flag;
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 4)
-        {
-            this.attackTimer = 10;
-            this.playSound("mob.irongolem.throw", 1.0F, 1.0F);
-        }
-        else if (p_70103_1_ == 11)
-        {
-            this.holdRoseTick = 400;
-        }
-        else
-        {
-            super.handleHealthUpdate(p_70103_1_);
-        }
-    }
-
-    public Village getVillage()
-    {
+    public Village getVillage() {
         return this.villageObj;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getAttackTimer()
-    {
-        return this.attackTimer;
-    }
-
-    public void setHoldingRose(boolean p_70851_1_)
-    {
+    public void setHoldingRose(boolean p_70851_1_) {
         this.holdRoseTick = p_70851_1_ ? 400 : 0;
-        this.worldObj.setEntityState(this, (byte)11);
+        this.worldObj.setEntityState(this, (byte) 11);
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.irongolem.hit";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.irongolem.death";
     }
 
-    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_)
-    {
+    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_) {
         this.playSound("mob.irongolem.walk", 1.0F, 1.0F);
     }
 
-    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_)
-    {
+    protected void dropFewItems(boolean p_70628_1_, int p_70628_2_) {
         int j = this.rand.nextInt(3);
         int k;
 
-        for (k = 0; k < j; ++k)
-        {
-            this.dropItemWithOffset(Item.getItemFromBlock(Blocks.red_flower), 1, (float)BlockFlower.EnumFlowerType.POPPY.getMeta());
+        for (k = 0; k < j; ++k) {
+            this.dropItemWithOffset(Item.getItemFromBlock(Blocks.red_flower), 1, (float) BlockFlower.EnumFlowerType.POPPY.getMeta());
         }
 
         k = 3 + this.rand.nextInt(3);
 
-        for (int l = 0; l < k; ++l)
-        {
+        for (int l = 0; l < k; ++l) {
             this.dropItem(Items.iron_ingot, 1);
         }
     }
 
-    public int getHoldRoseTick()
-    {
+    public int getHoldRoseTick() {
         return this.holdRoseTick;
     }
 
-    public boolean isPlayerCreated()
-    {
+    public boolean isPlayerCreated() {
         return (this.dataWatcher.getWatchableObjectByte(16) & 1) != 0;
     }
 
-    public void setPlayerCreated(boolean p_70849_1_)
-    {
+    public void setPlayerCreated(boolean p_70849_1_) {
         byte b0 = this.dataWatcher.getWatchableObjectByte(16);
 
-        if (p_70849_1_)
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 | 1)));
+        if (p_70849_1_) {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 | 1)));
+        } else {
+            this.dataWatcher.updateObject(16, Byte.valueOf((byte) (b0 & -2)));
         }
-        else
-        {
-            this.dataWatcher.updateObject(16, Byte.valueOf((byte)(b0 & -2)));
-        }
     }
 
-    public void onDeath(DamageSource cause)
-    {
-        if (!this.isPlayerCreated() && this.attackingPlayer != null && this.villageObj != null)
-        {
+    public void onDeath(DamageSource cause) {
+        if (!this.isPlayerCreated() && this.attackingPlayer != null && this.villageObj != null) {
             this.villageObj.setReputationForPlayer(this.attackingPlayer.getName(), -5);
         }
 
         super.onDeath(cause);
     }
 
-    static class AINearestAttackableTargetNonCreeper extends EntityAINearestAttackableTarget
-        {
-            private static final String __OBFID = "CL_00002231";
+    static class AINearestAttackableTargetNonCreeper extends EntityAINearestAttackableTarget {
 
-            public AINearestAttackableTargetNonCreeper(final EntityCreature p_i45858_1_, Class p_i45858_2_, int p_i45858_3_, boolean p_i45858_4_, boolean p_i45858_5_, final Predicate p_i45858_6_)
-            {
-                super(p_i45858_1_, p_i45858_2_, p_i45858_3_, p_i45858_4_, p_i45858_5_, p_i45858_6_);
-                this.targetEntitySelector = new Predicate()
-                {
-                    private static final String __OBFID = "CL_00002230";
-                    public boolean func_180096_a(EntityLivingBase p_180096_1_)
-                    {
-                        if (p_i45858_6_ != null && !p_i45858_6_.apply(p_180096_1_))
-                        {
-                            return false;
-                        }
-                        else if (p_180096_1_ instanceof EntityCreeper)
-                        {
-                            return false;
-                        }
-                        else
-                        {
-                            if (p_180096_1_ instanceof EntityPlayer)
-                            {
-                                double d0 = AINearestAttackableTargetNonCreeper.this.getTargetDistance();
+        private static final String __OBFID = "CL_00002231";
 
-                                if (p_180096_1_.isSneaking())
-                                {
-                                    d0 *= 0.800000011920929D;
-                                }
+        public AINearestAttackableTargetNonCreeper(final EntityCreature p_i45858_1_, Class p_i45858_2_, int p_i45858_3_, boolean p_i45858_4_, boolean p_i45858_5_, final Predicate p_i45858_6_) {
+            super(p_i45858_1_, p_i45858_2_, p_i45858_3_, p_i45858_4_, p_i45858_5_, p_i45858_6_);
+            this.targetEntitySelector = new Predicate() {
 
-                                if (p_180096_1_.isInvisible())
-                                {
-                                    float f = ((EntityPlayer)p_180096_1_).getArmorVisibility();
+                private static final String __OBFID = "CL_00002230";
 
-                                    if (f < 0.1F)
-                                    {
-                                        f = 0.1F;
-                                    }
+                public boolean func_180096_a(EntityLivingBase p_180096_1_) {
+                    if (p_i45858_6_ != null && !p_i45858_6_.apply(p_180096_1_)) {
+                        return false;
+                    } else if (p_180096_1_ instanceof EntityCreeper) {
+                        return false;
+                    } else {
+                        if (p_180096_1_ instanceof EntityPlayer) {
+                            double d0 = AINearestAttackableTargetNonCreeper.this.getTargetDistance();
 
-                                    d0 *= (double)(0.7F * f);
-                                }
+                            if (p_180096_1_.isSneaking()) {
+                                d0 *= 0.800000011920929D;
+                            }
 
-                                if ((double)p_180096_1_.getDistanceToEntity(p_i45858_1_) > d0)
-                                {
-                                    return false;
+                            if (p_180096_1_.isInvisible()) {
+                                float f = ((EntityPlayer) p_180096_1_).getArmorVisibility();
+
+                                if (f < 0.1F) {
+                                    f = 0.1F;
                                 }
+
+                                d0 *= (double) (0.7F * f);
                             }
 
-                            return AINearestAttackableTargetNonCreeper.this.isSuitableTarget(p_180096_1_, false);
+                            if ((double) p_180096_1_.getDistanceToEntity(p_i45858_1_) > d0) {
+                                return false;
+                            }
                         }
+
+                        return AINearestAttackableTargetNonCreeper.this.isSuitableTarget(p_180096_1_, false);
                     }
-                    public boolean apply(Object p_apply_1_)
-                    {
-                        return this.func_180096_a((EntityLivingBase)p_apply_1_);
-                    }
-                };
-            }
+                }
+
+                public boolean apply(Object p_apply_1_) {
+                    return this.func_180096_a((EntityLivingBase) p_apply_1_);
+                }
+            };
         }
+    }
 }
