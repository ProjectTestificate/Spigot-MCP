---a/net/minecraft/entity/monster/EntityEndermite.java
+++b/net/minecraft/entity/monster/EntityEndermite.java
@@ -17,14 +17,14 @@
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.world.World;
 
-public class EntityEndermite extends EntityMob
-{
+public class EntityEndermite extends EntityMob {
+
     private int lifetime = 0;
     private boolean playerSpawned = false;
     private static final String __OBFID = "CL_00002219";
 
-    public EntityEndermite(World worldIn)
-    {
+    public EntityEndermite(World worldIn) {
         super(worldIn);
         this.experienceValue = 3;
         this.setSize(0.4F, 0.3F);
@@ -37,125 +37,98 @@
         this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, true));
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return 0.1F;
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(8.0D);
         this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.25D);
         this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setBaseValue(2.0D);
     }
 
-    protected boolean canTriggerWalking()
-    {
+    protected boolean canTriggerWalking() {
         return false;
     }
 
-    protected String getLivingSound()
-    {
+    protected String getLivingSound() {
         return "mob.silverfish.say";
     }
 
-    protected String getHurtSound()
-    {
+    protected String getHurtSound() {
         return "mob.silverfish.hit";
     }
 
-    protected String getDeathSound()
-    {
+    protected String getDeathSound() {
         return "mob.silverfish.kill";
     }
 
-    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_)
-    {
+    protected void playStepSound(BlockPos p_180429_1_, Block p_180429_2_) {
         this.playSound("mob.silverfish.step", 0.15F, 1.0F);
     }
 
-    protected Item getDropItem()
-    {
+    protected Item getDropItem() {
         return null;
     }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund)
-    {
+    public void readEntityFromNBT(NBTTagCompound tagCompund) {
         super.readEntityFromNBT(tagCompund);
         this.lifetime = tagCompund.getInteger("Lifetime");
         this.playerSpawned = tagCompund.getBoolean("PlayerSpawned");
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound)
-    {
+    public void writeEntityToNBT(NBTTagCompound tagCompound) {
         super.writeEntityToNBT(tagCompound);
         tagCompound.setInteger("Lifetime", this.lifetime);
         tagCompound.setBoolean("PlayerSpawned", this.playerSpawned);
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         this.renderYawOffset = this.rotationYaw;
         super.onUpdate();
     }
 
-    public boolean isSpawnedByPlayer()
-    {
+    public boolean isSpawnedByPlayer() {
         return this.playerSpawned;
     }
 
-    public void setSpawnedByPlayer(boolean spawnedByPlayer)
-    {
+    public void setSpawnedByPlayer(boolean spawnedByPlayer) {
         this.playerSpawned = spawnedByPlayer;
     }
 
-    public void onLivingUpdate()
-    {
+    public void onLivingUpdate() {
         super.onLivingUpdate();
 
-        if (this.worldObj.isRemote)
-        {
-            for (int i = 0; i < 2; ++i)
-            {
-                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, this.posX + (this.rand.nextDouble() - 0.5D) * (double)this.width, this.posY + this.rand.nextDouble() * (double)this.height, this.posZ + (this.rand.nextDouble() - 0.5D) * (double)this.width, (this.rand.nextDouble() - 0.5D) * 2.0D, -this.rand.nextDouble(), (this.rand.nextDouble() - 0.5D) * 2.0D, new int[0]);
+        if (this.worldObj.isRemote) {
+            for (int i = 0; i < 2; ++i) {
+                this.worldObj.spawnParticle(EnumParticleTypes.PORTAL, this.posX + (this.rand.nextDouble() - 0.5D) * (double) this.width, this.posY + this.rand.nextDouble() * (double) this.height, this.posZ + (this.rand.nextDouble() - 0.5D) * (double) this.width, (this.rand.nextDouble() - 0.5D) * 2.0D, -this.rand.nextDouble(), (this.rand.nextDouble() - 0.5D) * 2.0D, new int[0]);
             }
-        }
-        else
-        {
-            if (!this.isNoDespawnRequired())
-            {
+        } else {
+            if (!this.isNoDespawnRequired()) {
                 ++this.lifetime;
             }
 
-            if (this.lifetime >= 2400)
-            {
+            if (this.lifetime >= 2400) {
                 this.setDead();
             }
         }
     }
 
-    protected boolean isValidLightLevel()
-    {
+    protected boolean isValidLightLevel() {
         return true;
     }
 
-    public boolean getCanSpawnHere()
-    {
-        if (super.getCanSpawnHere())
-        {
+    public boolean getCanSpawnHere() {
+        if (super.getCanSpawnHere()) {
             EntityPlayer entityplayer = this.worldObj.getClosestPlayerToEntity(this, 5.0D);
             return entityplayer == null;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
-    public EnumCreatureAttribute getCreatureAttribute()
-    {
+    public EnumCreatureAttribute getCreatureAttribute() {
         return EnumCreatureAttribute.ARTHROPOD;
     }
-}
+}
