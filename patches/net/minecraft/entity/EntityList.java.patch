---a/net/minecraft/entity/EntityList.java
+++b/net/minecraft/entity/EntityList.java
@@ -1,14 +1,10 @@
 package net.minecraft.entity;
 
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+
 import net.minecraft.entity.ai.EntityMinecartMobSpawner;
 import net.minecraft.entity.boss.EntityDragon;
 import net.minecraft.entity.boss.EntityWither;
@@ -72,41 +72,34 @@
 import net.minecraft.stats.StatBase;
 import net.minecraft.stats.StatList;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class EntityList
-{
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+
+public class EntityList {
+
     private static final Logger logger = LogManager.getLogger();
-    private static final Map stringToClassMapping = Maps.newHashMap();
-    private static final Map classToStringMapping = Maps.newHashMap();
-    private static final Map idToClassMapping = Maps.newHashMap();
+    public static final Map stringToClassMapping = Maps.newHashMap();
+    public static final Map classToStringMapping = Maps.newHashMap();
+    public static final Map idToClassMapping = Maps.newHashMap();
     private static final Map classToIDMapping = Maps.newHashMap();
     private static final Map stringToIDMapping = Maps.newHashMap();
     public static final Map entityEggs = Maps.newLinkedHashMap();
     private static final String __OBFID = "CL_00001538";
 
-    private static void addMapping(Class p_75618_0_, String p_75618_1_, int p_75618_2_)
-    {
-        if (stringToClassMapping.containsKey(p_75618_1_))
-        {
+    public static void addMapping(Class p_75618_0_, String p_75618_1_, int p_75618_2_) {
+        if (stringToClassMapping.containsKey(p_75618_1_)) {
             throw new IllegalArgumentException("ID is already registered: " + p_75618_1_);
-        }
-        else if (idToClassMapping.containsKey(Integer.valueOf(p_75618_2_)))
-        {
+        } else if (idToClassMapping.containsKey(Integer.valueOf(p_75618_2_))) {
             throw new IllegalArgumentException("ID is already registered: " + p_75618_2_);
-        }
-        else if (p_75618_2_ == 0)
-        {
+        } else if (p_75618_2_ == 0) {
             throw new IllegalArgumentException("Cannot register to reserved id: " + p_75618_2_);
-        }
-        else if (p_75618_0_ == null)
-        {
+        } else if (p_75618_0_ == null) {
             throw new IllegalArgumentException("Cannot register null clazz for id: " + p_75618_2_);
-        }
-        else
-        {
+        } else {
             stringToClassMapping.put(p_75618_1_, p_75618_0_);
             classToStringMapping.put(p_75618_0_, p_75618_1_);
             idToClassMapping.put(Integer.valueOf(p_75618_2_), p_75618_0_);
@@ -116,138 +116,104 @@
         }
     }
 
-    private static void addMapping(Class p_75614_0_, String p_75614_1_, int p_75614_2_, int p_75614_3_, int p_75614_4_)
-    {
+    public static void addMapping(Class p_75614_0_, String p_75614_1_, int p_75614_2_, int p_75614_3_, int p_75614_4_) {
         addMapping(p_75614_0_, p_75614_1_, p_75614_2_);
         entityEggs.put(Integer.valueOf(p_75614_2_), new EntityList.EntityEggInfo(p_75614_2_, p_75614_3_, p_75614_4_));
     }
 
-    public static Entity createEntityByName(String p_75620_0_, World worldIn)
-    {
+    public static Entity createEntityByName(String p_75620_0_, World worldIn) {
         Entity entity = null;
 
-        try
-        {
-            Class oclass = (Class)stringToClassMapping.get(p_75620_0_);
+        try {
+            Class oclass = (Class) stringToClassMapping.get(p_75620_0_);
 
-            if (oclass != null)
-            {
-                entity = (Entity)oclass.getConstructor(new Class[] {World.class}).newInstance(new Object[] {worldIn});
+            if (oclass != null) {
+                entity = (Entity) oclass.getConstructor(new Class[]{World.class}).newInstance(new Object[]{worldIn});
             }
-        }
-        catch (Exception exception)
-        {
+        } catch (Exception exception) {
             exception.printStackTrace();
         }
 
         return entity;
     }
 
-    public static Entity createEntityFromNBT(NBTTagCompound p_75615_0_, World worldIn)
-    {
+    public static Entity createEntityFromNBT(NBTTagCompound p_75615_0_, World worldIn) {
         Entity entity = null;
 
-        if ("Minecart".equals(p_75615_0_.getString("id")))
-        {
+        if ("Minecart".equals(p_75615_0_.getString("id"))) {
             p_75615_0_.setString("id", EntityMinecart.EnumMinecartType.byNetworkID(p_75615_0_.getInteger("Type")).getName());
             p_75615_0_.removeTag("Type");
         }
 
-        try
-        {
+        try {
             Class oclass = (Class)stringToClassMapping.get(p_75615_0_.getString("id"));
 
-            if (oclass != null)
-            {
-                entity = (Entity)oclass.getConstructor(new Class[] {World.class}).newInstance(new Object[] {worldIn});
+            if (oclass != null) {
+                entity = (Entity) oclass.getConstructor(new Class[]{World.class}).newInstance(new Object[]{worldIn});
             }
-        }
-        catch (Exception exception)
-        {
+        } catch (Exception exception) {
             exception.printStackTrace();
         }
 
-        if (entity != null)
-        {
+        if (entity != null) {
             entity.readFromNBT(p_75615_0_);
-        }
-        else
-        {
+        } else {
             logger.warn("Skipping Entity with id " + p_75615_0_.getString("id"));
         }
 
         return entity;
     }
 
-    public static Entity createEntityByID(int p_75616_0_, World worldIn)
-    {
+    public static Entity createEntityByID(int p_75616_0_, World worldIn) {
         Entity entity = null;
 
-        try
-        {
+        try {
             Class oclass = getClassFromID(p_75616_0_);
 
-            if (oclass != null)
-            {
-                entity = (Entity)oclass.getConstructor(new Class[] {World.class}).newInstance(new Object[] {worldIn});
+            if (oclass != null) {
+                entity = (Entity) oclass.getConstructor(new Class[]{World.class}).newInstance(new Object[]{worldIn});
             }
-        }
-        catch (Exception exception)
-        {
+        } catch (Exception exception) {
             exception.printStackTrace();
         }
 
-        if (entity == null)
-        {
+        if (entity == null) {
             logger.warn("Skipping Entity with id " + p_75616_0_);
         }
 
         return entity;
     }
 
-    public static int getEntityID(Entity p_75619_0_)
-    {
-        Integer integer = (Integer)classToIDMapping.get(p_75619_0_.getClass());
+    public static int getEntityID(Entity p_75619_0_) {
+        Integer integer = (Integer) classToIDMapping.get(p_75619_0_.getClass());
         return integer == null ? 0 : integer.intValue();
     }
 
-    public static Class getClassFromID(int p_90035_0_)
-    {
-        return (Class)idToClassMapping.get(Integer.valueOf(p_90035_0_));
+    public static Class getClassFromID(int p_90035_0_) {
+        return (Class) idToClassMapping.get(Integer.valueOf(p_90035_0_));
     }
 
-    public static String getEntityString(Entity p_75621_0_)
-    {
-        return (String)classToStringMapping.get(p_75621_0_.getClass());
+    public static String getEntityString(Entity p_75621_0_) {
+        return (String) classToStringMapping.get(p_75621_0_.getClass());
     }
 
-    public static String getStringFromID(int p_75617_0_)
-    {
-        return (String)classToStringMapping.get(getClassFromID(p_75617_0_));
+    public static String getStringFromID(int p_75617_0_) {
+        return (String) classToStringMapping.get(getClassFromID(p_75617_0_));
     }
 
-    @SideOnly(Side.CLIENT)
-    public static int getIDFromString(String p_180122_0_)
-    {
-        Integer integer = (Integer)stringToIDMapping.get(p_180122_0_);
-        return integer == null ? 90 : integer.intValue();
+    public static void func_151514_a() {
     }
 
-    public static void func_151514_a() {}
-
-    public static List getEntityNameList()
-    {
+    public static List getEntityNameList() {
         Set set = stringToClassMapping.keySet();
         ArrayList arraylist = Lists.newArrayList();
         Iterator iterator = set.iterator();
 
-        while (iterator.hasNext())
-        {
-            String s = (String)iterator.next();
-            Class oclass = (Class)stringToClassMapping.get(s);
+        while (iterator.hasNext()) {
+            String s = (String) iterator.next();
+            Class oclass = (Class) stringToClassMapping.get(s);
 
-            if ((oclass.getModifiers() & 1024) != 1024)
-            {
+            if ((oclass.getModifiers() & 1024) != 1024) {
                 arraylist.add(s);
             }
         }
@@ -256,29 +256,23 @@
         return arraylist;
     }
 
-    public static boolean isStringEntityName(Entity p_180123_0_, String p_180123_1_)
-    {
+    public static boolean isStringEntityName(Entity p_180123_0_, String p_180123_1_) {
         String s1 = getEntityString(p_180123_0_);
 
-        if (s1 == null && p_180123_0_ instanceof EntityPlayer)
-        {
+        if (s1 == null && p_180123_0_ instanceof EntityPlayer) {
             s1 = "Player";
-        }
-        else if (s1 == null && p_180123_0_ instanceof EntityLightningBolt)
-        {
+        } else if (s1 == null && p_180123_0_ instanceof EntityLightningBolt) {
             s1 = "LightningBolt";
         }
 
         return p_180123_1_.equals(s1);
     }
 
-    public static boolean isStringValidEntityName(String p_180125_0_)
-    {
+    public static boolean isStringValidEntityName(String p_180125_0_) {
         return "Player".equals(p_180125_0_) || getEntityNameList().contains(p_180125_0_);
     }
 
-    static
-    {
+    static {
         addMapping(EntityItem.class, "Item", 1);
         addMapping(EntityXPOrb.class, "XPOrb", 2);
         addMapping(EntityLeashKnot.class, "LeashKnot", 8);
@@ -342,29 +342,20 @@
         addMapping(EntityEnderCrystal.class, "EnderCrystal", 200);
     }
 
-    public static class EntityEggInfo
-        {
-            public final int spawnedID;
-            public final int primaryColor;
-            public final int secondaryColor;
-            public final StatBase field_151512_d;
-            public final StatBase field_151513_e;
-            private static final String __OBFID = "CL_00001539";
+    public static class EntityEggInfo {
 
-            public EntityEggInfo(int p_i1583_1_, int p_i1583_2_, int p_i1583_3_)
-            {
-                this.spawnedID = p_i1583_1_;
-                this.primaryColor = p_i1583_2_;
-                this.secondaryColor = p_i1583_3_;
-                this.field_151512_d = StatList.getStatKillEntity(this);
-                this.field_151513_e = StatList.getStatEntityKilledBy(this);
-            }
+        public final int spawnedID;
+        public final int primaryColor;
+        public final int secondaryColor;
+        public final StatBase field_151512_d;
+        public final StatBase field_151513_e;
+        private static final String __OBFID = "CL_00001539";
+
+        public EntityEggInfo(int p_i1583_1_, int p_i1583_2_, int p_i1583_3_) {
+            this.spawnedID = p_i1583_1_;
+            this.primaryColor = p_i1583_2_;
+            this.secondaryColor = p_i1583_3_;
+            this.field_151512_d = StatList.getStatKillEntity(this);
+            this.field_151513_e = StatList.getStatEntityKilledBy(this);
         }
-}
+    }
+}
