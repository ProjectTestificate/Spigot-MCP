--- decompiled\net\minecraft\entity\EntityLeashKnot.java
+++ src\main\java\net\minecraft\entity\EntityLeashKnot.java
@@ -1,23 +1,27 @@
 package net.minecraft.entity;
 
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.block.BlockFence;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.network.play.server.S1BPacketEntityAttach;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
 public class EntityLeashKnot extends EntityHanging
 {
+
     private static final String __OBFID = "CL_00001548";
 
     public EntityLeashKnot(World worldIn)
     {
         super(worldIn);
@@ -36,11 +40,13 @@
     protected void entityInit()
     {
         super.entityInit();
     }
 
-    public void func_174859_a(EnumFacing p_174859_1_) {}
+    public void func_174859_a(EnumFacing p_174859_1_)
+    {
+    }
 
     public int getWidthPixels()
     {
         return 9;
     }
@@ -53,26 +59,26 @@
     public float getEyeHeight()
     {
         return -0.0625F;
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean isInRangeToRenderDist(double distance)
+    public void onBroken(Entity p_110128_1_)
     {
-        return distance < 1024.0D;
     }
 
-    public void onBroken(Entity p_110128_1_) {}
-
     public boolean writeToNBTOptional(NBTTagCompound tagCompund)
     {
         return false;
     }
 
-    public void writeEntityToNBT(NBTTagCompound tagCompound) {}
+    public void writeEntityToNBT(NBTTagCompound tagCompound)
+    {
+    }
 
-    public void readEntityFromNBT(NBTTagCompound tagCompund) {}
+    public void readEntityFromNBT(NBTTagCompound tagCompund)
+    {
+    }
 
     public boolean interactFirst(EntityPlayer playerIn)
     {
         ItemStack itemstack = playerIn.getHeldItem();
         boolean flag = false;
@@ -91,21 +97,32 @@
             {
                 entityliving = (EntityLiving)iterator.next();
 
                 if (entityliving.getLeashed() && entityliving.getLeashedToEntity() == playerIn)
                 {
+                    // CraftBukkit start
+                    if (CraftEventFactory.callPlayerLeashEntityEvent(entityliving, this, playerIn).isCancelled())
+                    {
+                        ((EntityPlayerMP)playerIn).playerNetServerHandler.sendPacket(new S1BPacketEntityAttach(1, entityliving, entityliving.getLeashedToEntity()));
+                        continue;
+                    }
+
+                    // CraftBukkit end
                     entityliving.setLeashedToEntity(this, true);
                     flag = true;
                 }
             }
         }
 
         if (!this.worldObj.isRemote && !flag)
         {
-            this.setDead();
+            // CraftBukkit start - Move below
+            // this.setDead();
+            boolean die = true;
+            // CraftBukkit end
 
-            if (playerIn.capabilities.isCreativeMode)
+            if (true || playerIn.capabilities.isCreativeMode)  // CraftBukkit - Process for non-creative as well
             {
                 d0 = 7.0D;
                 list = this.worldObj.getEntitiesWithinAABB(EntityLiving.class, new AxisAlignedBB(this.posX - d0, this.posY - d0, this.posZ - d0, this.posX + d0, this.posY + d0, this.posZ + d0));
                 iterator = list.iterator();
 
@@ -113,14 +130,30 @@
                 {
                     entityliving = (EntityLiving)iterator.next();
 
                     if (entityliving.getLeashed() && entityliving.getLeashedToEntity() == this)
                     {
-                        entityliving.clearLeashed(true, false);
+                        // CraftBukkit start
+                        if (CraftEventFactory.callPlayerUnleashEntityEvent(entityliving, playerIn).isCancelled())
+                        {
+                            die = false;
+                            continue;
+                        }
+
+                        entityliving.clearLeashed(true, !playerIn.capabilities.isCreativeMode); // false -> survival mode boolean
+                        // CraftBukkit end
                     }
                 }
             }
+
+            // CraftBukkit start
+            if (die)
+            {
+                this.setDead();
+            }
+
+            // CraftBukkit end
         }
 
         return true;
     }
 
