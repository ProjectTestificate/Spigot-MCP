--- decompiled\net\minecraft\entity\projectile\EntityWitherSkull.java
+++ src\main\java\net\minecraft\entity\projectile\EntityWitherSkull.java
@@ -9,15 +9,16 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.Explosion;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+
 public class EntityWitherSkull extends EntityFireball
 {
+
     private static final String __OBFID = "CL_00001728";
 
     public EntityWitherSkull(World worldIn)
     {
         super(worldIn);
@@ -33,17 +34,10 @@
     protected float getMotionFactor()
     {
         return this.isInvulnerable() ? 0.73F : super.getMotionFactor();
     }
 
-    @SideOnly(Side.CLIENT)
-    public EntityWitherSkull(World worldIn, double p_i1795_2_, double p_i1795_4_, double p_i1795_6_, double p_i1795_8_, double p_i1795_10_, double p_i1795_12_)
-    {
-        super(worldIn, p_i1795_2_, p_i1795_4_, p_i1795_6_, p_i1795_8_, p_i1795_10_, p_i1795_12_);
-        this.setSize(0.3125F, 0.3125F);
-    }
-
     public boolean isBurning()
     {
         return false;
     }
 
@@ -63,31 +57,37 @@
     {
         if (!this.worldObj.isRemote)
         {
             if (movingObject.entityHit != null)
             {
+                // Spigot start
+                boolean didDamage = false;
+
                 if (this.shootingEntity != null)
                 {
-                    if (movingObject.entityHit.attackEntityFrom(DamageSource.causeMobDamage(this.shootingEntity), 8.0F))
+                    didDamage = movingObject.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, shootingEntity), 8.0F);
+
+                    if (didDamage)
                     {
                         if (!movingObject.entityHit.isEntityAlive())
                         {
-                            this.shootingEntity.heal(5.0F);
+                            this.shootingEntity.heal(5.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.WITHER); // CraftBukkit
                         }
                         else
                         {
                             this.func_174815_a(this.shootingEntity, movingObject.entityHit);
                         }
                     }
                 }
                 else
                 {
-                    movingObject.entityHit.attackEntityFrom(DamageSource.magic, 5.0F);
+                    didDamage = movingObject.entityHit.attackEntityFrom(DamageSource.magic, 5.0F);
                 }
 
-                if (movingObject.entityHit instanceof EntityLivingBase)
+                if (didDamage && movingObject.entityHit instanceof EntityLivingBase)
                 {
+                    // Spigot end
                     byte b0 = 0;
 
                     if (this.worldObj.getDifficulty() == EnumDifficulty.NORMAL)
                     {
                         b0 = 10;
@@ -102,11 +102,21 @@
                         ((EntityLivingBase)movingObject.entityHit).addPotionEffect(new PotionEffect(Potion.wither.id, 20 * b0, 1));
                     }
                 }
             }
 
-            this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, 1.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            // CraftBukkit start
+            // this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, 1.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 1.0F, false);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled())
+            {
+                this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, event.getRadius(), event.getFire(), this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            }
+
+            // CraftBukkit end
             this.setDead();
         }
     }
 
     public boolean canBeCollidedWith()
