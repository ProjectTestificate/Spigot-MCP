--- decompiled\net\minecraft\entity\projectile\EntityWitherSkull.java
+++ src\main\java\net\minecraft\entity\projectile\EntityWitherSkull.java
@@ -9,128 +9,107 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.Explosion;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntityWitherSkull extends EntityFireball
-{
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+
+public class EntityWitherSkull extends EntityFireball {
+
     private static final String __OBFID = "CL_00001728";
 
-    public EntityWitherSkull(World worldIn)
-    {
+    public EntityWitherSkull(World worldIn) {
         super(worldIn);
         this.setSize(0.3125F, 0.3125F);
     }
 
-    public EntityWitherSkull(World worldIn, EntityLivingBase p_i1794_2_, double p_i1794_3_, double p_i1794_5_, double p_i1794_7_)
-    {
+    public EntityWitherSkull(World worldIn, EntityLivingBase p_i1794_2_, double p_i1794_3_, double p_i1794_5_, double p_i1794_7_) {
         super(worldIn, p_i1794_2_, p_i1794_3_, p_i1794_5_, p_i1794_7_);
         this.setSize(0.3125F, 0.3125F);
     }
 
-    protected float getMotionFactor()
-    {
+    protected float getMotionFactor() {
         return this.isInvulnerable() ? 0.73F : super.getMotionFactor();
     }
 
-    @SideOnly(Side.CLIENT)
-    public EntityWitherSkull(World worldIn, double p_i1795_2_, double p_i1795_4_, double p_i1795_6_, double p_i1795_8_, double p_i1795_10_, double p_i1795_12_)
-    {
-        super(worldIn, p_i1795_2_, p_i1795_4_, p_i1795_6_, p_i1795_8_, p_i1795_10_, p_i1795_12_);
-        this.setSize(0.3125F, 0.3125F);
-    }
-
-    public boolean isBurning()
-    {
+    public boolean isBurning() {
         return false;
     }
 
-    public float getExplosionResistance(Explosion p_180428_1_, World worldIn, BlockPos p_180428_3_, IBlockState p_180428_4_)
-    {
+    public float getExplosionResistance(Explosion p_180428_1_, World worldIn, BlockPos p_180428_3_, IBlockState p_180428_4_) {
         float f = super.getExplosionResistance(p_180428_1_, worldIn, p_180428_3_, p_180428_4_);
 
-        if (this.isInvulnerable() && p_180428_4_.getBlock() != Blocks.bedrock && p_180428_4_.getBlock() != Blocks.end_portal && p_180428_4_.getBlock() != Blocks.end_portal_frame && p_180428_4_.getBlock() != Blocks.command_block)
-        {
+        if (this.isInvulnerable() && p_180428_4_.getBlock() != Blocks.bedrock && p_180428_4_.getBlock() != Blocks.end_portal && p_180428_4_.getBlock() != Blocks.end_portal_frame && p_180428_4_.getBlock() != Blocks.command_block) {
             f = Math.min(0.8F, f);
         }
 
         return f;
     }
 
-    protected void onImpact(MovingObjectPosition movingObject)
-    {
-        if (!this.worldObj.isRemote)
-        {
-            if (movingObject.entityHit != null)
-            {
-                if (this.shootingEntity != null)
-                {
-                    if (movingObject.entityHit.attackEntityFrom(DamageSource.causeMobDamage(this.shootingEntity), 8.0F))
-                    {
-                        if (!movingObject.entityHit.isEntityAlive())
-                        {
-                            this.shootingEntity.heal(5.0F);
-                        }
-                        else
-                        {
+    protected void onImpact(MovingObjectPosition movingObject) {
+        if (!this.worldObj.isRemote) {
+            if (movingObject.entityHit != null) {
+                // Spigot start
+                boolean didDamage = false;
+                if (this.shootingEntity != null) {
+                    didDamage = movingObject.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, shootingEntity), 8.0F);
+                    if (didDamage) {
+                        if (!movingObject.entityHit.isEntityAlive()) {
+                            this.shootingEntity.heal(5.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.WITHER); // CraftBukkit
+                        } else {
                             this.func_174815_a(this.shootingEntity, movingObject.entityHit);
                         }
                     }
+                } else {
+                    didDamage = movingObject.entityHit.attackEntityFrom(DamageSource.magic, 5.0F);
                 }
-                else
-                {
-                    movingObject.entityHit.attackEntityFrom(DamageSource.magic, 5.0F);
-                }
 
-                if (movingObject.entityHit instanceof EntityLivingBase)
-                {
+                if (didDamage && movingObject.entityHit instanceof EntityLivingBase) {
+                    // Spigot end
                     byte b0 = 0;
 
-                    if (this.worldObj.getDifficulty() == EnumDifficulty.NORMAL)
-                    {
+                    if (this.worldObj.getDifficulty() == EnumDifficulty.NORMAL) {
                         b0 = 10;
-                    }
-                    else if (this.worldObj.getDifficulty() == EnumDifficulty.HARD)
-                    {
+                    } else if (this.worldObj.getDifficulty() == EnumDifficulty.HARD) {
                         b0 = 40;
                     }
 
-                    if (b0 > 0)
-                    {
-                        ((EntityLivingBase)movingObject.entityHit).addPotionEffect(new PotionEffect(Potion.wither.id, 20 * b0, 1));
+                    if (b0 > 0) {
+                        ((EntityLivingBase) movingObject.entityHit).addPotionEffect(new PotionEffect(Potion.wither.id, 20 * b0, 1));
                     }
                 }
             }
+            // CraftBukkit start
+            // this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, 1.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 1.0F, false);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
 
-            this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, 1.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            if (!event.isCancelled()) {
+                this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, event.getRadius(), event.getFire(), this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            }
+            // CraftBukkit end
+
             this.setDead();
         }
     }
 
-    public boolean canBeCollidedWith()
-    {
+    public boolean canBeCollidedWith() {
         return false;
     }
 
-    public boolean attackEntityFrom(DamageSource source, float amount)
-    {
+    public boolean attackEntityFrom(DamageSource source, float amount) {
         return false;
     }
 
-    protected void entityInit()
-    {
-        this.dataWatcher.addObject(10, Byte.valueOf((byte)0));
+    protected void entityInit() {
+        this.dataWatcher.addObject(10, Byte.valueOf((byte) 0));
     }
 
-    public boolean isInvulnerable()
-    {
+    public boolean isInvulnerable() {
         return this.dataWatcher.getWatchableObjectByte(10) == 1;
     }
 
-    public void setInvulnerable(boolean p_82343_1_)
-    {
-        this.dataWatcher.updateObject(10, Byte.valueOf((byte)(p_82343_1_ ? 1 : 0)));
+    public void setInvulnerable(boolean p_82343_1_) {
+        this.dataWatcher.updateObject(10, Byte.valueOf((byte) (p_82343_1_ ? 1 : 0)));
     }
 }
