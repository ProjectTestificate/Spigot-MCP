--- decompiled\net\minecraft\entity\projectile\EntityPotion.java
+++ src\main\java\net\minecraft\entity\projectile\EntityPotion.java
@@ -1,25 +1,30 @@
 package net.minecraft.entity.projectile;
 
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.Items;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.potion.Potion;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.MovingObjectPosition;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.entity.LivingEntity;
+
 public class EntityPotion extends EntityThrowable
 {
-    private ItemStack potionDamage;
+
+    public ItemStack potionDamage; // SpigotMCP -- Apply access transformation
     private static final String __OBFID = "CL_00001727";
 
     public EntityPotion(World worldIn)
     {
         super(worldIn);
@@ -34,16 +39,10 @@
     {
         super(worldIn, p_i1790_2_);
         this.potionDamage = p_i1790_3_;
     }
 
-    @SideOnly(Side.CLIENT)
-    public EntityPotion(World worldIn, double p_i1791_2_, double p_i1791_4_, double p_i1791_6_, int p_i1791_8_)
-    {
-        this(worldIn, p_i1791_2_, p_i1791_4_, p_i1791_6_, new ItemStack(Items.potionitem, 1, p_i1791_8_));
-    }
-
     public EntityPotion(World worldIn, double p_i1792_2_, double p_i1792_4_, double p_i1792_6_, ItemStack p_i1792_8_)
     {
         super(worldIn, p_i1792_2_, p_i1792_4_, p_i1792_6_);
         this.potionDamage = p_i1792_8_;
     }
@@ -87,18 +86,20 @@
     {
         if (!this.worldObj.isRemote)
         {
             List list = Items.potionitem.getEffects(this.potionDamage);
 
-            if (list != null && !list.isEmpty())
+            if (true || list != null && !list.isEmpty()) // CraftBukkit - Call event even if no effects to apply
             {
                 AxisAlignedBB axisalignedbb = this.getEntityBoundingBox().expand(4.0D, 2.0D, 4.0D);
                 List list1 = this.worldObj.getEntitiesWithinAABB(EntityLivingBase.class, axisalignedbb);
 
-                if (!list1.isEmpty())
+                if (true || !list1.isEmpty()) // CraftBukkit - Run code even if there are no entities around
                 {
                     Iterator iterator = list1.iterator();
+                    // CraftBukkit
+                    HashMap<LivingEntity, Double> affected = new HashMap();
 
                     while (iterator.hasNext())
                     {
                         EntityLivingBase entitylivingbase = (EntityLivingBase)iterator.next();
                         double d0 = this.getDistanceSqToEntity(entitylivingbase);
@@ -110,28 +111,57 @@
                             if (entitylivingbase == p_70184_1_.entityHit)
                             {
                                 d1 = 1.0D;
                             }
 
+                            // CraftBukkit start
+                            affected.put((LivingEntity)entitylivingbase.getBukkitEntity(), d1);
+                        }
+                    }
+
+                    org.bukkit.event.entity.PotionSplashEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPotionSplashEvent(this, affected);
+
+                    if (!event.isCancelled() && list != null && !list.isEmpty())   // do not process effects if there are no effects to process
+                    {
+                        for (LivingEntity victim : event.getAffectedEntities())
+                        {
+                            if (!(victim instanceof CraftLivingEntity))
+                            {
+                                continue;
+                            }
+
+                            EntityLivingBase entityliving = ((CraftLivingEntity)victim).getHandle(); // SpigotMCP -- Use EntityLivingBase to fix SrgHelper stupidity
+                            double d1 = event.getIntensity(victim);
+                            // CraftBukkit end
                             Iterator iterator1 = list.iterator();
 
                             while (iterator1.hasNext())
                             {
                                 PotionEffect potioneffect = (PotionEffect)iterator1.next();
                                 int i = potioneffect.getPotionID();
 
+                                // CraftBukkit start - Abide by PVP settings - for players only!
+                                if (!this.worldObj.pvpMode && this.getThrower() instanceof EntityPlayer && entityliving instanceof EntityPlayer && entityliving != this.getThrower())
+                                {
+                                    // Block SLOWER_MOVEMENT, SLOWER_DIG, HARM, BLINDNESS, HUNGER, WEAKNESS and POISON potions
+                                    if (i == 2 || i == 4 || i == 7 || i == 15 || i == 17 || i == 18 || i == 19)
+                                        continue;
+                                }
+
+                                // CraftBukkit end
+
                                 if (Potion.potionTypes[i].isInstant())
                                 {
-                                    Potion.potionTypes[i].affectEntity(this, this.getThrower(), entitylivingbase, potioneffect.getAmplifier(), d1);
+                                    Potion.potionTypes[i].affectEntity(this, this.getThrower(), entityliving, potioneffect.getAmplifier(), d1);
                                 }
                                 else
                                 {
                                     int j = (int)(d1 * (double)potioneffect.getDuration() + 0.5D);
 
                                     if (j > 20)
                                     {
-                                        entitylivingbase.addPotionEffect(new PotionEffect(i, j, potioneffect.getAmplifier()));
+                                        entityliving.addPotionEffect(new PotionEffect(i, j, potioneffect.getAmplifier()));
                                     }
                                 }
                             }
                         }
                     }
