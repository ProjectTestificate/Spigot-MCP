--- decompiled\net\minecraft\entity\item\EntityFireworkRocket.java
+++ src\main\java\net\minecraft\entity\item\EntityFireworkRocket.java
@@ -4,19 +4,28 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+
 public class EntityFireworkRocket extends Entity
 {
+
     private int fireworkAge;
-    private int lifetime;
+    public int lifetime; // SpigotMCP -- Apply access transformation
     private static final String __OBFID = "CL_00001718";
 
+    // Spigot Start
+    @Override
+    public void inactiveTick()
+    {
+        this.fireworkAge += 1;
+        super.inactiveTick();
+    }
+    // Spigot End
+
     public EntityFireworkRocket(World worldIn)
     {
         super(worldIn);
         this.setSize(0.25F, 0.25F);
     }
@@ -24,16 +33,10 @@
     protected void entityInit()
     {
         this.dataWatcher.addObjectByDataType(8, 5);
     }
 
-    @SideOnly(Side.CLIENT)
-    public boolean isInRangeToRenderDist(double distance)
-    {
-        return distance < 4096.0D;
-    }
-
     public EntityFireworkRocket(World worldIn, double x, double y, double z, ItemStack givenItem)
     {
         super(worldIn);
         this.fireworkAge = 0;
         this.setSize(0.25F, 0.25F);
@@ -56,25 +59,10 @@
         this.motionZ = this.rand.nextGaussian() * 0.001D;
         this.motionY = 0.05D;
         this.lifetime = 10 * i + this.rand.nextInt(6) + this.rand.nextInt(7);
     }
 
-    @SideOnly(Side.CLIENT)
-    public void setVelocity(double x, double y, double z)
-    {
-        this.motionX = x;
-        this.motionY = y;
-        this.motionZ = z;
-
-        if (this.prevRotationPitch == 0.0F && this.prevRotationYaw == 0.0F)
-        {
-            float f = MathHelper.sqrt_double(x * x + z * z);
-            this.prevRotationYaw = this.rotationYaw = (float)(Math.atan2(x, z) * 180.0D / Math.PI);
-            this.prevRotationPitch = this.rotationPitch = (float)(Math.atan2(y, (double)f) * 180.0D / Math.PI);
-        }
-    }
-
     public void onUpdate()
     {
         this.lastTickPosX = this.posX;
         this.lastTickPosY = this.posY;
         this.lastTickPosZ = this.posZ;
@@ -126,29 +114,11 @@
             this.worldObj.setEntityState(this, (byte)17);
             this.setDead();
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public void handleHealthUpdate(byte p_70103_1_)
-    {
-        if (p_70103_1_ == 17 && this.worldObj.isRemote)
-        {
-            ItemStack itemstack = this.dataWatcher.getWatchableObjectItemStack(8);
-            NBTTagCompound nbttagcompound = null;
 
-            if (itemstack != null && itemstack.hasTagCompound())
-            {
-                nbttagcompound = itemstack.getTagCompound().getCompoundTag("Fireworks");
-            }
-
-            this.worldObj.makeFireworks(this.posX, this.posY, this.posZ, this.motionX, this.motionY, this.motionZ, nbttagcompound);
-        }
-
-        super.handleHealthUpdate(p_70103_1_);
-    }
-
     public void writeEntityToNBT(NBTTagCompound tagCompound)
     {
         tagCompound.setInteger("Life", this.fireworkAge);
         tagCompound.setInteger("LifeTime", this.lifetime);
         ItemStack itemstack = this.dataWatcher.getWatchableObjectItemStack(8);
@@ -181,16 +151,10 @@
     public float getBrightness(float p_70013_1_)
     {
         return super.getBrightness(p_70013_1_);
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getBrightnessForRender(float p_70070_1_)
-    {
-        return super.getBrightnessForRender(p_70070_1_);
-    }
-
     public boolean canAttackWithItem()
     {
         return false;
     }
 }
