--- decompiled\net\minecraft\entity\item\EntityMinecartContainer.java
+++ src\main\java\net\minecraft\entity\item\EntityMinecartContainer.java
@@ -1,7 +1,10 @@
 package net.minecraft.entity.item;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.InventoryHelper;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
@@ -9,14 +12,58 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.world.ILockableContainer;
 import net.minecraft.world.LockCode;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+
 public abstract class EntityMinecartContainer extends EntityMinecart implements ILockableContainer
 {
-    private ItemStack[] minecartContainerItems = new ItemStack[36];
+
+    private ItemStack[] minecartContainerItems = new ItemStack[27]; // CraftBukkit - 36 -> 27
     private boolean dropContentsWhenDead = true;
+
+    // CraftBukkit start
+    public List transaction = new ArrayList();
+    private int maxStack = 64; // SpigotMCP -- Replace 'MAX_STACK' with 64
+
+    public net.minecraft.item.ItemStack[] getContents()
+    {
+        return this.minecartContainerItems;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public java.util.List getViewers()
+    {
+        return transaction;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        org.bukkit.entity.Entity cart = getBukkitEntity();
+
+        if (cart instanceof InventoryHolder) return (InventoryHolder)cart;
+
+        return null;
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
     private static final String __OBFID = "CL_00001674";
 
     public EntityMinecartContainer(World worldIn)
     {
         super(worldIn);
@@ -90,20 +137,26 @@
         {
             stack.stackSize = this.getInventoryStackLimit();
         }
     }
 
-    public void markDirty() {}
+    public void markDirty()
+    {
+    }
 
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return this.isDead ? false : player.getDistanceSqToEntity(this) <= 64.0D;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
@@ -113,11 +166,11 @@
         return this.hasCustomName() ? this.getCustomNameTag() : "container.minecart";
     }
 
     public int getInventoryStackLimit()
     {
-        return 64;
+        return maxStack;
     }
 
     public void travelToDimension(int dimensionId)
     {
         this.dropContentsWhenDead = false;
@@ -193,11 +246,13 @@
     public int getField(int id)
     {
         return 0;
     }
 
-    public void setField(int id, int value) {}
+    public void setField(int id, int value)
+    {
+    }
 
     public int getFieldCount()
     {
         return 0;
     }
@@ -205,11 +260,13 @@
     public boolean isLocked()
     {
         return false;
     }
 
-    public void setLockCode(LockCode code) {}
+    public void setLockCode(LockCode code)
+    {
+    }
 
     public LockCode getLockCode()
     {
         return LockCode.EMPTY_CODE;
     }
