--- decompiled\net\minecraft\entity\item\EntityXPOrb.java
+++ src\main\java\net\minecraft\entity\item\EntityXPOrb.java
@@ -1,25 +1,29 @@
 package net.minecraft.entity.item;
 
 import net.minecraft.block.material.Material;
 import net.minecraft.entity.Entity;
+import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+
 public class EntityXPOrb extends Entity
 {
+
     public int xpColor;
     public int xpOrbAge;
     public int field_70532_c;
     private int xpOrbHealth = 5;
-    private int xpValue;
+    public int xpValue;
     private EntityPlayer closestPlayer;
     private int xpTargetColor;
     private static final String __OBFID = "CL_00001544";
 
     public EntityXPOrb(World worldIn, double x, double y, double z, int expValue)
@@ -43,33 +47,19 @@
     {
         super(worldIn);
         this.setSize(0.25F, 0.25F);
     }
 
-    protected void entityInit() {}
-
-    @SideOnly(Side.CLIENT)
-    public int getBrightnessForRender(float p_70070_1_)
+    protected void entityInit()
     {
-        float f1 = 0.5F;
-        f1 = MathHelper.clamp_float(f1, 0.0F, 1.0F);
-        int i = super.getBrightnessForRender(p_70070_1_);
-        int j = i & 255;
-        int k = i >> 16 & 255;
-        j += (int)(f1 * 15.0F * 16.0F);
-
-        if (j > 240)
-        {
-            j = 240;
-        }
-
-        return j | k << 16;
     }
 
+
     public void onUpdate()
     {
         super.onUpdate();
+        EntityPlayer prevTarget = this.closestPlayer;// CraftBukkit - store old target
 
         if (this.field_70532_c > 0)
         {
             --this.field_70532_c;
         }
@@ -105,23 +95,39 @@
             this.closestPlayer = null;
         }
 
         if (this.closestPlayer != null)
         {
-            double d1 = (this.closestPlayer.posX - this.posX) / d0;
-            double d2 = (this.closestPlayer.posY + (double)this.closestPlayer.getEyeHeight() - this.posY) / d0;
-            double d3 = (this.closestPlayer.posZ - this.posZ) / d0;
-            double d4 = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3);
-            double d5 = 1.0D - d4;
+            // CraftBukkit start
+            boolean cancelled = false;
 
-            if (d5 > 0.0D)
+            if (this.closestPlayer != prevTarget)
             {
-                d5 *= d5;
-                this.motionX += d1 / d4 * d5 * 0.1D;
-                this.motionY += d2 / d4 * d5 * 0.1D;
-                this.motionZ += d3 / d4 * d5 * 0.1D;
+                EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this, closestPlayer, EntityTargetEvent.TargetReason.CLOSEST_PLAYER);
+                EntityLivingBase target = event.getTarget() == null ? null : ((org.bukkit.craftbukkit.entity.CraftLivingEntity)event.getTarget()).getHandle();
+                closestPlayer = target instanceof EntityPlayer ? (EntityPlayer)target : null;
+                cancelled = event.isCancelled();
             }
+
+            if (!cancelled && closestPlayer != null)
+            {
+                double d1 = (this.closestPlayer.posX - this.posX) / d0;
+                double d2 = (this.closestPlayer.posY + (double)this.closestPlayer.getEyeHeight() - this.posY) / d0;
+                double d3 = (this.closestPlayer.posZ - this.posZ) / d0;
+                double d4 = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3);
+                double d5 = 1.0D - d4;
+
+                if (d5 > 0.0D)
+                {
+                    d5 *= d5;
+                    this.motionX += d1 / d4 * d5 * 0.1D;
+                    this.motionY += d2 / d4 * d5 * 0.1D;
+                    this.motionZ += d3 / d4 * d5 * 0.1D;
+                }
+            }
+
+            // CraftBukkit end
         }
 
         this.moveEntity(this.motionX, this.motionY, this.motionZ);
         float f = 0.98F;
 
@@ -199,29 +205,56 @@
             if (this.field_70532_c == 0 && entityIn.xpCooldown == 0)
             {
                 entityIn.xpCooldown = 2;
                 this.worldObj.playSoundAtEntity(entityIn, "random.orb", 0.1F, 0.5F * ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.8F));
                 entityIn.onItemPickup(this, 1);
-                entityIn.addExperience(this.xpValue);
-                this.setDead();
+                entityIn.addExperience(CraftEventFactory.callPlayerExpChangeEvent(entityIn, this.xpValue).getAmount()); // CraftBukkit - this.value -> event.getAmount()                this.setDead();
             }
         }
     }
 
     public int getXpValue()
     {
         return this.xpValue;
     }
 
-    @SideOnly(Side.CLIENT)
-    public int getTextureByXP()
-    {
-        return this.xpValue >= 2477 ? 10 : (this.xpValue >= 1237 ? 9 : (this.xpValue >= 617 ? 8 : (this.xpValue >= 307 ? 7 : (this.xpValue >= 149 ? 6 : (this.xpValue >= 73 ? 5 : (this.xpValue >= 37 ? 4 : (this.xpValue >= 17 ? 3 : (this.xpValue >= 7 ? 2 : (this.xpValue >= 3 ? 1 : 0)))))))));
-    }
-
     public static int getXPSplit(int expValue)
     {
+        // CraftBukkit start
+        if (expValue > 162670129) return expValue - 100000;
+
+        if (expValue > 81335063) return 81335063;
+
+        if (expValue > 40667527) return 40667527;
+
+        if (expValue > 20333759) return 20333759;
+
+        if (expValue > 10166857) return 10166857;
+
+        if (expValue > 5083423) return 5083423;
+
+        if (expValue > 2541701) return 2541701;
+
+        if (expValue > 1270849) return 1270849;
+
+        if (expValue > 635413) return 635413;
+
+        if (expValue > 317701) return 317701;
+
+        if (expValue > 158849) return 158849;
+
+        if (expValue > 79423) return 79423;
+
+        if (expValue > 39709) return 39709;
+
+        if (expValue > 19853) return 19853;
+
+        if (expValue > 9923) return 9923;
+
+        if (expValue > 4957) return 4957;
+
+        // CraftBukkit end
         return expValue >= 2477 ? 2477 : (expValue >= 1237 ? 1237 : (expValue >= 617 ? 617 : (expValue >= 307 ? 307 : (expValue >= 149 ? 149 : (expValue >= 73 ? 73 : (expValue >= 37 ? 37 : (expValue >= 17 ? 17 : (expValue >= 7 ? 7 : (expValue >= 3 ? 3 : 1)))))))));
     }
 
     public boolean canAttackWithItem()
     {
