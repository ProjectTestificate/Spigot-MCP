--- decompiled\net\minecraft\entity\item\EntityFallingBlock.java
+++ src\main\java\net\minecraft\entity\item\EntityFallingBlock.java
@@ -1,10 +1,10 @@
 package net.minecraft.entity.item;
 
-import com.google.common.collect.Lists;
 import java.util.ArrayList;
 import java.util.Iterator;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockAnvil;
 import net.minecraft.block.BlockFalling;
 import net.minecraft.block.ITileEntityProvider;
 import net.minecraft.block.material.Material;
@@ -20,15 +20,18 @@
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
+import com.google.common.collect.Lists;
+
 public class EntityFallingBlock extends Entity
 {
+
     private IBlockState fallTile;
     public int fallTime;
     public boolean shouldDropItem = true;
     private boolean field_145808_f;
     private boolean hurtEntities;
@@ -60,11 +63,13 @@
     protected boolean canTriggerWalking()
     {
         return false;
     }
 
-    protected void entityInit() {}
+    protected void entityInit()
+    {
+    }
 
     public boolean canBeCollidedWith()
     {
         return !this.isDead;
     }
@@ -86,11 +91,11 @@
 
             if (this.fallTime++ == 0)
             {
                 blockpos = new BlockPos(this);
 
-                if (this.worldObj.getBlockState(blockpos).getBlock() == block)
+                if (this.worldObj.getBlockState(blockpos).getBlock() == block && !CraftEventFactory.callEntityChangeBlockEvent(this, blockpos.getX(), blockpos.getY(), blockpos.getZ(), Blocks.air, 0).isCancelled()) // CraftBukkit // SpigotMCP -- Added craftbukkit
                 {
                     this.worldObj.setBlockToAir(blockpos);
                 }
                 else if (!this.worldObj.isRemote)
                 {
@@ -117,12 +122,22 @@
 
                     if (this.worldObj.getBlockState(blockpos).getBlock() != Blocks.piston_extension)
                     {
                         this.setDead();
 
-                        if (!this.field_145808_f && this.worldObj.canBlockBePlaced(block, blockpos, true, EnumFacing.UP, (Entity)null, (ItemStack)null) && !BlockFalling.canFallInto(this.worldObj, blockpos.down()) && this.worldObj.setBlockState(blockpos, this.fallTile, 3))
+                        // CraftBukkit Start // SpigotMCP -- Added missing 'CraftBukkit start'
+                        if (!this.field_145808_f && this.worldObj.canBlockBePlaced(block, blockpos, true, EnumFacing.UP, (Entity)null, (ItemStack)null) && !BlockFalling.canFallInto(this.worldObj, blockpos.down()) /* mimic the false conditions of setTypeIdAndData */ && blockpos.getX() >= -30000000 && blockpos.getZ() >= -30000000 && blockpos.getX() < 30000000 && blockpos.getZ() < 30000000 && blockpos.getY() >= 0 && blockpos.getY() < 256 && this.worldObj
+                                .getBlockState(blockpos) != this.fallTile)
                         {
+                            if (CraftEventFactory.callEntityChangeBlockEvent(this, blockpos.getX(), blockpos.getY(), blockpos.getZ(), this.fallTile.getBlock(), this.fallTile.getBlock().getMetaFromState(this.fallTile)).isCancelled())
+                            {
+                                return;
+                            }
+
+                            this.worldObj.setBlockState(blockpos, this.fallTile, 3);
+
+                            // CraftBukkit end
                             if (block instanceof BlockFalling)
                             {
                                 ((BlockFalling)block).onEndFalling(this.worldObj, blockpos);
                             }
 
@@ -187,11 +202,13 @@
                 Iterator iterator = arraylist.iterator();
 
                 while (iterator.hasNext())
                 {
                     Entity entity = (Entity)iterator.next();
+                    CraftEventFactory.entityDamage = this; // CraftBukkit
                     entity.attackEntityFrom(damagesource, (float)Math.min(MathHelper.floor_float((float)i * this.fallHurtAmount), this.fallHurtMax));
+                    CraftEventFactory.entityDamage = null; // CraftBukkit
                 }
 
                 if (flag && (double)this.rand.nextFloat() < 0.05000000074505806D + (double)i * 0.05D)
                 {
                     int j = ((Integer)this.fallTile.getValue(BlockAnvil.DAMAGE)).intValue();
@@ -290,22 +307,10 @@
             category.addCrashSection("Immitating block ID", Integer.valueOf(Block.getIdFromBlock(block)));
             category.addCrashSection("Immitating block data", Integer.valueOf(block.getMetaFromState(this.fallTile)));
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public World getWorldObj()
-    {
-        return this.worldObj;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public boolean canRenderOnFire()
-    {
-        return false;
-    }
-
     public IBlockState getBlock()
     {
         return this.fallTile;
     }
 }
