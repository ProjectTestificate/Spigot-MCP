--- decompiled\net\minecraft\tileentity\TileEntityBeacon.java
+++ src\main\java\net\minecraft\tileentity\TileEntityBeacon.java
@@ -1,11 +1,12 @@
 package net.minecraft.tileentity;
 
-import com.google.common.collect.Lists;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockStainedGlass;
 import net.minecraft.block.BlockStainedGlassPane;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.passive.EntitySheep;
@@ -25,29 +26,58 @@
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.server.gui.IUpdatePlayerListBox;
 import net.minecraft.stats.AchievementList;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+
+import com.google.common.collect.Lists;
+
 public class TileEntityBeacon extends TileEntityLockable implements IUpdatePlayerListBox, IInventory
 {
+
     public static final Potion[][] effectsList = new Potion[][] {{Potion.moveSpeed, Potion.digSpeed}, {Potion.resistance, Potion.jump}, {Potion.damageBoost}, {Potion.regeneration}};
     private final List field_174909_f = Lists.newArrayList();
-    @SideOnly(Side.CLIENT)
-    private long field_146016_i;
-    @SideOnly(Side.CLIENT)
-    private float field_146014_j;
     private boolean isComplete;
     private int levels = -1;
     private int primaryEffect;
     private int secondaryEffect;
     private ItemStack payment;
     private String customName;
     private static final String __OBFID = "CL_00000339";
 
+    // CraftBukkit start - add fields and methods
+    public List<CraftHumanEntity> transaction = new ArrayList<CraftHumanEntity>();
+    private int maxStack = MAX_STACK;
+
+    public net.minecraft.item.ItemStack[] getContents()
+    {
+        return new ItemStack[] {this.payment};
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public java.util.List getViewers()
+    {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
     public void update()
     {
         if (this.worldObj.getTotalWorldTime() % 80L == 0L)
         {
             this.func_174908_m();
@@ -208,67 +238,22 @@
                 entityplayer.triggerAchievement(AchievementList.fullBeacon);
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public List func_174907_n()
-    {
-        return this.field_174909_f;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float shouldBeamRender()
-    {
-        if (!this.isComplete)
-        {
-            return 0.0F;
-        }
-        else
-        {
-            int i = (int)(this.worldObj.getTotalWorldTime() - this.field_146016_i);
-            this.field_146016_i = this.worldObj.getTotalWorldTime();
-
-            if (i > 1)
-            {
-                this.field_146014_j -= (float)i / 40.0F;
-
-                if (this.field_146014_j < 0.0F)
-                {
-                    this.field_146014_j = 0.0F;
-                }
-            }
-
-            this.field_146014_j += 0.025F;
-
-            if (this.field_146014_j > 1.0F)
-            {
-                this.field_146014_j = 1.0F;
-            }
-
-            return this.field_146014_j;
-        }
-    }
-
     public Packet getDescriptionPacket()
     {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         this.writeToNBT(nbttagcompound);
         return new S35PacketUpdateTileEntity(this.pos, 3, nbttagcompound);
     }
 
-    @SideOnly(Side.CLIENT)
-    public double getMaxRenderDistanceSquared()
-    {
-        return 65536.0D;
-    }
-
     public void readFromNBT(NBTTagCompound compound)
     {
         super.readFromNBT(compound);
-        this.primaryEffect = compound.getInteger("Primary");
-        this.secondaryEffect = compound.getInteger("Secondary");
+        this.primaryEffect = validateEffect(compound.getInteger("Primary")); // CraftBukkit
+        this.secondaryEffect = validateEffect(compound.getInteger("Secondary"));  // CraftBukkit
         this.levels = compound.getInteger("Levels");
     }
 
     public void writeToNBT(NBTTagCompound compound)
     {
@@ -278,11 +263,11 @@
         compound.setInteger("Levels", this.levels);
     }
 
     public int getSizeInventory()
     {
-        return 1;
+        return maxStack; // CraftBukkit
     }
 
     public ItemStack getStackInSlot(int index)
     {
         return index == 0 ? this.payment : null;
@@ -355,13 +340,17 @@
     public boolean isUseableByPlayer(EntityPlayer player)
     {
         return this.worldObj.getTileEntity(this.pos) != this ? false : player.getDistanceSq((double)this.pos.getX() + 0.5D, (double)this.pos.getY() + 0.5D, (double)this.pos.getZ() + 0.5D) <= 64.0D;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player)
+    {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player)
+    {
+    }
 
     public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return stack.getItem() == Items.emerald || stack.getItem() == Items.diamond || stack.getItem() == Items.gold_ingot || stack.getItem() == Items.iron_ingot;
     }
@@ -397,14 +386,14 @@
         {
             case 0:
                 this.levels = value;
                 break;
             case 1:
-                this.primaryEffect = value;
+                this.primaryEffect = validateEffect(value); // CraftBukkit
                 break;
             case 2:
-                this.secondaryEffect = value;
+                this.secondaryEffect = validateEffect(value); // CraftBukkit
         }
     }
 
     public int getFieldCount()
     {
@@ -427,12 +416,36 @@
         {
             return super.receiveClientEvent(id, type);
         }
     }
 
+    // CraftBukkit start
+    public int validateEffect(int i)
+    {
+        i = i < 0 || i >= Potion.potionTypes.length || Potion.potionTypes[i] == null ? 0 : i;
+
+        switch (i)
+        {
+            case 1: // MobEffectList.FASTER_MOVEMENT.id
+            case 3: // MobEffectList.FASTER_DIG.id
+            case 11: // MobEffectList.RESISTANCE.id
+            case 8: // MobEffectList.JUMP.id
+            case 5: // MobEffectList.INCREASE_DAMAGE.id
+            case 10: // MobEffectList.REGENERATION.id
+                break;
+            default:
+                i = 0;
+                break;
+        }
+
+        return i;
+    }
+    // CraftBukkit end
+
     public static class BeamSegment
         {
+
             private final float[] field_177266_a;
             private int field_177265_b;
             private static final String __OBFID = "CL_00002042";
 
             public BeamSegment(float[] p_i45669_1_)
@@ -448,13 +461,7 @@
 
             public float[] func_177263_b()
             {
                 return this.field_177266_a;
             }
-
-            @SideOnly(Side.CLIENT)
-            public int func_177264_c()
-            {
-                return this.field_177265_b;
-            }
         }
 }
