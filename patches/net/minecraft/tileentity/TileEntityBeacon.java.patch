--- decompiled\net\minecraft\tileentity\TileEntityBeacon.java
+++ src\main\java\net\minecraft\tileentity\TileEntityBeacon.java
@@ -1,11 +1,12 @@
 package net.minecraft.tileentity;
 
-import com.google.common.collect.Lists;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
 import java.util.List;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockStainedGlass;
 import net.minecraft.block.BlockStainedGlassPane;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.passive.EntitySheep;
@@ -25,84 +26,97 @@
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.server.gui.IUpdatePlayerListBox;
 import net.minecraft.stats.AchievementList;
 import net.minecraft.util.AxisAlignedBB;
 import net.minecraft.util.BlockPos;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class TileEntityBeacon extends TileEntityLockable implements IUpdatePlayerListBox, IInventory
-{
-    public static final Potion[][] effectsList = new Potion[][] {{Potion.moveSpeed, Potion.digSpeed}, {Potion.resistance, Potion.jump}, {Potion.damageBoost}, {Potion.regeneration}};
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+
+import com.google.common.collect.Lists;
+
+public class TileEntityBeacon extends TileEntityLockable implements IUpdatePlayerListBox, IInventory {
+
+    public static final Potion[][] effectsList = new Potion[][]{{Potion.moveSpeed, Potion.digSpeed}, {Potion.resistance, Potion.jump}, {Potion.damageBoost}, {Potion.regeneration}};
     private final List field_174909_f = Lists.newArrayList();
-    @SideOnly(Side.CLIENT)
-    private long field_146016_i;
-    @SideOnly(Side.CLIENT)
-    private float field_146014_j;
     private boolean isComplete;
     private int levels = -1;
     private int primaryEffect;
     private int secondaryEffect;
     private ItemStack payment;
     private String customName;
     private static final String __OBFID = "CL_00000339";
 
-    public void update()
-    {
-        if (this.worldObj.getTotalWorldTime() % 80L == 0L)
-        {
+    // CraftBukkit start - add fields and methods
+    public List<CraftHumanEntity> transaction = new ArrayList<CraftHumanEntity>();
+    private int maxStack = MAX_STACK;
+
+    public net.minecraft.item.ItemStack[] getContents() {
+        return new ItemStack[]{this.payment};
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public java.util.List getViewers() {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
+    public void update() {
+        if (this.worldObj.getTotalWorldTime() % 80L == 0L) {
             this.func_174908_m();
         }
     }
 
-    public void func_174908_m()
-    {
+    public void func_174908_m() {
         this.func_146003_y();
         this.func_146000_x();
     }
 
-    private void func_146000_x()
-    {
-        if (this.isComplete && this.levels > 0 && !this.worldObj.isRemote && this.primaryEffect > 0)
-        {
-            double d0 = (double)(this.levels * 10 + 10);
+    private void func_146000_x() {
+        if (this.isComplete && this.levels > 0 && !this.worldObj.isRemote && this.primaryEffect > 0) {
+            double d0 = (double) (this.levels * 10 + 10);
             byte b0 = 0;
 
-            if (this.levels >= 4 && this.primaryEffect == this.secondaryEffect)
-            {
+            if (this.levels >= 4 && this.primaryEffect == this.secondaryEffect) {
                 b0 = 1;
             }
 
             int i = this.pos.getX();
             int j = this.pos.getY();
             int k = this.pos.getZ();
-            AxisAlignedBB axisalignedbb = (new AxisAlignedBB((double)i, (double)j, (double)k, (double)(i + 1), (double)(j + 1), (double)(k + 1))).expand(d0, d0, d0).addCoord(0.0D, (double)this.worldObj.getHeight(), 0.0D);
+            AxisAlignedBB axisalignedbb = (new AxisAlignedBB((double) i, (double) j, (double) k, (double) (i + 1), (double) (j + 1), (double) (k + 1))).expand(d0, d0, d0).addCoord(0.0D, (double) this.worldObj.getHeight(), 0.0D);
             List list = this.worldObj.getEntitiesWithinAABB(EntityPlayer.class, axisalignedbb);
             Iterator iterator = list.iterator();
             EntityPlayer entityplayer;
 
-            while (iterator.hasNext())
-            {
-                entityplayer = (EntityPlayer)iterator.next();
+            while (iterator.hasNext()) {
+                entityplayer = (EntityPlayer) iterator.next();
                 entityplayer.addPotionEffect(new PotionEffect(this.primaryEffect, 180, b0, true, true));
             }
 
-            if (this.levels >= 4 && this.primaryEffect != this.secondaryEffect && this.secondaryEffect > 0)
-            {
+            if (this.levels >= 4 && this.primaryEffect != this.secondaryEffect && this.secondaryEffect > 0) {
                 iterator = list.iterator();
 
-                while (iterator.hasNext())
-                {
-                    entityplayer = (EntityPlayer)iterator.next();
+                while (iterator.hasNext()) {
+                    entityplayer = (EntityPlayer) iterator.next();
                     entityplayer.addPotionEffect(new PotionEffect(this.secondaryEffect, 180, 0, true, true));
                 }
             }
         }
     }
 
-    private void func_146003_y()
-    {
+    private void func_146003_y() {
         int i = this.levels;
         int j = this.pos.getX();
         int k = this.pos.getY();
         int l = this.pos.getZ();
         this.levels = 0;
@@ -111,277 +125,186 @@
         TileEntityBeacon.BeamSegment beamsegment = new TileEntityBeacon.BeamSegment(EntitySheep.func_175513_a(EnumDyeColor.WHITE));
         this.field_174909_f.add(beamsegment);
         boolean flag = true;
         int i1;
 
-        for (i1 = k + 1; i1 < this.worldObj.getActualHeight(); ++i1)
-        {
+        for (i1 = k + 1; i1 < this.worldObj.getActualHeight(); ++i1) {
             BlockPos blockpos = new BlockPos(j, i1, l);
             IBlockState iblockstate = this.worldObj.getBlockState(blockpos);
             float[] afloat;
 
-            if (iblockstate.getBlock() == Blocks.stained_glass)
-            {
-                afloat = EntitySheep.func_175513_a((EnumDyeColor)iblockstate.getValue(BlockStainedGlass.COLOR));
-            }
-            else
-            {
-                if (iblockstate.getBlock() != Blocks.stained_glass_pane)
-                {
-                    if (iblockstate.getBlock().getLightOpacity() >= 15)
-                    {
+            if (iblockstate.getBlock() == Blocks.stained_glass) {
+                afloat = EntitySheep.func_175513_a((EnumDyeColor) iblockstate.getValue(BlockStainedGlass.COLOR));
+            } else {
+                if (iblockstate.getBlock() != Blocks.stained_glass_pane) {
+                    if (iblockstate.getBlock().getLightOpacity() >= 15) {
                         this.isComplete = false;
                         this.field_174909_f.clear();
                         break;
                     }
 
                     beamsegment.func_177262_a();
                     continue;
                 }
 
-                afloat = EntitySheep.func_175513_a((EnumDyeColor)iblockstate.getValue(BlockStainedGlassPane.COLOR));
+                afloat = EntitySheep.func_175513_a((EnumDyeColor) iblockstate.getValue(BlockStainedGlassPane.COLOR));
             }
 
-            if (!flag)
-            {
-                afloat = new float[] {(beamsegment.func_177263_b()[0] + afloat[0]) / 2.0F, (beamsegment.func_177263_b()[1] + afloat[1]) / 2.0F, (beamsegment.func_177263_b()[2] + afloat[2]) / 2.0F};
+            if (!flag) {
+                afloat = new float[]{(beamsegment.func_177263_b()[0] + afloat[0]) / 2.0F, (beamsegment.func_177263_b()[1] + afloat[1]) / 2.0F, (beamsegment.func_177263_b()[2] + afloat[2]) / 2.0F};
             }
 
-            if (Arrays.equals(afloat, beamsegment.func_177263_b()))
-            {
+            if (Arrays.equals(afloat, beamsegment.func_177263_b())) {
                 beamsegment.func_177262_a();
-            }
-            else
-            {
+            } else {
                 beamsegment = new TileEntityBeacon.BeamSegment(afloat);
                 this.field_174909_f.add(beamsegment);
             }
 
             flag = false;
         }
 
-        if (this.isComplete)
-        {
-            for (i1 = 1; i1 <= 4; this.levels = i1++)
-            {
+        if (this.isComplete) {
+            for (i1 = 1; i1 <= 4; this.levels = i1++) {
                 int k1 = k - i1;
 
-                if (k1 < 0)
-                {
+                if (k1 < 0) {
                     break;
                 }
 
                 boolean flag1 = true;
 
-                for (int l1 = j - i1; l1 <= j + i1 && flag1; ++l1)
-                {
-                    for (int j1 = l - i1; j1 <= l + i1; ++j1)
-                    {
+                for (int l1 = j - i1; l1 <= j + i1 && flag1; ++l1) {
+                    for (int j1 = l - i1; j1 <= l + i1; ++j1) {
                         Block block = this.worldObj.getBlockState(new BlockPos(l1, k1, j1)).getBlock();
 
-                        if (block != Blocks.emerald_block && block != Blocks.gold_block && block != Blocks.diamond_block && block != Blocks.iron_block)
-                        {
+                        if (block != Blocks.emerald_block && block != Blocks.gold_block && block != Blocks.diamond_block && block != Blocks.iron_block) {
                             flag1 = false;
                             break;
                         }
                     }
                 }
 
-                if (!flag1)
-                {
+                if (!flag1) {
                     break;
                 }
             }
 
-            if (this.levels == 0)
-            {
+            if (this.levels == 0) {
                 this.isComplete = false;
             }
         }
 
-        if (!this.worldObj.isRemote && this.levels == 4 && i < this.levels)
-        {
-            Iterator iterator = this.worldObj.getEntitiesWithinAABB(EntityPlayer.class, (new AxisAlignedBB((double)j, (double)k, (double)l, (double)j, (double)(k - 4), (double)l)).expand(10.0D, 5.0D, 10.0D)).iterator();
+        if (!this.worldObj.isRemote && this.levels == 4 && i < this.levels) {
+            Iterator iterator = this.worldObj.getEntitiesWithinAABB(EntityPlayer.class, (new AxisAlignedBB((double) j, (double) k, (double) l, (double) j, (double) (k - 4), (double) l)).expand(10.0D, 5.0D, 10.0D)).iterator();
 
-            while (iterator.hasNext())
-            {
-                EntityPlayer entityplayer = (EntityPlayer)iterator.next();
+            while (iterator.hasNext()) {
+                EntityPlayer entityplayer = (EntityPlayer) iterator.next();
                 entityplayer.triggerAchievement(AchievementList.fullBeacon);
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    public List func_174907_n()
-    {
-        return this.field_174909_f;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public float shouldBeamRender()
-    {
-        if (!this.isComplete)
-        {
-            return 0.0F;
-        }
-        else
-        {
-            int i = (int)(this.worldObj.getTotalWorldTime() - this.field_146016_i);
-            this.field_146016_i = this.worldObj.getTotalWorldTime();
-
-            if (i > 1)
-            {
-                this.field_146014_j -= (float)i / 40.0F;
-
-                if (this.field_146014_j < 0.0F)
-                {
-                    this.field_146014_j = 0.0F;
-                }
-            }
-
-            this.field_146014_j += 0.025F;
-
-            if (this.field_146014_j > 1.0F)
-            {
-                this.field_146014_j = 1.0F;
-            }
-
-            return this.field_146014_j;
-        }
-    }
-
-    public Packet getDescriptionPacket()
-    {
+    public Packet getDescriptionPacket() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         this.writeToNBT(nbttagcompound);
         return new S35PacketUpdateTileEntity(this.pos, 3, nbttagcompound);
     }
 
-    @SideOnly(Side.CLIENT)
-    public double getMaxRenderDistanceSquared()
-    {
-        return 65536.0D;
-    }
-
-    public void readFromNBT(NBTTagCompound compound)
-    {
+    public void readFromNBT(NBTTagCompound compound) {
         super.readFromNBT(compound);
-        this.primaryEffect = compound.getInteger("Primary");
-        this.secondaryEffect = compound.getInteger("Secondary");
+        this.primaryEffect = validateEffect(compound.getInteger("Primary")); // CraftBukkit
+        this.secondaryEffect = validateEffect(compound.getInteger("Secondary"));  // CraftBukkit
         this.levels = compound.getInteger("Levels");
     }
 
-    public void writeToNBT(NBTTagCompound compound)
-    {
+    public void writeToNBT(NBTTagCompound compound) {
         super.writeToNBT(compound);
         compound.setInteger("Primary", this.primaryEffect);
         compound.setInteger("Secondary", this.secondaryEffect);
         compound.setInteger("Levels", this.levels);
     }
 
-    public int getSizeInventory()
-    {
-        return 1;
+    public int getSizeInventory() {
+        return maxStack; // CraftBukkit
     }
 
-    public ItemStack getStackInSlot(int index)
-    {
+    public ItemStack getStackInSlot(int index) {
         return index == 0 ? this.payment : null;
     }
 
-    public ItemStack decrStackSize(int index, int count)
-    {
-        if (index == 0 && this.payment != null)
-        {
-            if (count >= this.payment.stackSize)
-            {
+    public ItemStack decrStackSize(int index, int count) {
+        if (index == 0 && this.payment != null) {
+            if (count >= this.payment.stackSize) {
                 ItemStack itemstack = this.payment;
                 this.payment = null;
                 return itemstack;
-            }
-            else
-            {
+            } else {
                 this.payment.stackSize -= count;
                 return new ItemStack(this.payment.getItem(), count, this.payment.getMetadata());
             }
-        }
-        else
-        {
+        } else {
             return null;
         }
     }
 
-    public ItemStack getStackInSlotOnClosing(int index)
-    {
-        if (index == 0 && this.payment != null)
-        {
+    public ItemStack getStackInSlotOnClosing(int index) {
+        if (index == 0 && this.payment != null) {
             ItemStack itemstack = this.payment;
             this.payment = null;
             return itemstack;
-        }
-        else
-        {
+        } else {
             return null;
         }
     }
 
-    public void setInventorySlotContents(int index, ItemStack stack)
-    {
-        if (index == 0)
-        {
+    public void setInventorySlotContents(int index, ItemStack stack) {
+        if (index == 0) {
             this.payment = stack;
         }
     }
 
-    public String getName()
-    {
+    public String getName() {
         return this.hasCustomName() ? this.customName : "container.beacon";
     }
 
-    public boolean hasCustomName()
-    {
+    public boolean hasCustomName() {
         return this.customName != null && this.customName.length() > 0;
     }
 
-    public void func_145999_a(String p_145999_1_)
-    {
+    public void func_145999_a(String p_145999_1_) {
         this.customName = p_145999_1_;
     }
 
-    public int getInventoryStackLimit()
-    {
+    public int getInventoryStackLimit() {
         return 1;
     }
 
-    public boolean isUseableByPlayer(EntityPlayer player)
-    {
-        return this.worldObj.getTileEntity(this.pos) != this ? false : player.getDistanceSq((double)this.pos.getX() + 0.5D, (double)this.pos.getY() + 0.5D, (double)this.pos.getZ() + 0.5D) <= 64.0D;
+    public boolean isUseableByPlayer(EntityPlayer player) {
+        return this.worldObj.getTileEntity(this.pos) != this ? false : player.getDistanceSq((double) this.pos.getX() + 0.5D, (double) this.pos.getY() + 0.5D, (double) this.pos.getZ() + 0.5D) <= 64.0D;
     }
 
-    public void openInventory(EntityPlayer player) {}
+    public void openInventory(EntityPlayer player) {
+    }
 
-    public void closeInventory(EntityPlayer player) {}
+    public void closeInventory(EntityPlayer player) {
+    }
 
-    public boolean isItemValidForSlot(int index, ItemStack stack)
-    {
+    public boolean isItemValidForSlot(int index, ItemStack stack) {
         return stack.getItem() == Items.emerald || stack.getItem() == Items.diamond || stack.getItem() == Items.gold_ingot || stack.getItem() == Items.iron_ingot;
     }
 
-    public String getGuiID()
-    {
+    public String getGuiID() {
         return "minecraft:beacon";
     }
 
-    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
-    {
+    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn) {
         return new ContainerBeacon(playerInventory, this);
     }
 
-    public int getField(int id)
-    {
-        switch (id)
-        {
+    public int getField(int id) {
+        switch (id) {
             case 0:
                 return this.levels;
             case 1:
                 return this.primaryEffect;
             case 2:
@@ -389,72 +312,74 @@
             default:
                 return 0;
         }
     }
 
-    public void setField(int id, int value)
-    {
-        switch (id)
-        {
+    public void setField(int id, int value) {
+        switch (id) {
             case 0:
                 this.levels = value;
                 break;
             case 1:
-                this.primaryEffect = value;
+                this.primaryEffect = validateEffect(value); // CraftBukkit
                 break;
             case 2:
-                this.secondaryEffect = value;
+                this.secondaryEffect = validateEffect(value); // CraftBukkit
         }
     }
 
-    public int getFieldCount()
-    {
+    public int getFieldCount() {
         return 3;
     }
 
-    public void clear()
-    {
+    public void clear() {
         this.payment = null;
     }
 
-    public boolean receiveClientEvent(int id, int type)
-    {
-        if (id == 1)
-        {
+    public boolean receiveClientEvent(int id, int type) {
+        if (id == 1) {
             this.func_174908_m();
             return true;
-        }
-        else
-        {
+        } else {
             return super.receiveClientEvent(id, type);
         }
     }
 
-    public static class BeamSegment
-        {
-            private final float[] field_177266_a;
-            private int field_177265_b;
-            private static final String __OBFID = "CL_00002042";
+    // CraftBukkit start
+    public int validateEffect(int i) {
+        i = i < 0 || i >= Potion.potionTypes.length || Potion.potionTypes[i] == null ? 0 : i;
+        switch (i) {
+            case 1: // MobEffectList.FASTER_MOVEMENT.id
+            case 3: // MobEffectList.FASTER_DIG.id
+            case 11: // MobEffectList.RESISTANCE.id
+            case 8: // MobEffectList.JUMP.id
+            case 5: // MobEffectList.INCREASE_DAMAGE.id
+            case 10: // MobEffectList.REGENERATION.id
+                break;
+            default:
+                i = 0;
+                break;
+        }
+        return i;
+    }
+    // CraftBukkit end
 
-            public BeamSegment(float[] p_i45669_1_)
-            {
-                this.field_177266_a = p_i45669_1_;
-                this.field_177265_b = 1;
-            }
+    public static class BeamSegment {
 
-            protected void func_177262_a()
-            {
-                ++this.field_177265_b;
-            }
+        private final float[] field_177266_a;
+        private int field_177265_b;
+        private static final String __OBFID = "CL_00002042";
 
-            public float[] func_177263_b()
-            {
-                return this.field_177266_a;
-            }
+        public BeamSegment(float[] p_i45669_1_) {
+            this.field_177266_a = p_i45669_1_;
+            this.field_177265_b = 1;
+        }
 
-            @SideOnly(Side.CLIENT)
-            public int func_177264_c()
-            {
-                return this.field_177265_b;
-            }
+        protected void func_177262_a() {
+            ++this.field_177265_b;
         }
+
+        public float[] func_177263_b() {
+            return this.field_177266_a;
+        }
+    }
 }
