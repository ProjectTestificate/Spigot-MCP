--- decompiled\net\minecraft\tileentity\TileEntityBanner.java
+++ src\main\java\net\minecraft\tileentity\TileEntityBanner.java
@@ -1,195 +1,113 @@
 package net.minecraft.tileentity;
 
-import com.google.common.collect.Lists;
 import java.util.List;
+
 import net.minecraft.block.BlockFlower;
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
-import net.minecraft.item.EnumDyeColor;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.network.Packet;
 import net.minecraft.network.play.server.S35PacketUpdateTileEntity;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class TileEntityBanner extends TileEntity
-{
-    private int baseColor;
-    private NBTTagList patterns;
+public class TileEntityBanner extends TileEntity {
+
+    public int baseColor; // SpigotMCP -- Apply access transformation
+    public NBTTagList patterns; // SpigotMCP -- Apply access transformation
     private boolean field_175119_g;
     private List patternList;
     private List colorList;
     private String field_175121_j;
     private static final String __OBFID = "CL_00002044";
 
-    public void setItemValues(ItemStack stack)
-    {
+    public void setItemValues(ItemStack stack) {
         this.patterns = null;
 
-        if (stack.hasTagCompound() && stack.getTagCompound().hasKey("BlockEntityTag", 10))
-        {
+        if (stack.hasTagCompound() && stack.getTagCompound().hasKey("BlockEntityTag", 10)) {
             NBTTagCompound nbttagcompound = stack.getTagCompound().getCompoundTag("BlockEntityTag");
 
-            if (nbttagcompound.hasKey("Patterns"))
-            {
-                this.patterns = (NBTTagList)nbttagcompound.getTagList("Patterns", 10).copy();
+            if (nbttagcompound.hasKey("Patterns")) {
+                this.patterns = (NBTTagList) nbttagcompound.getTagList("Patterns", 10).copy();
             }
 
-            if (nbttagcompound.hasKey("Base", 99))
-            {
+            if (nbttagcompound.hasKey("Base", 99)) {
                 this.baseColor = nbttagcompound.getInteger("Base");
-            }
-            else
-            {
+            } else {
                 this.baseColor = stack.getMetadata() & 15;
             }
-        }
-        else
-        {
+        } else {
             this.baseColor = stack.getMetadata() & 15;
         }
 
         this.patternList = null;
         this.colorList = null;
         this.field_175121_j = "";
         this.field_175119_g = true;
     }
 
-    public void writeToNBT(NBTTagCompound compound)
-    {
+    public void writeToNBT(NBTTagCompound compound) {
         super.writeToNBT(compound);
         compound.setInteger("Base", this.baseColor);
 
-        if (this.patterns != null)
-        {
+        if (this.patterns != null) {
             compound.setTag("Patterns", this.patterns);
         }
     }
 
-    public void readFromNBT(NBTTagCompound compound)
-    {
+    public void readFromNBT(NBTTagCompound compound) {
         super.readFromNBT(compound);
         this.baseColor = compound.getInteger("Base");
         this.patterns = compound.getTagList("Patterns", 10);
         this.patternList = null;
         this.colorList = null;
         this.field_175121_j = null;
         this.field_175119_g = true;
     }
 
-    public Packet getDescriptionPacket()
-    {
+    public Packet getDescriptionPacket() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         this.writeToNBT(nbttagcompound);
         return new S35PacketUpdateTileEntity(this.pos, 6, nbttagcompound);
     }
 
-    public int getBaseColor()
-    {
+    public int getBaseColor() {
         return this.baseColor;
     }
 
-    public static int getBaseColor(ItemStack stack)
-    {
+    public static int getBaseColor(ItemStack stack) {
         NBTTagCompound nbttagcompound = stack.getSubCompound("BlockEntityTag", false);
         return nbttagcompound != null && nbttagcompound.hasKey("Base") ? nbttagcompound.getInteger("Base") : stack.getMetadata();
     }
 
-    public static int getPatterns(ItemStack stack)
-    {
+    public static int getPatterns(ItemStack stack) {
         NBTTagCompound nbttagcompound = stack.getSubCompound("BlockEntityTag", false);
         return nbttagcompound != null && nbttagcompound.hasKey("Patterns") ? nbttagcompound.getTagList("Patterns", 10).tagCount() : 0;
     }
 
-    @SideOnly(Side.CLIENT)
-    public List getPatternList()
-    {
-        this.initializeBannerData();
-        return this.patternList;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public List getColorList()
-    {
-        this.initializeBannerData();
-        return this.colorList;
-    }
-
-    @SideOnly(Side.CLIENT)
-    public String func_175116_e()
-    {
-        this.initializeBannerData();
-        return this.field_175121_j;
-    }
-
-    public static void removeBannerData(ItemStack stack)
-    {
+    public static void removeBannerData(ItemStack stack) {
         NBTTagCompound nbttagcompound = stack.getSubCompound("BlockEntityTag", false);
 
-        if (nbttagcompound != null && nbttagcompound.hasKey("Patterns", 9))
-        {
+        if (nbttagcompound != null && nbttagcompound.hasKey("Patterns", 9)) {
             NBTTagList nbttaglist = nbttagcompound.getTagList("Patterns", 10);
 
-            if (nbttaglist.tagCount() > 0)
-            {
+            if (nbttaglist.tagCount() > 0) {
                 nbttaglist.removeTag(nbttaglist.tagCount() - 1);
 
-                if (nbttaglist.hasNoTags())
-                {
+                if (nbttaglist.hasNoTags()) {
                     stack.getTagCompound().removeTag("BlockEntityTag");
 
-                    if (stack.getTagCompound().hasNoTags())
-                    {
-                        stack.setTagCompound((NBTTagCompound)null);
+                    if (stack.getTagCompound().hasNoTags()) {
+                        stack.setTagCompound((NBTTagCompound) null);
                     }
                 }
             }
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    private void initializeBannerData()
-    {
-        if (this.patternList == null || this.colorList == null || this.field_175121_j == null)
-        {
-            if (!this.field_175119_g)
-            {
-                this.field_175121_j = "";
-            }
-            else
-            {
-                this.patternList = Lists.newArrayList();
-                this.colorList = Lists.newArrayList();
-                this.patternList.add(TileEntityBanner.EnumBannerPattern.BASE);
-                this.colorList.add(EnumDyeColor.byDyeDamage(this.baseColor));
-                this.field_175121_j = "b" + this.baseColor;
-
-                if (this.patterns != null)
-                {
-                    for (int i = 0; i < this.patterns.tagCount(); ++i)
-                    {
-                        NBTTagCompound nbttagcompound = this.patterns.getCompoundTagAt(i);
-                        TileEntityBanner.EnumBannerPattern enumbannerpattern = TileEntityBanner.EnumBannerPattern.getPatternByID(nbttagcompound.getString("Pattern"));
-
-                        if (enumbannerpattern != null)
-                        {
-                            this.patternList.add(enumbannerpattern);
-                            int j = nbttagcompound.getInteger("Color");
-                            this.colorList.add(EnumDyeColor.byDyeDamage(j));
-                            this.field_175121_j = this.field_175121_j + enumbannerpattern.getPatternID() + j;
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    public static enum EnumBannerPattern
-    {
+    public static enum EnumBannerPattern {
         BASE("base", "b"),
         SQUARE_BOTTOM_LEFT("square_bottom_left", "bl", "   ", "   ", "#  "),
         SQUARE_BOTTOM_RIGHT("square_bottom_right", "br", "   ", "   ", "  #"),
         SQUARE_TOP_LEFT("square_top_left", "tl", "#  ", "   ", "   "),
         SQUARE_TOP_RIGHT("square_top_right", "tr", "  #", "   ", "   "),
@@ -232,77 +150,44 @@
         private String[] craftingLayers;
         private ItemStack patternCraftingStack;
 
         private static final String __OBFID = "CL_00002043";
 
-        private EnumBannerPattern(String name, String id)
-        {
+        private EnumBannerPattern(String name, String id) {
             this.craftingLayers = new String[3];
             this.patternName = name;
             this.patternID = id;
         }
 
-        private EnumBannerPattern(String name, String id, ItemStack craftingItem)
-        {
+        private EnumBannerPattern(String name, String id, ItemStack craftingItem) {
             this(name, id);
             this.patternCraftingStack = craftingItem;
         }
 
-        private EnumBannerPattern(String name, String id, String craftingTop, String craftingMid, String craftingBot)
-        {
+        private EnumBannerPattern(String name, String id, String craftingTop, String craftingMid, String craftingBot) {
             this(name, id);
             this.craftingLayers[0] = craftingTop;
             this.craftingLayers[1] = craftingMid;
             this.craftingLayers[2] = craftingBot;
         }
 
-        @SideOnly(Side.CLIENT)
-        public String getPatternName()
-        {
-            return this.patternName;
-        }
-
-        public String getPatternID()
-        {
+        public String getPatternID() {
             return this.patternID;
         }
 
-        public String[] getCraftingLayers()
-        {
+        public String[] getCraftingLayers() {
             return this.craftingLayers;
         }
 
-        public boolean hasValidCrafting()
-        {
+        public boolean hasValidCrafting() {
             return this.patternCraftingStack != null || this.craftingLayers[0] != null;
         }
 
-        public boolean hasCraftingStack()
-        {
+        public boolean hasCraftingStack() {
             return this.patternCraftingStack != null;
         }
 
-        public ItemStack getCraftingStack()
-        {
+        public ItemStack getCraftingStack() {
             return this.patternCraftingStack;
         }
-
-        @SideOnly(Side.CLIENT)
-        public static TileEntityBanner.EnumBannerPattern getPatternByID(String id)
-        {
-            TileEntityBanner.EnumBannerPattern[] aenumbannerpattern = values();
-            int i = aenumbannerpattern.length;
-
-            for (int j = 0; j < i; ++j)
-            {
-                TileEntityBanner.EnumBannerPattern enumbannerpattern = aenumbannerpattern[j];
-
-                if (enumbannerpattern.patternID.equals(id))
-                {
-                    return enumbannerpattern;
-                }
-            }
-
-            return null;
-        }
     }
 }
